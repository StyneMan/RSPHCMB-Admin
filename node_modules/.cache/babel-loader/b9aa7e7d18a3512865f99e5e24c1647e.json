{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/health_access.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport { Backdrop, Button, CircularProgress, Container, Divider, Grid, IconButton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { updateDoc, db, doc, ref, uploadBytesResumable, setDoc } from \"../../../../../data/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst HealthAccess = () => {\n  _s();\n\n  const {\n    healthAccess\n  } = useSelector(state => state.homepage);\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.goBack(),\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIosNew, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 22\n        }, this),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: healthAccess === null || healthAccess === void 0 ? void 0 : healthAccess.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mt: 1,\n                textTransform: \"none\"\n              },\n              variant: \"contained\",\n              children: \"Update Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"TITLE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: healthAccess === null || healthAccess === void 0 ? void 0 : healthAccess.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"DESCRIPTION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: healthAccess === null || healthAccess === void 0 ? void 0 : healthAccess.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HealthAccess, \"RmtkbhJcBT2tTyzJkxoqfWvJqAk=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c2 = HealthAccess;\n\nconst UpdateTitle = props => {\n  _s2();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\"\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const updateTitle = async e => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title\n    }); //No image is changed. So update all text\n\n    const timeNow = new Date();\n\n    try {\n      const mRef = doc(db, \"health-access\", \"\" + id);\n      await updateDoc(mRef, {\n        title: formValues.name,\n        updatedAt: timeNow\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Title updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateTitle,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"name\",\n        label: \"Name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"name\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UpdateTitle, \"sF92Lu2tnPASWy0qYki7l3dn5b8=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c3 = UpdateTitle;\nexport default HealthAccess;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"HealthAccess\");\n$RefreshReg$(_c3, \"UpdateTitle\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/health_access.js"],"names":["ArrowBackIosNew","Edit","Backdrop","Button","CircularProgress","Container","Divider","Grid","IconButton","Typography","Box","React","useSelector","useHistory","MUIRichTextEditor","makeStyles","useSnackbar","ValidatorForm","TextValidator","updateDoc","db","doc","ref","uploadBytesResumable","setDoc","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","HealthAccess","healthAccess","state","homepage","history","goBack","mt","textTransform","title","description","UpdateTitle","classes","setOpen","id","formValues","setFormValues","useState","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","target","prevData","updateTitle","timeNow","Date","mRef","updatedAt","variant","error","message","zIndex"],"mappings":"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","sourcesContent":["import { ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport {\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  updateDoc,\n  db,\n  doc,\n  ref,\n  uploadBytesResumable,\n  setDoc,\n} from \"../../../../../data/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst HealthAccess = () => {\n  const { healthAccess } = useSelector((state) => state.homepage);\n  const history = useHistory();\n\n  return (\n    <div>\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={healthAccess?.image} alt=\"\" />\n              <Button sx={{ mt: 1, textTransform: \"none\" }} variant=\"contained\">\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">TITLE</Typography>\n                <IconButton>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{healthAccess?.title}</Typography>\n              <br />\n              <br />\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">DESCRIPTION</Typography>\n                <IconButton>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{healthAccess?.description}</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst UpdateTitle = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateTitle = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"health-access\", \"\" + id);\n      await updateDoc(mRef, {\n        title: formValues.name,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Title updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateTitle}>\n        <TextValidator\n          className={classes.mb}\n          id=\"name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default HealthAccess;\n"]},"metadata":{},"sourceType":"module"}