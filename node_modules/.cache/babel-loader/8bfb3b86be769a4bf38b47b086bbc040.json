{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/vision_section.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, TextField } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 210,\n    height: 200\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst VisionSection = () => {\n  _s();\n\n  var _location$state2, _location$state3;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const [formValues, setFormValues] = React.useState({\n    vision: location === null || location === void 0 ? void 0 : location.state.vision,\n    image: \"\",\n    mission: location === null || location === void 0 ? void 0 : location.state.mission\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"rsphcmb_who_we_are/vision_image\");\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false); // console.log(error);\n\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n\n        try {\n          await updateDoc(mRef, {\n            vision: formValues.vision,\n            mission: formValues.mission,\n            updatedAt: timeNow,\n            visionImage: downloadURL\n          });\n          setIsLoading(false);\n          enqueueSnackbar(`Data updated successfully`, {\n            variant: \"success\"\n          });\n          history.goBack();\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateData = async e => {\n    var _location$state;\n\n    setIsLoading(true);\n    setFormValues({\n      vision: formValues.vision ? formValues.vision : location === null || location === void 0 ? void 0 : location.state.vision,\n      mission: formValues.mission ? formValues.mission : location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.mission\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n        await updateDoc(mRef, {\n          vision: formValues.vision,\n          mission: formValues.mission,\n          updatedAt: timeNow\n        });\n        setIsLoading(false);\n        enqueueSnackbar(`Service updated successfully`, {\n          variant: \"success\"\n        });\n        history.goBack();\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      }\n    } else {\n      //Change only the featured image and all texts\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/vision_image\");\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIosNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 26\n      }, this),\n      onClick: () => history.goBack(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateData,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.image,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-static\",\n        multiline: true,\n        value: formValues.vision === \" \" ? location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.vision : !formValues.vision ? \"\" : formValues.vision,\n        onChange: handleChange,\n        name: \"vision\",\n        rows: 3,\n        fullWidth: true,\n        required: true,\n        className: classes.mb,\n        label: \"Vision\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-static\",\n        multiline: true,\n        label: \"Mission statement\",\n        placeholder: \"Type mission statement here...\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.mission,\n        onChange: handleChange,\n        name: \"mission\",\n        rows: 3,\n        fullWidth: true,\n        required: true,\n        className: classes.mb,\n        label: \"Vision\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        multiLine: true,\n        rows: 2,\n        rowsMax: 2,\n        label: \"Mission statement\",\n        placeholder: \"Type mission statement here...\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.mission,\n        onChange: handleChange,\n        name: \"mission\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Mission statement is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VisionSection, \"aG7ttKSN3WVxr/ghf964EZM3t28=\", false, function () {\n  return [useStyles, useHistory, useLocation, useSnackbar];\n});\n\n_c2 = VisionSection;\nexport default VisionSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"VisionSection\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/vision_section.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","deleteObject","updateDoc","useSnackbar","Backdrop","Box","CircularProgress","TextField","Typography","Grid","useHistory","useLocation","ArrowBackIosNew","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","VisionSection","classes","history","location","formValues","setFormValues","useState","vision","state","mission","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","enqueueSnackbar","handleChange","e","id","name","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","updatedAt","visionImage","goBack","updateData","fileRef","catch","console","log","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, TextField } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 210,\n    height: 200,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst VisionSection = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [formValues, setFormValues] = React.useState({\n    vision: location?.state.vision,\n    image: \"\",\n    mission: location?.state.mission,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"rsphcmb_who_we_are/vision_image\");\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"about\", \"rsphcmb\");\n          try {\n            await updateDoc(mRef, {\n              vision: formValues.vision,\n              mission: formValues.mission,\n              updatedAt: timeNow,\n              visionImage: downloadURL,\n            });\n            setIsLoading(false);\n            enqueueSnackbar(`Data updated successfully`, {\n              variant: \"success\",\n            });\n            history.goBack();\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateData = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      vision: formValues.vision ? formValues.vision : location?.state.vision,\n      mission: formValues.mission\n        ? formValues.mission\n        : location?.state?.mission,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n        await updateDoc(mRef, {\n          vision: formValues.vision,\n          mission: formValues.mission,\n          updatedAt: timeNow,\n        });\n        setIsLoading(false);\n        enqueueSnackbar(`Service updated successfully`, {\n          variant: \"success\",\n        });\n        history.goBack();\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change only the featured image and all texts\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/vision_image\");\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <ValidatorForm onSubmit={updateData}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : location?.state?.image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          value={\n            formValues.vision === \" \"\n              ? location?.state?.vision\n              : !formValues.vision\n              ? \"\"\n              : formValues.vision\n          }\n          onChange={handleChange}\n          name=\"vision\"\n          rows={3}\n          fullWidth\n          required\n          className={classes.mb}\n          label=\"Vision\"\n        />\n        <br />\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          label=\"Mission statement\"\n          placeholder=\"Type mission statement here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.mission}\n          onChange={handleChange}\n          name=\"mission\"\n          rows={3}\n          fullWidth\n          required\n          className={classes.mb}\n          label=\"Vision\"\n        />\n\n        <TextValidator\n          className={classes.mb}\n          multiLine={true}\n          rows={2}\n          rowsMax={2}\n          label=\"Mission statement\"\n          placeholder=\"Type mission statement here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.mission}\n          onChange={handleChange}\n          name=\"mission\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Mission statement is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default VisionSection;\n"]},"metadata":{},"sourceType":"module"}