{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_sub_album.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc, ref, uploadBytesResumable, storage, getDownloadURL } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Avatar, CircularProgress, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst UpdateSubAlbumForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    list,\n    image,\n    desc,\n    index\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    desc: desc\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"gallery/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false); // console.log(error);\n\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"gallery\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Gallery updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const addRecord = async e => {\n    setIsLoading(true);\n    list = Object.assign([], list);\n    let object = list[index]; // list?.push({\n    //   desc: formValues.desc,\n    // });\n    // console.log(\"OBJECT\", object);\n    // const mRef = doc(db, \"gallery\", \"\" + id);\n\n    if (!previewImage) {\n      try {\n        const mRef = doc(db, \"gallery\", \"\" + id);\n        let obj = { ...object,\n          desc: \"Hello\",\n          image: \"http://jkfdjb\"\n        };\n        console.log(\"OBJEC2\", obj);\n        await updateDoc(mRef, {\n          title: formValues.title\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Gallery updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check internet connection\"}`, {\n          variant: \"error\"\n        });\n      }\n    } else {\n      uploadNewImage();\n    } // try {\n    //   await updateDoc(mRef, {\n    //     items: list[id],\n    //   });\n    //   setOpen(false);\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`Department function added successfully`, {\n    //     variant: \"success\",\n    //   });\n    // } catch (error) {\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n    //     variant: \"error\",\n    //   });\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: addRecord,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Text\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.text,\n        onChange: handleChange,\n        name: \"text\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Text is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : image,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateSubAlbumForm, \"lsHKAUj9f99oOPvtEzctkQK8xs8=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = UpdateSubAlbumForm;\nexport default UpdateSubAlbumForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"UpdateSubAlbumForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_sub_album.js"],"names":["React","ValidatorForm","TextValidator","Button","db","doc","updateDoc","ref","uploadBytesResumable","storage","getDownloadURL","useSnackbar","Backdrop","Avatar","CircularProgress","Grid","Typography","Box","makeStyles","useStyles","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","UpdateSubAlbumForm","classes","setOpen","id","list","desc","index","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","enqueueSnackbar","handleChange","e","name","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","title","addRecord","Object","assign","object","obj","console","log","zIndex","text"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  doc,\n  updateDoc,\n  ref,\n  uploadBytesResumable,\n  storage,\n  getDownloadURL,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Avatar, CircularProgress, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(() => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst UpdateSubAlbumForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, list, image, desc, index } = props;\n  const [formValues, setFormValues] = React.useState({\n    desc: desc,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"gallery/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"gallery\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Gallery updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const addRecord = async (e) => {\n    setIsLoading(true);\n    list = Object.assign([], list);\n    let object = list[index];\n    // list?.push({\n    //   desc: formValues.desc,\n    // });\n    // console.log(\"OBJECT\", object);\n\n    // const mRef = doc(db, \"gallery\", \"\" + id);\n\n    if (!previewImage) {\n      try {\n        const mRef = doc(db, \"gallery\", \"\" + id);\n        let obj = { ...object, desc: \"Hello\", image: \"http://jkfdjb\" };\n        console.log(\"OBJEC2\", obj);\n        await updateDoc(mRef, {\n          title: formValues.title,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Gallery updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      uploadNewImage();\n    }\n\n    // try {\n    //   await updateDoc(mRef, {\n    //     items: list[id],\n    //   });\n    //   setOpen(false);\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`Department function added successfully`, {\n    //     variant: \"success\",\n    //   });\n    // } catch (error) {\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n    //     variant: \"error\",\n    //   });\n    // }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={addRecord}>\n        <TextValidator\n          label=\"Text\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.text}\n          onChange={handleChange}\n          name=\"text\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Text is required\"]}\n        />\n        <br />\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateSubAlbumForm;\n"]},"metadata":{},"sourceType":"module"}