{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_dept_function.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, setDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddDeptFunctionForm = props => {\n  _s();\n\n  let {\n    setOpen,\n    deptId\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    text: \"\"\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const addRecord = e => {\n    const timeNow = new Date();\n    setIsLoading(true);\n    setDoc(doc(db, \"dept-functions\", `${timeNow.getTime()}`), {\n      id: timeNow.getTime(),\n      department: deptId,\n      function: formValues.text\n    }).then(() => {\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Department function added successfully`, {\n        variant: \"success\"\n      });\n    }).catch(error => {\n      setIsLoading(false);\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet!\"}`, {\n        variant: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: addRecord,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Function\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.text,\n        onChange: handleChange,\n        name: \"text\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Function is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddDeptFunctionForm, \"WvJz7MlJSTXAF+fpTPSYeTcJUt4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = AddDeptFunctionForm;\nexport default AddDeptFunctionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDeptFunctionForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_dept_function.js"],"names":["React","ValidatorForm","TextValidator","Button","db","doc","setDoc","useSnackbar","Backdrop","CircularProgress","AddDeptFunctionForm","props","setOpen","deptId","formValues","setFormValues","useState","text","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","addRecord","timeNow","Date","getTime","id","department","function","then","variant","catch","error","message","zIndex","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, setDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst AddDeptFunctionForm = (props) => {\n  let { setOpen, deptId } = props;\n  const [formValues, setFormValues] = React.useState({\n    text: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const addRecord = (e) => {\n    const timeNow = new Date();\n    setIsLoading(true);\n    setDoc(doc(db, \"dept-functions\", `${timeNow.getTime()}`), {\n      id: timeNow.getTime(),\n      department: deptId,\n      function: formValues.text,\n    })\n      .then(() => {\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Department function added successfully`, {\n          variant: \"success\",\n        });\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n          variant: \"error\",\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={addRecord}>\n        <TextValidator\n          label=\"Function\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.text}\n          onChange={handleChange}\n          name=\"text\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Function is required\"]}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddDeptFunctionForm;\n"]},"metadata":{},"sourceType":"module"}