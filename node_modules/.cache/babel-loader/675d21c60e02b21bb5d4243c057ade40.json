{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/password.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { useHistory } from \"react-router-dom\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { RefreshOutlined } from \"@mui/icons-material\"; // import { useDispatch } from \"react-redux\";\n// import { setMyData, setUserData } from \"../../data/redux/slice/user\";\n\nimport { auth } from \"../../data/firebase\";\nimport { resetPassword } from \"../../domain/service\";\nimport image from \"../../assets/images/logo.svg\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [formValues, setFormValues] = React.useState({\n    email: \"\"\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const submitForm = async e => {\n    setIsLoading(true);\n    resetPassword(auth, formValues.email).then(resp => {\n      setIsLoading(false);\n      enqueueSnackbar(`Password reset link sent to ${formValues.email}`, {\n        variant: \"success\"\n      });\n    }).catch(error => {\n      setIsLoading(false);\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection!\"}`, {\n        variant: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      paddingTop: 5,\n      paddingBottom: 8,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"start\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        pb: 1,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"\",\n          width: \"64%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        fontSize: 14,\n        fontWeight: \"600\",\n        paddingBottom: 4,\n        textAlign: \"center\",\n        children: \"Enter your email to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          value: formValues.email,\n          onChange: handleChange,\n          autoComplete: \"email\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          variant: \"outlined\",\n          validators: [\"required\"],\n          errorMessages: [\"Email address is required\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            sx: {\n              textTransform: \"none\"\n            },\n            onClick: () => history.push(\"/forgot-password\"),\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isLoading,\n            disableElevation: true,\n            sx: {\n              textTransform: \"none\"\n            },\n            endIcon: isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              children: /*#__PURE__*/_jsxDEV(RefreshOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this),\n            type: \"submit\",\n            variant: \"contained\",\n            children: [\" \", \"Sign in\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordForm, \"ZahQ4IDOKy8HBQ2PDdfZY2dOG0g=\", false, function () {\n  return [useHistory, useSnackbar];\n});\n\n_c = PasswordForm;\nexport default PasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/password.js"],"names":["Box","Button","Typography","React","ValidatorForm","TextValidator","useHistory","CircularProgress","RefreshOutlined","auth","resetPassword","image","useSnackbar","PasswordForm","history","formValues","setFormValues","useState","email","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","submitForm","then","resp","variant","catch","error","message","textTransform","push"],"mappings":"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","sourcesContent":["import { Box, Button, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { useHistory } from \"react-router-dom\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { RefreshOutlined } from \"@mui/icons-material\";\n\n// import { useDispatch } from \"react-redux\";\n// import { setMyData, setUserData } from \"../../data/redux/slice/user\";\nimport { auth } from \"../../data/firebase\";\nimport { resetPassword } from \"../../domain/service\";\nimport image from \"../../assets/images/logo.svg\";\nimport { useSnackbar } from \"notistack\";\n\nconst PasswordForm = () => {\n  const history = useHistory();\n  const [formValues, setFormValues] = React.useState({\n    email: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = async (e) => {\n    setIsLoading(true);\n    resetPassword(auth, formValues.email)\n      .then((resp) => {\n        setIsLoading(false);\n        enqueueSnackbar(`Password reset link sent to ${formValues.email}`, {\n          variant: \"success\",\n        });\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        enqueueSnackbar(\n          `${error?.message || \"Check your internet connection!\"}`,\n          { variant: \"error\" }\n        );\n      });\n  };\n\n  return (\n    <div>\n      <Box\n        paddingTop={5}\n        paddingBottom={8}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent={\"start\"}\n      >\n        {/* <Typography\n          gutterBottom\n          fontSize={18}\n          fontWeight=\"600\"\n          textAlign={\"center\"}\n        >\n          Forgot Password?\n        </Typography> */}\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent={\"center\"}\n          alignItems=\"center\"\n          pb={1}\n        >\n          <img src={image} alt=\"\" width={\"64%\"} />\n        </Box>\n        <Typography\n          gutterBottom\n          fontSize={14}\n          fontWeight=\"600\"\n          paddingBottom={4}\n          textAlign=\"center\"\n        >\n          Enter your email to reset your password.\n        </Typography>\n        <ValidatorForm onSubmit={submitForm}>\n          <TextValidator\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            value={formValues.email}\n            onChange={handleChange}\n            autoComplete=\"email\"\n            label=\"Email\"\n            placeholder=\"Email\"\n            variant=\"outlined\"\n            validators={[\"required\"]}\n            errorMessages={[\"Email address is required\"]}\n          />\n\n          <br />\n\n          <Box\n            width={\"100%\"}\n            display=\"flex\"\n            flexDirection={\"row\"}\n            justifyContent=\"space-between\"\n            alignItems={\"center\"}\n          >\n            <Button\n              variant=\"text\"\n              sx={{ textTransform: \"none\" }}\n              onClick={() => history.push(\"/forgot-password\")}\n            >\n              Forgot password?\n            </Button>\n            <Button\n              disabled={isLoading}\n              disableElevation={true}\n              sx={{ textTransform: \"none\" }}\n              endIcon={\n                isLoading && (\n                  <CircularProgress>\n                    <RefreshOutlined />\n                  </CircularProgress>\n                )\n              }\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              {\" \"}\n              Sign in\n            </Button>\n          </Box>\n        </ValidatorForm>\n      </Box>\n    </div>\n  );\n};\n\nexport default PasswordForm;\n"]},"metadata":{},"sourceType":"module"}