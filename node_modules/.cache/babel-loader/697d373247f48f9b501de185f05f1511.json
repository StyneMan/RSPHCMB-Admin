{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_function.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst UpdateFunctionForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    deptId,\n    id,\n    func\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    function: func\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const updateDepartment = async e => {\n    setIsLoading(true);\n    setFormValues({\n      function: formValues.function ? formValues.function : func\n    });\n\n    try {\n      const mRef = doc(db, \"departments\", \"\" + id);\n      await updateDoc(mRef, {\n        title: formValues.title,\n        description: formValues.description\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Department updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateDepartment,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : image,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"Title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        multiLine: true,\n        rows: 2,\n        rowsMax: 2,\n        label: \"Decription\",\n        placeholder: \"Type description here...\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.description,\n        onChange: handleChange,\n        name: \"description\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Department description is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateFunctionForm, \"OIAj/g/HosodzhpzE37ya/R7dFE=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = UpdateFunctionForm;\nexport default UpdateFunctionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateFunctionForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_function.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","updateDoc","useSnackbar","Backdrop","Box","CircularProgress","Typography","Grid","useStyles","image","margin","width","height","mb","marginBottom","UpdateFunctionForm","props","classes","setOpen","deptId","id","func","formValues","setFormValues","useState","function","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","updateDepartment","mRef","title","description","variant","error","message","zIndex","isUploading","progress","color","previewImage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\n\nconst useStyles = makeStyles(() => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst UpdateFunctionForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, deptId, id, func } = props;\n  const [formValues, setFormValues] = React.useState({\n    function: func,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateDepartment = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      function: formValues.function ? formValues.function : func,\n    });\n\n    try {\n      const mRef = doc(db, \"departments\", \"\" + id);\n      await updateDoc(mRef, {\n        title: formValues.title,\n        description: formValues.description,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Department updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateDepartment}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n\n        <br />\n        <TextValidator\n          className={classes.mb}\n          multiLine\n          rows={2}\n          rowsMax={2}\n          label=\"Decription\"\n          placeholder=\"Type description here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.description}\n          onChange={handleChange}\n          name=\"description\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Department description is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update Department\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateFunctionForm;\n"]},"metadata":{},"sourceType":"module"}