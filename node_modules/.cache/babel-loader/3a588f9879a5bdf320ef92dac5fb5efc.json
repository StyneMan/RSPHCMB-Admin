{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_function.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst UpdateFunctionForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    func\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    function: func\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const updateDepartment = async e => {\n    setIsLoading(true);\n    setFormValues({\n      function: formValues.function ? formValues.function : func\n    });\n\n    try {\n      const mRef = doc(db, \"dept-functions\", \"\" + id);\n      await updateDoc(mRef, {\n        function: formValues.function\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Function updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateDepartment,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        label: \"Function\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.function === \" \" ? func : !formValues.function ? \"\" : formValues.function,\n        onChange: handleChange,\n        name: \"function\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Function is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Update Function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateFunctionForm, \"OIAj/g/HosodzhpzE37ya/R7dFE=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = UpdateFunctionForm;\nexport default UpdateFunctionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateFunctionForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_function.js"],"names":["React","ValidatorForm","TextValidator","makeStyles","Button","db","doc","updateDoc","useSnackbar","Backdrop","CircularProgress","useStyles","image","margin","width","height","mb","marginBottom","UpdateFunctionForm","props","classes","setOpen","id","func","formValues","setFormValues","useState","function","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","updateDepartment","mRef","variant","error","message","zIndex","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst useStyles = makeStyles(() => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst UpdateFunctionForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, func } = props;\n  const [formValues, setFormValues] = React.useState({\n    function: func,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateDepartment = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      function: formValues.function ? formValues.function : func,\n    });\n\n    try {\n      const mRef = doc(db, \"dept-functions\", \"\" + id);\n      await updateDoc(mRef, {\n        function: formValues.function,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Function updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateDepartment}>\n        <TextValidator\n          className={classes.mb}\n          label=\"Function\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.function === \" \"\n              ? func\n              : !formValues.function\n              ? \"\"\n              : formValues.function\n          }\n          onChange={handleChange}\n          name=\"function\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Function is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update Function\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateFunctionForm;\n"]},"metadata":{},"sourceType":"module"}