{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/governor_section.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 210,\n    height: 200\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst GovernorSection = () => {\n  _s();\n\n  var _location$state, _location$state4, _location$state5, _location$state6;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const [formValues, setFormValues] = React.useState({\n    governorName: location === null || location === void 0 ? void 0 : location.state.governorName,\n    governorImage: \"\",\n    deputyGovName: location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.deputyGovName,\n    deputyGovImage: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [file2, setFile2] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewImage2, setPreviewImage2] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"governorImage\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        governorImage: e.target.value\n      }));\n    } else if (id === \"deputyGovImage\") {\n      setFile2(e.target.files[0]);\n      setPreviewImage2(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        deputyGovImage: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"rsphcmb-who-we-are/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n\n        try {\n          await updateDoc(mRef, {\n            governorName: formValues.governorName,\n            deputyGovName: formValues.deputyGovName,\n            updatedAt: timeNow,\n            governorImage: downloadURL\n          });\n          history.goBack();\n          setIsLoading(false);\n          enqueueSnackbar(`Updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const uploadNewImage2 = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"rsphcmb-who-we-are/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n\n        try {\n          await updateDoc(mRef, {\n            governorName: formValues.governorName,\n            deputyGovName: formValues.deputyGovName,\n            updatedAt: timeNow,\n            deputyGovImage: downloadURL\n          });\n          history.goBack();\n          setIsLoading(false);\n          enqueueSnackbar(`Updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const update = async e => {\n    var _location$state2, _location$state3;\n\n    setIsLoading(true);\n    setFormValues({\n      deputyGovName: formValues.deputyGovName ? formValues.deputyGovName : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.deputyGovName,\n      governorName: formValues.governorName ? formValues.governorName : location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.governorName\n    });\n\n    if (!previewImage && !previewImage2) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n        await updateDoc(mRef, {\n          deputyGovName: formValues.deputyGovName,\n          governorName: formValues.governorName,\n          updatedAt: timeNow\n        });\n        history.goBack();\n        setIsLoading(false);\n        enqueueSnackbar(`Updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      }\n    } else if (previewImage && !previewImage2) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/image\");\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n    } else if (!previewImage && previewImage2) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/image2\");\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage2();\n      }).catch(error => {\n        setIsLoading(false); // console.log(\"ErR: \", error);\n      });\n    } else {\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/image\");\n      const fileRef2 = ref(storage, \"rsphcmb_who_we_are/image2\");\n      setIsLoading(true);\n      deleteObject(fileRef).then(() => {\n        //Now Delete authors photo\n        deleteObject(fileRef2).then(() => {\n          //Both items were deleted\n          const timeNow = new Date();\n          let storageRef = ref(storage, \"rsphcmb_who_we_are/image\");\n          let storageRef2 = ref(storage, \"rsphcmb_who_we_are/image2\");\n          let uploadTask = uploadBytesResumable(storageRef, file);\n          let uploadTask2 = uploadBytesResumable(storageRef2, file2);\n          setIsLoading(false);\n          setIsUploading(true);\n          uploadTask.on(\"state_changed\", snapshot => {\n            const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n            setProgress(uprogress);\n          }, error => {\n            setIsUploading(false);\n            console.log(error);\n            enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n              variant: \"error\"\n            });\n          }, () => {\n            var _uploadTask$snapshot;\n\n            getDownloadURL(uploadTask === null || uploadTask === void 0 ? void 0 : (_uploadTask$snapshot = uploadTask.snapshot) === null || _uploadTask$snapshot === void 0 ? void 0 : _uploadTask$snapshot.ref).then(async downloadURL => {\n              try {\n                const mRef = doc(db, \"about\", \"rsphcmb\");\n                await updateDoc(mRef, {\n                  deputyGovName: formValues.deputyGovName,\n                  governorName: formValues.governorName,\n                  updatedAt: timeNow,\n                  governorImage: downloadURL\n                });\n                const tmn = timeNow.getTime();\n                setIsUploading(true);\n                setIsLoading(false);\n                uploadTask2.on(\"state_changed\", snapshot2 => {\n                  const prog = snapshot2.bytesTransferred / snapshot2.totalBytes * 100;\n                  setProgress(prog);\n                }, error => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n                    variant: \"error\"\n                  });\n                }, () => {\n                  var _uploadTask2$snapshot;\n\n                  getDownloadURL(uploadTask2 === null || uploadTask2 === void 0 ? void 0 : (_uploadTask2$snapshot = uploadTask2.snapshot) === null || _uploadTask2$snapshot === void 0 ? void 0 : _uploadTask2$snapshot.ref).then(async download => {\n                    setIsUploading(false);\n                    setIsLoading(true);\n\n                    try {\n                      const mRef = doc(db, \"news\", \"\" + tmn);\n                      await updateDoc(mRef, {\n                        authorPhoto: download\n                      });\n                      history.goBack();\n                      setIsLoading(false);\n                      enqueueSnackbar(`Updated successfully`, {\n                        variant: \"success\"\n                      });\n                    } catch (error) {\n                      setIsLoading(false);\n                      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n                        variant: \"error\"\n                      });\n                    }\n                  });\n                });\n              } catch (error) {}\n            });\n          });\n        }).catch(err => {}); // setIsLoading(false);\n        // uploadNewAuthorPhoto();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIosNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 26\n      }, this),\n      onClick: () => history.goBack(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: update,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"governorImage\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.governorImage,\n            name: \"governorImage\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Governor's image is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            className: classes.mb,\n            label: \"Governor's Name\",\n            multiLine: true,\n            rows: 3,\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.governorName === \" \" ? location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.governorName : !formValues.governorName ? \"\" : formValues.governorName,\n            onChange: handleChange,\n            name: \"governorName\",\n            fullWidth: true,\n            validators: [\"required\"],\n            errorMessages: [\"Governor's name is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : location === null || location === void 0 ? void 0 : (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.governorImage,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"deputyGovImage\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.deputyGovImage,\n            name: \"deputyGovImage\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Deputy governor's image is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage2 ? previewImage2 : location === null || location === void 0 ? void 0 : (_location$state6 = location.state) === null || _location$state6 === void 0 ? void 0 : _location$state6.deputyGovImage,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GovernorSection, \"wpsEjnEeb2iKSeQKPQjgn2bHrsQ=\", false, function () {\n  return [useStyles, useHistory, useLocation, useSnackbar];\n});\n\n_c2 = GovernorSection;\nexport default GovernorSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"GovernorSection\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/governor_section.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","deleteObject","updateDoc","useSnackbar","Backdrop","Box","CircularProgress","Typography","Grid","useHistory","useLocation","ArrowBackIosNew","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","GovernorSection","classes","history","location","formValues","setFormValues","useState","governorName","state","governorImage","deputyGovName","deputyGovImage","file","setFile","file2","setFile2","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewImage2","setPreviewImage2","enqueueSnackbar","handleChange","e","id","name","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","mRef","updatedAt","goBack","uploadNewImage2","update","fileRef","catch","fileRef2","storageRef2","uploadTask2","tmn","snapshot2","prog","download","authorPhoto","err","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 210,\n    height: 200,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst GovernorSection = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [formValues, setFormValues] = React.useState({\n    governorName: location?.state.governorName,\n    governorImage: \"\",\n    deputyGovName: location?.state?.deputyGovName,\n    deputyGovImage: \"\",\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [file2, setFile2] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewImage2, setPreviewImage2] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"governorImage\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        governorImage: e.target.value,\n      }));\n    } else if (id === \"deputyGovImage\") {\n      setFile2(e.target.files[0]);\n      setPreviewImage2(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        deputyGovImage: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"rsphcmb-who-we-are/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"about\", \"rsphcmb\");\n          try {\n            await updateDoc(mRef, {\n              governorName: formValues.governorName,\n              deputyGovName: formValues.deputyGovName,\n              updatedAt: timeNow,\n              governorImage: downloadURL,\n            });\n            history.goBack();\n            setIsLoading(false);\n            enqueueSnackbar(`Updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewImage2 = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"rsphcmb-who-we-are/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"about\", \"rsphcmb\");\n          try {\n            await updateDoc(mRef, {\n              governorName: formValues.governorName,\n              deputyGovName: formValues.deputyGovName,\n              updatedAt: timeNow,\n              deputyGovImage: downloadURL,\n            });\n            history.goBack();\n            setIsLoading(false);\n            enqueueSnackbar(`Updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const update = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      deputyGovName: formValues.deputyGovName\n        ? formValues.deputyGovName\n        : location.state?.deputyGovName,\n      governorName: formValues.governorName\n        ? formValues.governorName\n        : location?.state?.governorName,\n    });\n    if (!previewImage && !previewImage2) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"about\", \"rsphcmb\");\n        await updateDoc(mRef, {\n          deputyGovName: formValues.deputyGovName,\n          governorName: formValues.governorName,\n          updatedAt: timeNow,\n        });\n        history.goBack();\n        setIsLoading(false);\n        enqueueSnackbar(`Updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewImage2) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/image\");\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewImage2) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/image2\");\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage2();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          // console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"rsphcmb_who_we_are/image\");\n      const fileRef2 = ref(storage, \"rsphcmb_who_we_are/image2\");\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"rsphcmb_who_we_are/image\");\n              let storageRef2 = ref(storage, \"rsphcmb_who_we_are/image2\");\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, file2);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"about\", \"rsphcmb\");\n                        await updateDoc(mRef, {\n                          deputyGovName: formValues.deputyGovName,\n                          governorName: formValues.governorName,\n                          updatedAt: timeNow,\n                          governorImage: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  history.goBack();\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`Updated successfully`, {\n                                    variant: \"success\",\n                                  });\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <ValidatorForm onSubmit={update}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"governorImage\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.governorImage}\n              name=\"governorImage\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Governor's image is required\"\n            />\n            <br />\n            <TextValidator\n              className={classes.mb}\n              label=\"Governor's Name\"\n              multiLine={true}\n              rows={3}\n              size=\"small\"\n              variant=\"outlined\"\n              value={\n                formValues.governorName === \" \"\n                  ? location?.state?.governorName\n                  : !formValues.governorName\n                  ? \"\"\n                  : formValues.governorName\n              }\n              onChange={handleChange}\n              name=\"governorName\"\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"Governor's name is required\"]}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={\n                  previewImage ? previewImage : location?.state?.governorImage\n                }\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"deputyGovImage\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.deputyGovImage}\n              name=\"deputyGovImage\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Deputy governor's image is required\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={\n                  previewImage2\n                    ? previewImage2\n                    : location?.state?.deputyGovImage\n                }\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default GovernorSection;\n"]},"metadata":{},"sourceType":"module"}