{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/wdc/update_wdc.js\",\n    _s = $RefreshSig$();\n\nimport { Button, LinearProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport RichText from \"../../components/misc/richtext\";\nimport { useSnackbar } from \"notistack\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateWDC = () => {\n  _s();\n\n  var _location$state, _location$state2;\n\n  const location = useLocation();\n  const history = useHistory();\n  const [title, setTitle] = React.useState(location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.title);\n  const [body, setBody] = React.useState(location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.body);\n  const [isError, setIsError] = React.useState(false);\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    // setIsStartedFilling(true);\n    const {\n      value\n    } = e.target;\n    setTitle(value); // setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    if (!isSubmitted) {\n      window.addEventListener(\"beforeunload\", () => {// console.log('added');\n      });\n    }\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", () => console.log(\"\"));\n    };\n  }, [isStartedFilling]);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    console.log(\"LO\", body);\n    const mRef = doc(db, \"contents\", \"wdc\");\n\n    try {\n      let resp = await updateDoc(mRef, {\n        title: title,\n        body: body\n      });\n      setIsSubmitting(false); //   console.log(\"SUCCESS MSGs\", resp);\n\n      enqueueSnackbar(`WDC updated successfully`, {\n        variant: \"success\"\n      });\n      history.goBack();\n    } catch (error) {\n      setIsSubmitting(false);\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Error updating record\"}`, {\n        variant: \"error\"\n      }); //   console.log(\"ERROR MSGs\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIosNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }, this),\n      onClick: () => history.goBack(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: submitForm,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        fullWidth: true,\n        size: \"small\",\n        placeholder: \"Title\",\n        name: \"title\",\n        required: true,\n        label: \"Title\",\n        value: title,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RichText, {\n        value: body,\n        setValue: setBody,\n        error: isError,\n        setError: setIsError,\n        setIsStartedFilling: setIsStartedFilling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateWDC, \"sEhqTqkgF8XSpgcII8ulpRHyuoc=\", false, function () {\n  return [useLocation, useHistory, useSnackbar];\n});\n\n_c = UpdateWDC;\nexport default UpdateWDC;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateWDC\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/wdc/update_wdc.js"],"names":["Button","LinearProgress","React","ValidatorForm","TextValidator","RichText","useSnackbar","db","doc","updateDoc","useLocation","useHistory","ArrowBackIosNew","UpdateWDC","location","history","title","setTitle","useState","state","body","setBody","isError","setIsError","isSubmitted","setIsSubmitted","isSubmitting","setIsSubmitting","isStartedFilling","setIsStartedFilling","enqueueSnackbar","handleChange","e","value","target","useEffect","window","addEventListener","removeEventListener","console","log","submitForm","preventDefault","mRef","resp","variant","goBack","error","message","display","flexDirection"],"mappings":"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","sourcesContent":["import { Button, LinearProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport RichText from \"../../components/misc/richtext\";\nimport { useSnackbar } from \"notistack\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst UpdateWDC = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [title, setTitle] = React.useState(location?.state?.title);\n  const [body, setBody] = React.useState(location?.state?.body);\n  const [isError, setIsError] = React.useState(false);\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    // setIsStartedFilling(true);\n    const { value } = e.target;\n    setTitle(value);\n    // setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    if (!isSubmitted) {\n      window.addEventListener(\"beforeunload\", () => {\n        // console.log('added');\n      });\n    }\n    return () => {\n      window.removeEventListener(\"beforeunload\", () => console.log(\"\"));\n    };\n  }, [isStartedFilling]);\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    console.log(\"LO\", body);\n\n    const mRef = doc(db, \"contents\", \"wdc\");\n    try {\n      let resp = await updateDoc(mRef, {\n        title: title,\n        body: body,\n      });\n      setIsSubmitting(false);\n      //   console.log(\"SUCCESS MSGs\", resp);\n      enqueueSnackbar(`WDC updated successfully`, {\n        variant: \"success\",\n      });\n      history.goBack();\n    } catch (error) {\n      setIsSubmitting(false);\n      enqueueSnackbar(`${error?.message || \"Error updating record\"}`, {\n        variant: \"error\",\n      });\n      //   console.log(\"ERROR MSGs\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm\n        onSubmit={submitForm}\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <TextValidator\n          fullWidth\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          required\n          label=\"Title\"\n          value={title}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n        <br />\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        {isSubmitting && <LinearProgress />}\n        <br />\n\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={isSubmitting}\n        >\n          Submit\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateWDC;\n"]},"metadata":{},"sourceType":"module"}