{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_sub_album.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateSubAlbumForm = props => {\n  _s();\n\n  let {\n    setOpen,\n    id,\n    list\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    desc: \"\"\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const addRecord = async e => {\n    setIsLoading(true);\n    list = Object.assign([], list);\n    let object = list[id]; // list?.push({\n    //   desc: formValues.desc,\n    // });\n\n    console.log(\"OBJECT\", object);\n    let obj = { ...object,\n      desc: \"Hello\",\n      image: \"http://jkfdjb\"\n    };\n    console.log(\"OBJEC2\", obj); // const mRef = doc(db, \"gallery\", \"\" + id);\n    // try {\n    //   await updateDoc(mRef, {\n    //     items: list[id],\n    //   });\n    //   setOpen(false);\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`Department function added successfully`, {\n    //     variant: \"success\",\n    //   });\n    // } catch (error) {\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n    //     variant: \"error\",\n    //   });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: addRecord,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Text\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.text,\n        onChange: handleChange,\n        name: \"text\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Text is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateSubAlbumForm, \"zUYC8kxZYBdDjm/1IxvhSb39674=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = UpdateSubAlbumForm;\nexport default UpdateSubAlbumForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateSubAlbumForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_sub_album.js"],"names":["React","ValidatorForm","TextValidator","Button","db","doc","updateDoc","useSnackbar","Backdrop","CircularProgress","UpdateSubAlbumForm","props","setOpen","id","list","formValues","setFormValues","useState","desc","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","addRecord","Object","assign","object","console","log","obj","image","zIndex","color","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,EAAT,EAAaC,GAAb,EAAkBC,SAAlB,QAAmC,wBAAnC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,gBAAT,QAAiC,eAAjC;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,EAAX;AAAeC,IAAAA;AAAf,MAAwBH,KAA5B;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BhB,KAAK,CAACiB,QAAN,CAAe;AACjDC,IAAAA,IAAI,EAAE;AAD2C,GAAf,CAApC;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAAlC;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAsBd,WAAW,EAAvC;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAV,IAAAA,aAAa,CAAEW,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAe,OAACH,IAAD,GAAQC;AAAvB,KAAf,CAAD,CAAb;AACD,GAJD;;AAMA,QAAMG,SAAS,GAAG,MAAOL,CAAP,IAAa;AAC7BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,IAAI,GAAGe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,IAAlB,CAAP;AACA,QAAIiB,MAAM,GAAGjB,IAAI,CAACD,EAAD,CAAjB,CAH6B,CAI7B;AACA;AACA;;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEA,QAAIG,GAAG,GAAG,EAAE,GAAGH,MAAL;AAAab,MAAAA,IAAI,EAAE,OAAnB;AAA4BiB,MAAAA,KAAK,EAAE;AAAnC,KAAV;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,GAAtB,EAV6B,CAW7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA5BD;;AA8BA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAAmC,MAAA,IAAI,EAAEjB,SAAzC;AAAA,gBACGA,SAAS,gBACR,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,KAAK,EAAE;AAAEkB,UAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAET,SAAzB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAEb,UAAU,CAACuB,IAJpB;AAKE,QAAA,QAAQ,EAAEhB,YALZ;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,QAAQ,MARV;AASE,QAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,QAAA,aAAa,EAAE,CAAC,kBAAD;AAVjB;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,eAeE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAEH,SAHZ;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CApFD;;GAAMT,kB;UAOwBH,W;;;KAPxBG,kB;AAsFN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst UpdateSubAlbumForm = (props) => {\n  let { setOpen, id, list } = props;\n  const [formValues, setFormValues] = React.useState({\n    desc: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const addRecord = async (e) => {\n    setIsLoading(true);\n    list = Object.assign([], list);\n    let object = list[id];\n    // list?.push({\n    //   desc: formValues.desc,\n    // });\n    console.log(\"OBJECT\", object);\n\n    let obj = { ...object, desc: \"Hello\", image: \"http://jkfdjb\" };\n    console.log(\"OBJEC2\", obj);\n    // const mRef = doc(db, \"gallery\", \"\" + id);\n\n    // try {\n    //   await updateDoc(mRef, {\n    //     items: list[id],\n    //   });\n    //   setOpen(false);\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`Department function added successfully`, {\n    //     variant: \"success\",\n    //   });\n    // } catch (error) {\n    //   setIsLoading(false);\n    //   enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n    //     variant: \"error\",\n    //   });\n    // }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={addRecord}>\n        <TextValidator\n          label=\"Text\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.text}\n          onChange={handleChange}\n          name=\"text\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Text is required\"]}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateSubAlbumForm;\n"]},"metadata":{},"sourceType":"module"}