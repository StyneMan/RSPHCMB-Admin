{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/set_featured_service.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, setDoc, getDownloadURL, updateDoc, uploadBytesResumable } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst FeaturedServiceForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    title,\n    img,\n    body\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [serviceBody, setServiceBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"services-featured/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false); // console.log(error);\n\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        setDoc(doc(db, \"featured\", \"service\"), {\n          id: timeNow.getTime(),\n          title: formValues.title,\n          image: downloadURL,\n          body: serviceBody\n        }).then(res => {\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Operation successful`, {\n            variant: \"success\"\n          });\n        }).catch(error => {\n          setIsLoading(false);\n        });\n      });\n    });\n  };\n\n  const updateService = async e => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      body: serviceBody\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"featured\", \"services\");\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: serviceBody,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Opeartion successful`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      //   const fileRef = ref(storage, \"featured-service/\" + id);\n      uploadNewImage(); //   deleteObject(fileRef)\n      //     .then(() => {\n      //       setIsLoading(false);\n      //     })\n      //     .catch((error) => {\n      //       setIsLoading(false);\n      //       console.log(\"ErR: \", error);\n      //     });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateService,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : img,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"Service title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Service title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditableRichText, {\n        value: serviceBody,\n        setValue: setServiceBody,\n        error: isError,\n        setError: setIsError,\n        setIsStartedFilling: setIsStartedFilling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeaturedServiceForm, \"8IRtHM6rjpaDrDAoF6r2xMoD6P0=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = FeaturedServiceForm;\nexport default FeaturedServiceForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"FeaturedServiceForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/set_featured_service.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","doc","setDoc","getDownloadURL","updateDoc","uploadBytesResumable","useSnackbar","Backdrop","Box","CircularProgress","Typography","Grid","RichText","EditableRichText","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","FeaturedServiceForm","classes","setOpen","title","img","body","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","serviceBody","setServiceBody","isError","setIsError","enqueueSnackbar","isStartedFilling","setIsStartedFilling","handleChange","e","id","name","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","res","catch","updateService","mRef","updatedAt","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,EADF,EAEEC,GAFF,EAGEC,OAHF,EAIEC,GAJF,EAKEC,MALF,EAMEC,cANF,EAOEC,SAPF,EAQEC,oBARF,QASO,wBATP;AAUA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;;AAEA,MAAMC,SAAS,GAAGlB,UAAU,CAAEmB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,oBADH;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH,GADgC;AAMvCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,YAAY,EAAE;AADZ;AANmC,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3C,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAC,aAAjC;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAC,aADV;AAAA,SAEMA,KAFN;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,SAAS,EAAE,GAJb;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AALT;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,MAAM,EAAE,CAHV;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,OAAO,EAAC,MANV;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,cAAc,EAAC,QARjB;AAAA,6BAUE,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAHT;AAAA,kBAIG,GAAEC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,KAAjB,CAAwB;AAJ7B;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BD;;KAAMN,yB;;AA8BN,MAAMO,mBAAmB,GAAIN,KAAD,IAAW;AAAA;;AACrC,QAAMO,OAAO,GAAGhB,SAAS,EAAzB;AACA,MAAI;AAAEiB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,GAAlB;AAAuBC,IAAAA;AAAvB,MAAgCX,KAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8B5C,KAAK,CAAC6C,QAAN,CAAe;AACjDL,IAAAA,KAAK,EAAEA,KAD0C;AAEjDhB,IAAAA,KAAK,EAAE;AAF0C,GAAf,CAApC;AAIA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkB/C,KAAK,CAAC6C,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCjD,KAAK,CAAC6C,QAAN,CAAe,KAAf,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BnD,KAAK,CAAC6C,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BrD,KAAK,CAAC6C,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCvD,KAAK,CAAC6C,QAAN,CAAe,EAAf,CAAxC;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCzD,KAAK,CAAC6C,QAAN,CAAeH,IAAf,CAAtC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwB3D,KAAK,CAAC6C,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAsB9C,WAAW,EAAvC;AACA,QAAM,CAAC+C,gBAAD,EAAmBC,mBAAnB,IAA0C9D,KAAK,CAAC6C,QAAN,CAAe,KAAf,CAAhD;;AAEA,QAAMkB,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAY9B,MAAAA;AAAZ,QAAsB4B,CAAC,CAACG,MAA9B;;AAEA,QAAIF,EAAE,KAAK,OAAX,EAAoB;AAClBlB,MAAAA,OAAO,CAACiB,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAb,MAAAA,eAAe,CAACc,GAAG,CAACC,eAAJ,CAAoBN,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAf;AACAxB,MAAAA,aAAa,CAAE2B,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3B/C,QAAAA,KAAK,EAAEwC,CAAC,CAACG,MAAF,CAAS/B;AAFW,OAAf,CAAD,CAAb;AAID,KAPD,MAOO;AACLQ,MAAAA,aAAa,CAAE2B,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAe,SAACL,IAAD,GAAQ9B;AAAvB,OAAf,CAAD,CAAb;AACD;AACF,GAbD;;AAeA,QAAMoC,cAAc,GAAG,MAAM;AAC3BvB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMwB,OAAO,GAAG,IAAIC,IAAJ,EAAhB,CAF2B,CAG3B;;AACA,UAAMC,UAAU,GAAGpE,GAAG,CAACC,OAAD,EAAU,uBAAuBiE,OAAO,CAACG,OAAR,EAAjC,CAAtB;AACA,UAAMC,UAAU,GAAGhE,oBAAoB,CAAC8D,UAAD,EAAa7B,IAAb,CAAvC;AAEA+B,IAAAA,UAAU,CAACC,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ,YAAMC,SAAS,GACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADtD;AAEA7B,MAAAA,WAAW,CAAC2B,SAAD,CAAX;AACD,KANH,EAOGG,KAAD,IAAW;AACTlC,MAAAA,cAAc,CAAC,KAAD,CAAd,CADS,CAET;;AACAW,MAAAA,eAAe,CAAE,GAAEuB,KAAK,CAACC,OAAQ,EAAlB,EAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAf;AACD,KAXH,EAYE,MAAM;AACJpC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAxC,MAAAA,cAAc,CAACkE,UAAU,CAACE,QAAX,CAAoBxE,GAArB,CAAd,CAAwC+E,IAAxC,CAA6C,MAAOC,WAAP,IAAuB;AAClE7E,QAAAA,MAAM,CAACD,GAAG,CAACH,EAAD,EAAK,UAAL,EAAiB,SAAjB,CAAJ,EAAiC;AACrC2D,UAAAA,EAAE,EAAEQ,OAAO,CAACG,OAAR,EADiC;AAErCpC,UAAAA,KAAK,EAAEG,UAAU,CAACH,KAFmB;AAGrChB,UAAAA,KAAK,EAAE+D,WAH8B;AAIrC7C,UAAAA,IAAI,EAAEc;AAJ+B,SAAjC,CAAN,CAMG8B,IANH,CAMSE,GAAD,IAAS;AACbjD,UAAAA,OAAO,CAAC,KAAD,CAAP;AACAY,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,UAAAA,eAAe,CAAE,sBAAF,EAAyB;AACtCyB,YAAAA,OAAO,EAAE;AAD6B,WAAzB,CAAf;AAGD,SAZH,EAaGI,KAbH,CAaUN,KAAD,IAAW;AAChBhC,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAfH;AAgBD,OAjBD;AAkBD,KAjCH;AAmCD,GA1CD;;AA4CA,QAAMuC,aAAa,GAAG,MAAO1B,CAAP,IAAa;AACjCb,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAP,IAAAA,aAAa,CAAC;AACZJ,MAAAA,KAAK,EAAEG,UAAU,CAACH,KAAX,GAAmBG,UAAU,CAACH,KAA9B,GAAsCA,KADjC;AAEZE,MAAAA,IAAI,EAAEc;AAFM,KAAD,CAAb;;AAKA,QAAI,CAACF,YAAL,EAAmB;AACjB;AACA,YAAMmB,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AACA,UAAI;AACF,cAAMiB,IAAI,GAAGlF,GAAG,CAACH,EAAD,EAAK,UAAL,EAAiB,UAAjB,CAAhB;AACA,cAAMM,SAAS,CAAC+E,IAAD,EAAO;AACpBnD,UAAAA,KAAK,EAAEG,UAAU,CAACH,KADE;AAEpBE,UAAAA,IAAI,EAAEc,WAFc;AAGpBoC,UAAAA,SAAS,EAAEnB;AAHS,SAAP,CAAf;AAKAlC,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAY,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,QAAAA,eAAe,CAAE,sBAAF,EAAyB;AACtCyB,UAAAA,OAAO,EAAE;AAD6B,SAAzB,CAAf;AAGD,OAZD,CAYE,OAAOF,KAAP,EAAc;AACdhC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,QAAAA,eAAe,CAAE,GAAEuB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEC,OAAQ,EAAnB,EAAsB;AACnCC,UAAAA,OAAO,EAAE;AAD0B,SAAtB,CAAf;AAGD;AACF,KArBD,MAqBO;AACL;AACA;AACAb,MAAAA,cAAc,GAHT,CAKL;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;AACF,GA3CD;;AA6CA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEqB,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAAmC,MAAA,IAAI,EAAE7C,WAAW,IAAIE,SAAxD;AAAA,iBACGF,WAAW,gBAAG,QAAC,yBAAD;AAA2B,QAAA,KAAK,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoD;AAAA;AAAA;AAAA;AAAA,cADlE,EAEGF,SAAS,gBACR,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,KAAK,EAAE;AAAElB,UAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAE0D,aAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAE,CAArC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,KAAK,EAAE/C,UAAU,CAACnB,KAJpB;AAKE,YAAA,IAAI,EAAC,OALP;AAME,YAAA,IAAI,EAAC,MANP;AAOE,YAAA,SAAS,MAPX;AAQE,YAAA,QAAQ,EAAE0B,SARZ;AASE,YAAA,MAAM,EAAC,mBATT;AAUE,YAAA,QAAQ,EAAEa,YAVZ;AAWE,YAAA,UAAU,EAAC;AAXb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,SADV;AAEE,cAAA,GAAG,EAAC,UAFN;AAGE,cAAA,GAAG,EAAET,YAAY,GAAGA,YAAH,GAAkBb,GAHrC;AAIE,cAAA,SAAS,EAAEH,OAAO,CAACd;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE,QAAC,aAAD;AACE,QAAA,SAAS,EAAEc,OAAO,CAACV,EADrB;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,KAAK,EAAC,eAHR;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,KAAK,EACHe,UAAU,CAACH,KAAX,KAAqB,GAArB,GACIA,KADJ,GAEI,CAACG,UAAU,CAACH,KAAZ,GACA,EADA,GAEAG,UAAU,CAACH,KAXnB;AAaE,QAAA,QAAQ,EAAEuB,YAbZ;AAcE,QAAA,IAAI,EAAC,OAdP;AAeE,QAAA,SAAS,MAfX;AAgBE,QAAA,UAAU,EAAE,CAAC,UAAD,CAhBd;AAiBE,QAAA,aAAa,EAAE,CAAC,2BAAD;AAjBjB;AAAA;AAAA;AAAA;AAAA,cA9BF,eAkDE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAEP,WADT;AAEE,QAAA,QAAQ,EAAEC,cAFZ;AAGE,QAAA,KAAK,EAAEC,OAHT;AAIE,QAAA,QAAQ,EAAEC,UAJZ;AAKE,QAAA,mBAAmB,EAAEG;AALvB;AAAA;AAAA;AAAA;AAAA,cAlDF,eAyDE;AAAA;AAAA;AAAA;AAAA,cAzDF,eA4EE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAEZ,SAAS,IAAIF,WAHzB;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqGD,CA/ND;;GAAMX,mB;UACYf,S,EAcYR,W;;;MAfxBuB,mB;AAiON,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  setDoc,\n  getDownloadURL,\n  updateDoc,\n  uploadBytesResumable,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst FeaturedServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, title, img, body } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const [serviceBody, setServiceBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"services-featured/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          setDoc(doc(db, \"featured\", \"service\"), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            body: serviceBody,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`Operation successful`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  const updateService = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      body: serviceBody,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"featured\", \"services\");\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: serviceBody,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Opeartion successful`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      //   const fileRef = ref(storage, \"featured-service/\" + id);\n      uploadNewImage();\n\n      //   deleteObject(fileRef)\n      //     .then(() => {\n      //       setIsLoading(false);\n\n      //     })\n      //     .catch((error) => {\n      //       setIsLoading(false);\n      //       console.log(\"ErR: \", error);\n      //     });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateService}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Service title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service title is required\"]}\n        />\n\n        <EditableRichText\n          value={serviceBody}\n          setValue={setServiceBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n        {/* <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={2}\n          label=\"Service summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service summary is required\"]}\n        /> */}\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default FeaturedServiceForm;\n"]},"metadata":{},"sourceType":"module"}