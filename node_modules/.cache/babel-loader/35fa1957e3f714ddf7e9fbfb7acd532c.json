{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_content.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\"; // import RichText from \"../../components/misc/richtext\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WhoWeAreContent = props => {\n  _s();\n\n  var _location$state;\n\n  const location = useLocation();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [body, setBody] = React.useState((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.content);\n  const [isError, setIsError] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const updateData = async e => {\n    setIsLoading(true); //No image is changed. So update all text\n\n    const timeNow = new Date();\n\n    try {\n      const mRef = doc(db, \"about\", \"rsphcmb\");\n      await updateDoc(mRef, {\n        who_we_are: body,\n        updatedAt: timeNow\n      });\n      history.goBack();\n      setIsLoading(false);\n      enqueueSnackbar(`Data updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIosNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }, this),\n      onClick: () => history.goBack(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateData,\n      children: [/*#__PURE__*/_jsxDEV(EditableRichText, {\n        value: body,\n        setValue: setBody,\n        error: isError,\n        setError: setIsError // setIsStartedFilling={setIsStartedFilling}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WhoWeAreContent, \"tRLg2bn5l7LlTV1fE7uGlDcK80M=\", false, function () {\n  return [useLocation, useHistory, useSnackbar];\n});\n\n_c = WhoWeAreContent;\nexport default WhoWeAreContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhoWeAreContent\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_content.js"],"names":["React","ValidatorForm","Button","db","doc","updateDoc","useSnackbar","Backdrop","CircularProgress","useLocation","useHistory","ArrowBackIosNew","EditableRichText","WhoWeAreContent","props","location","history","isLoading","setIsLoading","useState","body","setBody","state","content","isError","setIsError","enqueueSnackbar","updateData","e","timeNow","Date","mRef","who_we_are","updatedAt","goBack","variant","error","message","zIndex","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n// import RichText from \"../../components/misc/richtext\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\n\nconst WhoWeAreContent = (props) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [body, setBody] = React.useState(location.state?.content);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  // const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const updateData = async (e) => {\n    setIsLoading(true);\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"about\", \"rsphcmb\");\n      await updateDoc(mRef, {\n        who_we_are: body,\n        updatedAt: timeNow,\n      });\n      history.goBack();\n      setIsLoading(false);\n      enqueueSnackbar(`Data updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm onSubmit={updateData}>\n        <EditableRichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          // setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default WhoWeAreContent;\n"]},"metadata":{},"sourceType":"module"}