{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/new_service_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst NewServiceForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    summary: \"\",\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const [serviceBody, setServiceBody] = React.useState(null);\n  const [isError, setIsError] = React.useState(false); // const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const createService = e => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"services/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100; // console.log(\"Upload is \" + progress + \"% done\");\n\n      setProgress(uprogress);\n    }, error => {\n      // Handle unsuccessful uploads\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setDoc(doc(db, \"services\", `${timeNow.getTime()}`), {\n          id: timeNow.getTime(),\n          title: formValues.title,\n          image: downloadURL,\n          summary: formValues.summary,\n          body: serviceBody\n        }).then(res => {\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`New service added successfully`, {\n            variant: \"success\"\n          });\n        }).catch(error => {\n          setIsLoading(false);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createService,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"title\",\n        label: \"Service name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange // onBlur={handleBlur}\n        ,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Name of service is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            validators: [\"required\"],\n            errorMessages: [\"Featured image is required\"],\n            helperText: \"Upload featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewPassport && /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewPassport,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"summary\",\n        multiLine: true,\n        rows: 2,\n        rowsMax: 3,\n        label: \"Service summary\",\n        placeholder: \"Type summary here...\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.summary,\n        onChange: handleChange,\n        name: \"summary\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Service summary is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RichText, {\n        value: serviceBody,\n        setValue: setServiceBody,\n        error: isError,\n        setError: setIsError // setIsStartedFilling={setIsStartedFilling}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewServiceForm, \"3zqzGMu70keS/n2aoc2FKRMBh3E=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = NewServiceForm;\nexport default NewServiceForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"NewServiceForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/new_service_form.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","uploadBytesResumable","getDownloadURL","useSnackbar","Backdrop","Box","CircularProgress","Grid","Typography","RichText","useStyles","theme","image","margin","width","height","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","NewServiceForm","classes","setOpen","formValues","setFormValues","useState","title","summary","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewPassport","setPreviewPassport","serviceBody","setServiceBody","isError","setIsError","enqueueSnackbar","handleChange","e","id","name","target","files","URL","createObjectURL","prevData","createService","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","body","res","catch","zIndex","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst NewServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    summary: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const [serviceBody, setServiceBody] = React.useState(null);\n  const [isError, setIsError] = React.useState(false);\n  // const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createService = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"services/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setDoc(doc(db, \"services\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            summary: formValues.summary,\n            body: serviceBody,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New service added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createService}>\n        <TextValidator\n          id=\"title\"\n          label=\"Service name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name of service is required\"]}\n        />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={6}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Upload featured image\"\n            />\n          </Grid>\n          <Grid item sm={6} md={6}>\n            <div>\n              {previewPassport && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewPassport}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={3}\n          label=\"Service summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service summary is required\"]}\n        />\n        <br />\n\n        <RichText\n          value={serviceBody}\n          setValue={setServiceBody}\n          error={isError}\n          setError={setIsError}\n          // setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default NewServiceForm;\n"]},"metadata":{},"sourceType":"module"}