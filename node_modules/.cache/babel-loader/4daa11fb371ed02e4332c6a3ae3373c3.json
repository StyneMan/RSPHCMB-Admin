{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/lga.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { lgaList } from \"../../../../../../util/lga\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#00B0EF\"\n  },\n  header: {\n    height: \"84vh\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  rowEnd: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"end\",\n    alignItems: \"end\"\n  }\n}));\n\nconst LGAs = () => {\n  _s();\n\n  const classes = useStyles();\n  let fontSize, mt, deviceType;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n\n  if (xs) {\n    fontSize = 30;\n    mt = 200;\n    deviceType = \"phone\";\n  } else if (sm) {\n    fontSize = 42;\n    mt = 400;\n    deviceType = \"tablet\";\n  } else {\n    mt = 125;\n    fontSize = 48;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        paddingX: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: lgaList === null || lgaList === void 0 ? void 0 : lgaList.map((elem, index) => {\n          var _elem$item;\n\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            md: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"start\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontWeight: \"700\",\n              paddingTop: 2,\n              children: `${elem.alphabet}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), elem === null || elem === void 0 ? void 0 : (_elem$item = elem.item) === null || _elem$item === void 0 ? void 0 : _elem$item.map((el, i) => /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/dashboard/about/lga/\" + el.name,\n                state: {\n                  title: el.name\n                }\n              },\n              style: {\n                textDecoration: \"none\"\n              },\n              children: `${el.name}`\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LGAs, \"D6FlQPSPUbXvJ4BfFanCfaiVXV0=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery, useMediaQuery];\n});\n\n_c = LGAs;\nexport default LGAs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LGAs\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/lga.js"],"names":["Container","Grid","Typography","React","makeStyles","useTheme","useMediaQuery","lgaList","Link","useStyles","theme","root","backgroundColor","header","height","backgroundRepeat","backgroundSize","display","flexDirection","justifyContent","alignItems","container","rowEnd","LGAs","classes","fontSize","mt","deviceType","xs","breakpoints","only","sm","paddingX","map","elem","index","alphabet","item","el","i","pathname","name","state","title","textDecoration"],"mappings":"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","sourcesContent":["import { Container, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { lgaList } from \"../../../../../../util/lga\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#00B0EF\",\n  },\n  header: {\n    height: \"84vh\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  rowEnd: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"end\",\n    alignItems: \"end\",\n  },\n}));\n\nconst LGAs = () => {\n  const classes = useStyles();\n\n  let fontSize, mt, deviceType;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n\n  if (xs) {\n    fontSize = 30;\n    mt = 200;\n    deviceType = \"phone\";\n  } else if (sm) {\n    fontSize = 42;\n    mt = 400;\n    deviceType = \"tablet\";\n  } else {\n    mt = 125;\n    fontSize = 48;\n  }\n\n  return (\n    <div>\n      <Container\n        sx={{\n          paddingX: 4,\n        }}\n      >\n        <Grid container spacing={2}>\n          {lgaList?.map((elem, index) => (\n            <Grid\n              item\n              xs={6}\n              sm={6}\n              md={4}\n              key={index}\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"start\"\n            >\n              <Typography\n                variant=\"h6\"\n                fontWeight=\"700\"\n                paddingTop={2}\n              >{`${elem.alphabet}`}</Typography>\n              {elem?.item?.map((el, i) => (\n                <Link\n                  key={i}\n                  to={{\n                    pathname: \"/dashboard/about/lga/\" + el.name,\n                    state: { title: el.name },\n                  }}\n                  style={{ textDecoration: \"none\" }}\n                >{`${el.name}`}</Link>\n              ))}\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default LGAs;\n"]},"metadata":{},"sourceType":"module"}