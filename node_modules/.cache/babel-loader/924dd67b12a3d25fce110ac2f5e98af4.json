{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/update_report.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, updateDoc, doc, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase\"; // import { useSnackbar } from \"notistack\";\n\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport RichText from \"../../components/misc/richtext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 5px auto\",\n    width: 400,\n    height: 300\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst UpdateReportForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    image,\n    title,\n    content\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    createdAt: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [body, setBody] = React.useState(content);\n  const [isError, setIsError] = React.useState(false);\n  const [previewImage, setPreviewImage] = React.useState(image);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"res\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        res: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"reports/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false); // console.log(error);\n\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"reports\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            image: downloadURL,\n            body: body !== null && body !== void 0 ? body : content,\n            updatedAt: timeNow\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Report updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateReport = async e => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"reports\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: body !== null && body !== void 0 ? body : content,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Report updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet\"}`, {\n          variant: \"error\"\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      uploadNewImage(); // const fileRef = ref(storage, \"reports/\" + id);\n      // deleteObject(fileRef)\n      //   .then(() => {\n      //     setIsLoading(false);\n      //   })\n      //   .catch((error) => {\n      //     setIsLoading(false);\n      //     //   console.log(\"ErR: \", error);\n      //   });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateReport,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"res\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.res,\n            name: \"res\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg, .pdf, .doc\",\n            onChange: handleChange,\n            validators: [\"required\"],\n            errorMessages: [\"Download resource is required\"],\n            helperText: \"Download resource\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewImage && /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : image,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"Title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Report title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RichText, {\n        value: body,\n        setValue: setBody,\n        error: isError,\n        setError: setIsError,\n        setIsStartedFilling: setIsStartedFilling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateReportForm, \"bEa3Ezw1o68EgRw/YGBnxdAtp/E=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = UpdateReportForm;\nexport default UpdateReportForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"UpdateReportForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/update_report.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","updateDoc","doc","uploadBytesResumable","getDownloadURL","Backdrop","Box","CircularProgress","Grid","Typography","useSnackbar","RichText","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","UpdateReportForm","classes","setOpen","id","title","content","formValues","setFormValues","useState","createdAt","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","body","setBody","isError","setIsError","previewImage","setPreviewImage","isStartedFilling","setIsStartedFilling","enqueueSnackbar","handleChange","e","name","target","files","URL","createObjectURL","prevData","res","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","updatedAt","updateReport","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  updateDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\n// import { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 5px auto\",\n    width: 400,\n    height: 300,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst UpdateReportForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, image, title, content } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    createdAt: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [body, setBody] = React.useState(content);\n  const [isError, setIsError] = React.useState(false);\n  const [previewImage, setPreviewImage] = React.useState(image);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"res\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        res: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"reports/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"reports\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              image: downloadURL,\n              body: body ?? content,\n              updatedAt: timeNow,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Report updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateReport = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"reports\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: body ?? content,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Report updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      uploadNewImage();\n      // const fileRef = ref(storage, \"reports/\" + id);\n\n      // deleteObject(fileRef)\n      //   .then(() => {\n      //     setIsLoading(false);\n\n      //   })\n      //   .catch((error) => {\n      //     setIsLoading(false);\n      //     //   console.log(\"ErR: \", error);\n      //   });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateReport}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"res\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.res}\n              name=\"res\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf, .doc\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Download resource is required\"]}\n              helperText=\"Download resource\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage ? previewImage : image}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Report title is required\"]}\n        />\n        <br />\n\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateReportForm;\n"]},"metadata":{},"sourceType":"module"}