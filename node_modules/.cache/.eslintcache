[{"/Users/macintosh/Developer/RSPHCMB-Admin/src/index.js":"1","/Users/macintosh/Developer/RSPHCMB-Admin/src/reportWebVitals.js":"2","/Users/macintosh/Developer/RSPHCMB-Admin/src/App.js":"3","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/index.js":"4","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/firebase/index.js":"5","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/theme/index.js":"6","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/protected_routes.js":"7","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/user.js":"8","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/team.js":"9","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/perm_sec.js":"10","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/faqs.js":"11","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/wdc.js":"12","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/resources.js":"13","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/partners.js":"14","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/lga.js":"15","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/index.js":"16","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/password/index.js":"17","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/login/index.js":"18","/Users/macintosh/Developer/RSPHCMB-Admin/src/util/scroll/index.js":"19","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/login.js":"20","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer1.js":"21","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer2.js":"22","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/index.js":"23","/Users/macintosh/Developer/RSPHCMB-Admin/src/domain/service/index.js":"24","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/index.js":"25","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/index.js":"26","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/services/index.js":"27","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/index.js":"28","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/contact/index.js":"29","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dialogs/custom-dialog.js":"30","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/edit_service_form.js":"31","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/richtext/index.js":"32","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/new_service_form.js":"33","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/banner.js":"34","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/add_banner.js":"35","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/update_banner.js":"36","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/perm_sec.js":"37","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/homepage.js":"38","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/health_access.js":"39","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/building_culture.js":"40","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/covid19_section.js":"41","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/rsphcmb.js":"42","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/rsphcmb.js":"43","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_img.js":"44","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_content.js":"45","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/vision_section.js":"46","/Users/macintosh/Developer/RSPHCMB-Admin/src/util/lga/index.js":"47","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/lga_item.js":"48","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/comm_table.js":"49","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button.js":"50","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/facility_table.js":"51","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button2.js":"52","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/lga.js":"53","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/wdc.js":"54","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/wdc/update_wdc.js":"55","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/downloads.js":"56","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/add_downloads.js":"57","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/update_downloads.js":"58","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/reports.js":"59","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/add_report.js":"60","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/update_report.js":"61","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_website_visits.js":"62","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/appwidgetsummary.js":"63","/Users/macintosh/Developer/RSPHCMB-Admin/src/util/formatNumber.js":"64","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/iconify.js":"65","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/index.js":"66","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/base_option_chart.js":"67","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_current_visits.js":"68","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/governor_section.js":"69","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/add_team.js":"70","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/update_team.js":"71","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/lga/committee/add_committee.js":"72","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/set_featured_service.js":"73","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/services.js":"74","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/contact.js":"75","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/users/index.js":"76","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/users/add_user.js":"77","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/users_table.js":"78","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/enquiry.js":"79","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/enquiries/index.js":"80","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/enquiries_table.js":"81","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/countdown/timeago.js":"82"},{"size":1954,"mtime":1650111916256,"results":"83","hashOfConfig":"84"},{"size":362,"mtime":1650026129007,"results":"85","hashOfConfig":"84"},{"size":4854,"mtime":1650321460788,"results":"86","hashOfConfig":"84"},{"size":1467,"mtime":1650552129192,"results":"87","hashOfConfig":"84"},{"size":1478,"mtime":1650109021248,"results":"88","hashOfConfig":"84"},{"size":588,"mtime":1650495238382,"results":"89","hashOfConfig":"84"},{"size":583,"mtime":1650225269566,"results":"90","hashOfConfig":"84"},{"size":443,"mtime":1650111651291,"results":"91","hashOfConfig":"84"},{"size":465,"mtime":1650109530490,"results":"92","hashOfConfig":"84"},{"size":476,"mtime":1650109530423,"results":"93","hashOfConfig":"84"},{"size":421,"mtime":1650111969444,"results":"94","hashOfConfig":"84"},{"size":432,"mtime":1650109530503,"results":"95","hashOfConfig":"84"},{"size":1005,"mtime":1650109530461,"results":"96","hashOfConfig":"84"},{"size":487,"mtime":1650109530409,"results":"97","hashOfConfig":"84"},{"size":440,"mtime":1650109530370,"results":"98","hashOfConfig":"84"},{"size":14891,"mtime":1650552346575,"results":"99","hashOfConfig":"84"},{"size":2008,"mtime":1650050454276,"results":"100","hashOfConfig":"84"},{"size":946,"mtime":1650112936546,"results":"101","hashOfConfig":"84"},{"size":246,"mtime":1650109539400,"results":"102","hashOfConfig":"84"},{"size":4922,"mtime":1650224264881,"results":"103","hashOfConfig":"84"},{"size":8807,"mtime":1650237354738,"results":"104","hashOfConfig":"84"},{"size":9324,"mtime":1650549425940,"results":"105","hashOfConfig":"84"},{"size":7176,"mtime":1650426005421,"results":"106","hashOfConfig":"84"},{"size":874,"mtime":1650113568728,"results":"107","hashOfConfig":"84"},{"size":2777,"mtime":1650388468119,"results":"108","hashOfConfig":"84"},{"size":2488,"mtime":1650473044565,"results":"109","hashOfConfig":"84"},{"size":9488,"mtime":1650547112695,"results":"110","hashOfConfig":"84"},{"size":2726,"mtime":1650288446871,"results":"111","hashOfConfig":"84"},{"size":10675,"mtime":1650543871188,"results":"112","hashOfConfig":"84"},{"size":2213,"mtime":1650297799870,"results":"113","hashOfConfig":"84"},{"size":8308,"mtime":1650298625563,"results":"114","hashOfConfig":"84"},{"size":1929,"mtime":1650540333379,"results":"115","hashOfConfig":"84"},{"size":6857,"mtime":1650313699431,"results":"116","hashOfConfig":"84"},{"size":7697,"mtime":1650428170131,"results":"117","hashOfConfig":"84"},{"size":6361,"mtime":1650325745445,"results":"118","hashOfConfig":"84"},{"size":7742,"mtime":1650429265522,"results":"119","hashOfConfig":"84"},{"size":19230,"mtime":1650497801619,"results":"120","hashOfConfig":"84"},{"size":535,"mtime":1650387749627,"results":"121","hashOfConfig":"84"},{"size":13328,"mtime":1650463761783,"results":"122","hashOfConfig":"84"},{"size":12983,"mtime":1650542865070,"results":"123","hashOfConfig":"84"},{"size":527,"mtime":1650388733374,"results":"124","hashOfConfig":"84"},{"size":336,"mtime":1650389913195,"results":"125","hashOfConfig":"84"},{"size":11288,"mtime":1650479697629,"results":"126","hashOfConfig":"84"},{"size":5813,"mtime":1650394363800,"results":"127","hashOfConfig":"84"},{"size":2406,"mtime":1650394363809,"results":"128","hashOfConfig":"84"},{"size":7914,"mtime":1650465190288,"results":"129","hashOfConfig":"84"},{"size":1013,"mtime":1650408399939,"results":"130","hashOfConfig":"84"},{"size":12350,"mtime":1650507754999,"results":"131","hashOfConfig":"84"},{"size":2165,"mtime":1650546425105,"results":"132","hashOfConfig":"84"},{"size":5323,"mtime":1650537684255,"results":"133","hashOfConfig":"84"},{"size":2044,"mtime":1650415090076,"results":"134","hashOfConfig":"84"},{"size":4895,"mtime":1650415290492,"results":"135","hashOfConfig":"84"},{"size":2553,"mtime":1650493537200,"results":"136","hashOfConfig":"84"},{"size":2147,"mtime":1650417311602,"results":"137","hashOfConfig":"84"},{"size":3244,"mtime":1650417264004,"results":"138","hashOfConfig":"84"},{"size":7518,"mtime":1650426674724,"results":"139","hashOfConfig":"84"},{"size":5940,"mtime":1650418722737,"results":"140","hashOfConfig":"84"},{"size":7254,"mtime":1650421092702,"results":"141","hashOfConfig":"84"},{"size":7685,"mtime":1650421168691,"results":"142","hashOfConfig":"84"},{"size":6376,"mtime":1650421361472,"results":"143","hashOfConfig":"84"},{"size":7755,"mtime":1650421086155,"results":"144","hashOfConfig":"84"},{"size":1412,"mtime":1650423737974,"results":"145","hashOfConfig":"84"},{"size":1867,"mtime":1650424041479,"results":"146","hashOfConfig":"84"},{"size":599,"mtime":1650424041458,"results":"147","hashOfConfig":"84"},{"size":456,"mtime":1650424041476,"results":"148","hashOfConfig":"84"},{"size":66,"mtime":1650423001394,"results":"149","hashOfConfig":"84"},{"size":5451,"mtime":1650424655221,"results":"150","hashOfConfig":"84"},{"size":2417,"mtime":1650424968025,"results":"151","hashOfConfig":"84"},{"size":16215,"mtime":1650470789693,"results":"152","hashOfConfig":"84"},{"size":6677,"mtime":1650479578023,"results":"153","hashOfConfig":"84"},{"size":8519,"mtime":1650479578022,"results":"154","hashOfConfig":"84"},{"size":3726,"mtime":1650527441418,"results":"155","hashOfConfig":"84"},{"size":7960,"mtime":1650540390192,"results":"156","hashOfConfig":"84"},{"size":517,"mtime":1650541625708,"results":"157","hashOfConfig":"84"},{"size":356,"mtime":1650541209518,"results":"158","hashOfConfig":"84"},{"size":7737,"mtime":1650546768754,"results":"159","hashOfConfig":"84"},{"size":7092,"mtime":1650544708545,"results":"160","hashOfConfig":"84"},{"size":2619,"mtime":1650546589207,"results":"161","hashOfConfig":"84"},{"size":374,"mtime":1650552457355,"results":"162","hashOfConfig":"84"},{"size":558,"mtime":1650552452811,"results":"163","hashOfConfig":"84"},{"size":3022,"mtime":1650589882479,"results":"164","hashOfConfig":"84"},{"size":1317,"mtime":1650589322046,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},"4kajn",{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"177"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"181"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"177"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"177"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"181"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"177"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"177"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"177"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"177"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"177"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"177"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"177"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"177"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"177"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"177"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"177"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"177"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},"/Users/macintosh/Developer/RSPHCMB-Admin/src/index.js",["444","445","446"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Store from \"./data/redux\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from \"@mui/material/styles\";\nimport theme from \"./presentation/theme\";\nimport Button from \"@mui/material/Button\";\nimport { app, analytics, auth } from \"./data/firebase\";\n\nconst appTheme = createMuiTheme(theme);\n\nconst notistackRef = React.createRef();\nconst onClickDismiss = (key) => () => {\n  notistackRef.current.closeSnackbar(key);\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={appTheme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          ref={notistackRef}\n          action={(key) => (\n            <Button\n              onClick={onClickDismiss(key)}\n              style={{\n                textTransform: \"none\",\n                color: \"white\",\n                fontFamily: \"roboto\",\n              }}\n            >\n              Dismiss\n            </Button>\n          )}\n          maxSnack={2}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          autoHideDuration={5000}\n        >\n          <App />\n        </SnackbarProvider>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/reportWebVitals.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/App.js",["447","448"],[],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./presentation/pages/login\";\nimport ForgotPassword from \"./presentation/pages/password\";\nimport ProtectedRoute from \"./presentation/components/protected_routes\";\n\nimport { useDispatch } from \"react-redux\";\nimport { query, db, collection, onSnapshot, doc, auth } from \"./data/firebase/\";\nimport { setUserData } from \"./data/redux/slice/user\";\n\nimport ScrollToTop from \"./util/scroll\";\n\nimport { setFAQs } from \"./data/redux/slice/faqs\";\nimport { setTeamData } from \"./data/redux/slice/team\";\nimport { setPermSecData } from \"./data/redux/slice/perm_sec\";\nimport { setWDCData } from \"./data/redux/slice/wdc\";\nimport { setPartnersData } from \"./data/redux/slice/partners\";\nimport {\n  setResearchData,\n  setReportsData,\n  setDownloadsData,\n  setGalleryData,\n} from \"./data/redux/slice/resources\";\nimport { setLGAsData } from \"./data/redux/slice/lga\";\nimport Dashboard from \"./presentation/pages/dashboard\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [user, setUser] = React.useState(null);\n\n  React.useEffect(() => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n          // userData(doc.data());\n          dispatch(setUserData(doc.data()));\n          console.log(doc.data());\n          setUser(doc.data());\n        });\n      }\n\n      // auth().onAuthStateChanged((user) => {\n      //   if (user) {\n      //     onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n      //       dispatch(setUserData(doc.data()));\n      //     });\n      //   } else {\n      //     dispatch(setUserData(null));\n      //   }\n      // });\n    } catch (err) {\n      // console.log(err);\n    }\n    // return () => {};\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"faqs\"));\n    onSnapshot(q, (querySnapshot) => {\n      const faqs = [];\n      querySnapshot.forEach((doc) => {\n        faqs.push(doc.data());\n      });\n      dispatch(setFAQs(faqs));\n    });\n\n    const teamQuery = query(collection(db, \"team-members\"));\n    onSnapshot(teamQuery, (querySnapshot) => {\n      const teams = [];\n      querySnapshot.forEach((doc) => {\n        teams.push(doc.data());\n      });\n      dispatch(setTeamData(teams));\n    });\n\n    const partnersQuery = query(collection(db, \"partners\"));\n    onSnapshot(partnersQuery, (querySnapshot) => {\n      const partners = [];\n      querySnapshot.forEach((doc) => {\n        partners.push(doc.data());\n      });\n      dispatch(setPartnersData(partners));\n    });\n\n    onSnapshot(doc(db, \"perm-sec\", \"info\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setPermSecData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"contents\", \"wdc\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setWDCData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"resources\", \"research\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setResearchData(doc.data()));\n    });\n\n    const reportsQuery = query(collection(db, \"reports\"));\n    onSnapshot(reportsQuery, (querySnapshot) => {\n      const reports = [];\n      querySnapshot.forEach((doc) => {\n        reports.push(doc.data());\n      });\n      dispatch(setReportsData(reports));\n    });\n\n    const downloadsQuery = query(collection(db, \"downloads\"));\n    onSnapshot(downloadsQuery, (querySnapshot) => {\n      const downloads = [];\n      querySnapshot.forEach((doc) => {\n        downloads.push(doc.data());\n      });\n      dispatch(setDownloadsData(downloads));\n    });\n\n    const galleryQuery = query(collection(db, \"gallery\"));\n    onSnapshot(galleryQuery, (querySnapshot) => {\n      const gallery = [];\n      querySnapshot.forEach((doc) => {\n        gallery.push(doc.data());\n      });\n      dispatch(setGalleryData(gallery));\n    });\n\n    const LGAsQuery = query(collection(db, \"lgas\"));\n    onSnapshot(LGAsQuery, (querySnapshot) => {\n      const lgas = [];\n      querySnapshot.forEach((doc) => {\n        lgas.push(doc.data());\n      });\n      dispatch(setLGAsData(lgas));\n    });\n  });\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <ScrollToTop />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Login />\n            </Route>\n\n            <Route path=\"/forgot-password\" exact>\n              <ForgotPassword />\n            </Route>\n\n            <ProtectedRoute path=\"/dashboard\">\n              <Dashboard />\n            </ProtectedRoute>\n\n            {/* <Route\n              path=\"//*\"\n              element={\n                <ProtectedRoute>\n                  < />\n                </ProtectedRoute>\n              }\n            /> */}\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/index.js",[],[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/firebase/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/theme/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/protected_routes.js",["449","450"],[],"import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport user from \"../../data/redux/slice/user\";\nimport Login from \"../pages/login\";\n\nexport default function ProtectedRoute({ children, ...rest }) {\n  let { userData } = useSelector((state) => state.user);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (userData) {\n          return children;\n        } else {\n          return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/user.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/team.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/perm_sec.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/faqs.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/wdc.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/resources.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/partners.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/lga.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/index.js",["451","452"],[],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Hidden from \"@mui/material/Hidden\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Drawer1 from \"../../components/dashboard/drawer/Drawer1\";\nimport Drawer2 from \"../../components/dashboard/drawer/Drawer2\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Typography from \"@mui/material/Typography\";\nimport Overview from \"./tabs\";\nimport Home from \"./tabs/home\";\nimport { Redirect } from \"react-router-dom\";\nimport About from \"./tabs/about\";\nimport Services from \"./tabs/services\";\nimport Resources from \"./tabs/resources\";\nimport Contact from \"./tabs/contact\";\nimport Banner from \"./tabs/home/banner\";\nimport { setPermSecData } from \"../../../data/redux/slice/perm_sec\";\nimport { setTeamData } from \"../../../data/redux/slice/team\";\nimport { setContact } from \"../../../data/redux/slice/contact\";\nimport { setUserData } from \"../../../data/redux/slice/user\";\nimport {\n  setFeaturedService,\n  setSevicesData,\n} from \"../../../data/redux/slice/services\";\nimport {\n  setHealthAccessData,\n  setBuildingCultureData,\n} from \"../../../data/redux/slice/homepage\";\nimport { setData } from \"../../../data/redux/slice/rsphcmb\";\nimport { setWDCData } from \"../../../data/redux/slice/wdc\";\nimport { setLGAsData } from \"../../../data/redux/slice/lga\";\nimport { setEnquiriesData } from \"../../../data/redux/slice/enquiry\";\nimport {\n  onSnapshot,\n  db,\n  doc,\n  collection,\n  query,\n} from \"../../../data/firebase/\";\nimport { useDispatch } from \"react-redux\";\nimport PermSec from \"./tabs/home/perm_sec\";\nimport HealthAccess from \"./tabs/home/health_access\";\nimport BuildingCulture from \"./tabs/home/building_culture\";\nimport Covid19Section from \"./tabs/home/covid19_section\";\nimport RSPHCMB from \"./tabs/about/rsphcmb\";\nimport WhoWeAreContent from \"../../forms/about-rsphcmb/who_we_are_content\";\nimport WhoWeAreImage from \"../../forms/about-rsphcmb/who_we_are_img\";\nimport VisionSection from \"../../forms/about-rsphcmb/vision_section\";\nimport LGAs from \"./tabs/about/lga\";\nimport LGAItem from \"./tabs/about/components/lga_item\";\nimport WDC from \"./tabs/about/wdc\";\nimport UpdateWDC from \"../../forms/wdc/update_wdc\";\nimport Downloads from \"./tabs/resources/downloads\";\nimport Reports from \"./tabs/resources/reports\";\nimport GovernorSection from \"../../forms/about-rsphcmb/governor_section\";\nimport User from \"./tabs/users\";\nimport Enquiries from \"./tabs/enquiries\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    background: \"white\",\n    color: \"black\",\n    boxShadow: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(3),\n    backgroundColor: \"#F8F9FA\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  contentPadding: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    fontSize: 15,\n    margin: \"auto\",\n  },\n}));\n\nfunction Dashboard() {\n  // const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [openSignoutBackDrop, setOpenSignoutBackDrop] = React.useState(false);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleBackdrop = (value) => {\n    setOpenSignoutBackDrop(value);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  React.useEffect(() => {\n    onSnapshot(doc(db, \"perm-sec\", \"info\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setPermSecData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"home\", \"health-access\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setHealthAccessData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"home\", \"building-culture\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setBuildingCultureData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"about\", \"rsphcmb\"), (doc) => {\n      dispatch(setData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"contents\", \"wdc\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setWDCData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"contact\", \"data\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setContact(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"featured\", \"service\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setFeaturedService(doc.data()));\n    });\n\n    const servicesQuery = query(collection(db, \"services\"));\n    onSnapshot(servicesQuery, (querySnapshot) => {\n      const services = [];\n      querySnapshot.forEach((doc) => {\n        services.push(doc.data());\n      });\n      dispatch(setSevicesData(services));\n    });\n\n    const usersQuery = query(collection(db, \"users\"));\n    onSnapshot(usersQuery, (querySnapshot) => {\n      const users = [];\n      querySnapshot.forEach((doc) => {\n        users.push(doc.data());\n      });\n      dispatch(setUserData(users));\n    });\n\n    const teamQuery = query(collection(db, \"team-members\"));\n    onSnapshot(teamQuery, (querySnapshot) => {\n      const teams = [];\n      querySnapshot.forEach((doc) => {\n        teams.push(doc.data());\n      });\n      dispatch(setTeamData(teams));\n    });\n\n    const LGAsQuery = query(collection(db, \"lgas\"));\n    onSnapshot(LGAsQuery, (querySnapshot) => {\n      const lgas = [];\n      querySnapshot.forEach((doc) => {\n        lgas.push(doc.data());\n      });\n      dispatch(setLGAsData(lgas));\n    });\n\n    const enquiriesQuery = query(collection(db, \"enquiries\"));\n    onSnapshot(enquiriesQuery, (querySnapshot) => {\n      const enquiries = [];\n      querySnapshot.forEach((doc) => {\n        enquiries.push(doc.data());\n      });\n      dispatch(setEnquiriesData(enquiries));\n    });\n  }, []);\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    ></Menu>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <Backdrop style={{ zIndex: 5000 }} open={openSignoutBackDrop}>\n        <CircularProgress\n          size={90}\n          thickness={3.0}\n          style={{ color: \"white\" }}\n        />\n      </Backdrop>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {1 > 2 && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{ margin: \"auto\", paddingRight: 3 }}\n                ></Typography>\n              </div>\n            )}\n            <IconButton\n              aria-label=\"show 17 new notifications\"\n              color=\"inherit\"\n              edge=\"end\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              //onClick={handleNotificationMenuOpen}\n            ></IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <SearchIcon style={{ color: theme.palette.secondary.main }} />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer1\n            setMobileOpen={setMobileOpen}\n            mobileOpen={mobileOpen}\n            handleBackdrop={handleBackdrop}\n            drawerVariant=\"temporary\"\n            anchor=\"left\"\n            handleDrawerToggle={handleDrawerToggle}\n            // window={window}\n          />\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer2 handleBackdrop={handleBackdrop} />\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* Main switch routing here */}\n        <div className={classes.contentPadding}>\n          <Switch>\n            <Redirect exact from=\"/dashboard\" to=\"/dashboard/overview\" />\n            <Route path=\"/dashboard/overview\" exact={true}>\n              <Overview />\n            </Route>\n\n            <Route path=\"/dashboard/home\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/dashboard/home/banner_slides\">\n              <Banner />\n            </Route>\n            <Route path=\"/dashboard/home/perm_sec\">\n              <PermSec />\n            </Route>\n            <Route path=\"/dashboard/home/health_access\">\n              <HealthAccess />\n            </Route>\n            <Route path=\"/dashboard/home/building_culture\">\n              <BuildingCulture />\n            </Route>\n            <Route path=\"/dashboard/home/covid19\">\n              <Covid19Section />\n            </Route>\n\n            <Route path=\"/dashboard/about\" exact>\n              <About />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb\" exact>\n              <RSPHCMB />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/who_we_are_content\" exact>\n              <WhoWeAreContent />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/who_we_are_image\" exact>\n              <WhoWeAreImage />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/vision_mission_edit\" exact>\n              <VisionSection />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/governor_edit\" exact>\n              <GovernorSection />\n            </Route>\n            <Route path=\"/dashboard/about/lga\" exact>\n              <LGAs />\n            </Route>\n            <Route path=\"/dashboard/about/lga/:id\" exact>\n              <LGAItem />\n            </Route>\n            <Route path=\"/dashboard/about/wdc\" exact>\n              <WDC />\n            </Route>\n            <Route path=\"/dashboard/about/wdc/edit\" exact>\n              <UpdateWDC />\n            </Route>\n\n            <Route path=\"/dashboard/services\" exact>\n              <Services />\n            </Route>\n\n            <Route path=\"/dashboard/resources\" exact>\n              <Resources />\n            </Route>\n            <Route path=\"/dashboard/resources/reports\" exact>\n              <Reports />\n            </Route>\n            <Route path=\"/dashboard/resources/downloads\" exact>\n              <Downloads />\n            </Route>\n\n            <Route path=\"/dashboard/contact\" exact>\n              <Contact />\n            </Route>\n\n            <Route path=\"/dashboard/users\" exact>\n              <User />\n            </Route>\n\n            <Route path=\"/dashboard/enquiries\" exact>\n              <Enquiries />\n            </Route>\n          </Switch>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nDashboard.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default Dashboard;\n\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIrMjM0ODA3MTIzOTkxNCIsImlhdCI6MTY1MDI3NzYzMywiZXhwIjoxNjUwMzY0MDMzfQ.lJZeZbi8UM-2g16fnXLRS15BGDerpCTFQJH47_ZYtlw\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/password/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/login/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/util/scroll/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/login.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer1.js",["453","454","455","456","457","458","459","460","461","462","463"],[],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/logo_white.svg\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { auth } from \"../../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../../data/redux/slice/user\";\nimport { Logout, Settings } from \"@mui/icons-material\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer1 = (props) => {\n  const classes = useStyles();\n  const { mobileOpen, setMobileOpen } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Overview\",\n      icon: (\n        <DashBoardIcon\n          style={selectedIndex === 0 ? { color: \"#white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/\",\n    },\n    {\n      text: \"Home\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={selectedIndex === 1 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/home\",\n    },\n    {\n      text: \"About\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={selectedIndex === 2 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/about\",\n    },\n    {\n      text: \"Services\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/services\",\n    },\n    {\n      text: \"Resources\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/resources\",\n    },\n    {\n      text: \"Contact\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/contact\",\n    },\n    {\n      text: \"Others\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/others\",\n    },\n    {\n      text: \"Users\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/users\",\n    },\n    {\n      text: \"Enquiries\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/enquiries\",\n    },\n  ];\n\n  const subDrawerItems = [\n    {\n      text: \"Settings\",\n      icon: (\n        <Settings\n          style={selectedIndex === 9 ? { color: \"#white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/settings\",\n    },\n    {\n      text: \"Log out\",\n      icon: (\n        <Logout\n          style={\n            selectedIndex === 10 ? { color: \"#white\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n    setMobileOpen(!mobileOpen);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    // try {\n    //   await auth.signOut();\n    //   dispatch(setUserData(null));\n    //   props.handleBackdrop(false);\n    //   enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n    //   history.replace({\n    //     pathname: \"/login\",\n    //   });\n    // } catch (err) {\n    //   enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n    //     variant: \"error\",\n    //   });\n    // }\n    // finally {\n    //   history.go(0);\n    // }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n      <br />\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          padding: 16,\n        }}\n      >\n        <Divider />\n        <List className={classes.listRoot}>\n          {subDrawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant={props.drawerVariant}\n      container={container}\n      className={classes.drawer}\n      anchor={props.anchor}\n      open={mobileOpen}\n      onClose={props.handleDrawerToggle}\n      classes={{ paper: classes.drawerPaper }}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default Drawer1;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer2.js",["464","465","466","467","468"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/domain/service/index.js",["469","470"],[],"import { auth } from \"../../data/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  setPersistence,\n  browserSessionPersistence,\n  setDoc,\n  doc,\n  db,\n} from \"../../data/firebase/\";\n\nexport const createUser = async (email, pass) => {\n  return await createUserWithEmailAndPassword(auth, email, pass);\n};\n\nexport const signInUser = async (email, pass) => {\n  try {\n    return await signInWithEmailAndPassword(auth, email, pass);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addCategory = async (id, name, image) => {\n  // Add a new document in collection \"cities\"\n  return await setDoc(doc(db, \"categories\", id), {\n    id: id,\n    name: name,\n    url: image,\n  });\n  //   db.collection(\"categories\").doc(id).set({\n  //     id: id,\n  //     name: name,\n  //     url: image,\n  //   });\n};\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/index.js",["471","472"],[],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"#18113C\">\n          {title}\n        </Typography>\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"#18113C\">\n              {excerpt}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Home = () => {\n  let list = [\n    {\n      title: \"Banner\",\n      desc: \"Manage homepage slides\",\n      to: \"/dashboard/home/banner_slides\",\n    },\n    {\n      title: \"Permanent Sec's Message\",\n      desc: \"Update perm sec's message\",\n      to: \"/dashboard/home/perm_sec\",\n    },\n    {\n      title: \"Health Care Access\",\n      desc: \"Manage healthcare access\",\n      to: \"/dashboard/home/health_access\",\n    },\n    {\n      title: \"Building Culture\",\n      desc: \"Update content\",\n      to: \"/dashboard/home/building_culture\",\n    },\n    {\n      title: \"Covid19 Vaccination\",\n      desc: \"Manage Covid19 vaccination\",\n      to: \"/dashboard/home/covid19\",\n    },\n  ];\n\n  return (\n    <div>\n      <Container>\n        <Box display={\"flex\"} flexDirection=\"column\">\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {list?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CardItem\n                  image={list[index].image}\n                  title={list[index].title}\n                  excerpt={list[index].desc}\n                  to={list[index].to}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/index.js",["473","474"],[],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"#18113C\">\n          {title}\n        </Typography>\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"#18113C\">\n              {excerpt}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst About = () => {\n  let list = [\n    {\n      title: \"About RSPHCMB\",\n      desc: \"Manage RSPHCMB\",\n      to: \"/dashboard/about/rsphcmb\",\n    },\n    {\n      title: \"Local Government Areas\",\n      desc: \"Manage Rivers State LGAs data\",\n      to: \"/dashboard/about/lga\",\n    },\n    {\n      title: \"WDC\",\n      desc: \"Manage WDC data\",\n      to: \"/dashboard/about/wdc\",\n    },\n  ];\n\n  return (\n    <div>\n      <Container>\n        <Box display={\"flex\"} flexDirection=\"column\">\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {list?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CardItem\n                  image={list[index].image}\n                  title={list[index].title}\n                  excerpt={list[index].desc}\n                  to={list[index].to}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default About;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/services/index.js",["475","476"],[],"import { Add } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport Box from \"@mui/system/Box\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport NewServiceForm from \"../../../../forms/services/new_service_form\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport EditServiceForm from \"../../../../forms/services/edit_service_form\";\nimport FeaturedServiceForm from \"../../../../forms/services/set_featured_service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ServiceItemCard = (props) => {\n  const { item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"services/\" + item?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"services\", \"\" + item?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${item?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Service\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditServiceForm\n            setOpen={setOpen}\n            img={item?.image}\n            title={item?.title}\n            id={item?.id}\n            body={item?.body}\n            summary={item?.summary}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Service\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Typography variant=\"body2\" fontSize={14}>\n              {item?.title}\n            </Typography>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n        // onClick={() =>\n        //   history.push({\n        //     pathname: \"/dashboard/service/\" + item?.id,\n        //     state: {\n        //       title: item?.title,\n        //       image: item?.image,\n        //       body: item?.body,\n        //       summary: item?.summary,\n        //       date: item?.createdAt,\n        //       id: item?.id,\n        //     },\n        //   })\n        // }\n        >\n          <CardMedia image={item?.image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {item?.title?.length > 75\n                ? item?.title?.substring(0, 75) + \"...\"\n                : item?.title}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {item?.summary}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Services = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [serviceList, setServiceList] = React.useState(null);\n  const [featured, setFeatured] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"services\"));\n    onSnapshot(q, (querySnapshot) => {\n      const service = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        service?.push(dat);\n      });\n      setServiceList(service);\n    });\n\n    onSnapshot(doc(db, \"featured\", \"service\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      setFeatured(doc.data());\n      // dispatch(setPermSecData(doc.data()));\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Service\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<NewServiceForm setOpen={setOpen} />}\n      />\n      <CustomDialog2\n        open={open2}\n        title=\"Set Featured Service\"\n        handleClose={() => setOpen2(false)}\n        bodyComponent={<FeaturedServiceForm setOpen={setOpen2} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Services\n          </Typography>\n        </div>\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent=\"end\"\n          alignItems={\"center\"}\n        >\n          <Button\n            sx={{ mx: 2 }}\n            startIcon={<Add />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setOpen2(true)}\n          >\n            Featured Service\n          </Button>\n          <Button\n            startIcon={<Add />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setOpen(true)}\n          >\n            Add Service\n          </Button>\n        </Box>\n      </div>\n      <br />\n      <div>\n        <div>\n          <Typography variant=\"h6\" gutterBottom>\n            Featured Service\n          </Typography>\n          <ServiceItemCard item={featured} />\n        </div>\n        <br />\n        <br />\n        <Typography variant=\"h6\" gutterBottom>\n          Services\n        </Typography>\n        {serviceList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {serviceList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <ServiceItemCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {serviceList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Services;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/index.js",["477","478"],[],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"#18113C\">\n          {title}\n        </Typography>\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"#18113C\">\n              {excerpt}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Resources = () => {\n  let list = [\n    {\n      title: \"Publications\",\n      desc: \"Manage Publications\",\n      to: \"/dashboard/resources/publications\",\n    },\n    {\n      title: \"Downloads\",\n      desc: \"Manage Downloads\",\n      to: \"/dashboard/resources/downloads\",\n    },\n    {\n      title: \"Reports\",\n      desc: \"Manage Reports\",\n      to: \"/dashboard/resources/reports\",\n    },\n    {\n      title: \"Gallery\",\n      desc: \"Manage Gallery\",\n      to: \"/dashboard/resources/gallery\",\n    },\n    {\n      title: \"Research\",\n      desc: \"Manage Research\",\n      to: \"/dashboard/resources/research\",\n    },\n  ];\n\n  return (\n    <div>\n      <Container>\n        <Box display={\"flex\"} flexDirection=\"column\">\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {list?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CardItem\n                  image={list[index].image}\n                  title={list[index].title}\n                  excerpt={list[index].desc}\n                  to={list[index].to}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Resources;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/contact/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dialogs/custom-dialog.js",["479","480","481"],[],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200,\n    //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog = (props) => {\n  const { title, open, handleClose, bodyComponent } = props;\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{ fontFamily: \"roboto\", fontWeight: \"600\" }}\n        >\n          {title}\n        </Typography>\n\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <br />\n      {bodyComponent}\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        disablePortal={true}\n        disableEscapeKeyDown={true}\n        // disableBackdropClick={false}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomDialog;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/edit_service_form.js",["482","483","484","485","486","487"],[],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, body, summary } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    authorPhoto: \"\",\n    summary: summary,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const [serviceBody, setServiceBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"services/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"services\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              body: serviceBody,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Service updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateService = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      body: serviceBody,\n      summary: formValues.summary ? formValues.summary : summary,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"services\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: serviceBody,\n          summary: formValues.summary,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Service updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"services/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateService}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Service title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service title is required\"]}\n        />\n\n        <RichText\n          value={serviceBody}\n          setValue={setServiceBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={2}\n          label=\"Service summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service summary is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditServiceForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/richtext/index.js",["488","489"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/new_service_form.js",["490"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst NewServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    summary: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const [serviceBody, setServiceBody] = React.useState(null);\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createService = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"services/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setDoc(doc(db, \"services\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            summary: formValues.summary,\n            body: serviceBody,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New service added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createService}>\n        <TextValidator\n          id=\"title\"\n          label=\"Service name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name of service is required\"]}\n        />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={6}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Upload featured image\"\n            />\n          </Grid>\n          <Grid item sm={6} md={6}>\n            <div>\n              {previewPassport && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewPassport}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={3}\n          label=\"Service summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service summary is required\"]}\n        />\n        <br />\n\n        <RichText\n          value={serviceBody}\n          setValue={setServiceBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default NewServiceForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/banner.js",["491","492","493","494","495"],[],"import { Add } from \"@mui/icons-material\";\nimport { Container, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport NewBannerForm from \"../../../../forms/home/banner/add_banner\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport UpdateBannerForm from \"../../../../forms/home/banner/update_banner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ItemCard = (props) => {\n  const { item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"home-banner/\" + item?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"home-banner\", \"\" + item?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${item?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Banner\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateBannerForm\n            setOpen={setOpen}\n            img={item?.image}\n            title={item?.title}\n            id={item?.id}\n            description={item?.description}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Banner\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Typography variant=\"body2\" fontSize={14}>\n              {item?.title}\n            </Typography>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea>\n          <CardMedia image={item?.image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {item?.title?.length > 75\n                ? item?.title?.substring(0, 75) + \"...\"\n                : item?.title}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {item?.description}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Banner = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [bannerList, setBannerList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"home-banner\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const banner = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        banner?.push(dat);\n      });\n      setBannerList(banner);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Banner\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<NewBannerForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Banner\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Banner\n        </Button>\n      </div>\n      <br />\n      <div>\n        {bannerList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {bannerList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <ItemCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {bannerList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/add_banner.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/update_banner.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/perm_sec.js",["496","497","498","499"],[],"import { ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport {\n  Avatar,\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog3 from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog4 from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog5 from \"../../../../components/dialogs/custom-dialog\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  doc,\n  getDownloadURL,\n  uploadBytesResumable,\n  ref,\n  db,\n  storage,\n  updateDoc,\n  deleteObject,\n} from \"../../../../../data/firebase\";\nimport { makeStyles } from \"@mui/styles\";\nimport RichText from \"../../../../components/misc/richtext\";\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst PermSec = () => {\n  const { permSecData } = useSelector((state) => state.permSec);\n  const history = useHistory();\n\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [open4, setOpen4] = React.useState(false);\n  const [open5, setOpen5] = React.useState(false);\n\n  return (\n    <div>\n      <Container>\n        <CustomDialog\n          title=\"Update Picture\"\n          open={open}\n          handleClose={() => setOpen(false)}\n          bodyComponent={\n            <UpdateImage\n              setOpen={setOpen}\n              image={permSecData?.image}\n              id={\"info\"}\n            />\n          }\n        />\n        <CustomDialog2\n          title=\"Update Name\"\n          open={open2}\n          handleClose={() => setOpen2(false)}\n          bodyComponent={\n            <UpdateName\n              setOpen={setOpen2}\n              name={permSecData?.name}\n              id={\"info\"}\n            />\n          }\n        />\n        <CustomDialog3\n          title=\"Update Biography\"\n          open={open3}\n          handleClose={() => setOpen3(false)}\n          bodyComponent={\n            <UpdateBio\n              setOpen={setOpen3}\n              bio={permSecData?.biography}\n              id={\"info\"}\n            />\n          }\n        />\n\n        <CustomDialog4\n          title=\"Update Message\"\n          open={open4}\n          handleClose={() => setOpen4(false)}\n          bodyComponent={\n            <UpdateMessage\n              setOpen={setOpen4}\n              message={permSecData?.message}\n              id={\"info\"}\n            />\n          }\n        />\n\n        <CustomDialog5\n          title=\"Update Summary\"\n          open={open5}\n          handleClose={() => setOpen5(false)}\n          bodyComponent={\n            <UpdateSummary\n              setOpen={setOpen5}\n              summary={permSecData?.summary}\n              id={\"info\"}\n            />\n          }\n        />\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={permSecData?.image} alt=\"\" />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() => setOpen(true)}\n              >\n                Update Image\n              </Button>\n              <br />\n              <Box\n                paddingY={1}\n                display={\"flex\"}\n                flexDirection=\"row\"\n                justifyContent={\"space-between\"}\n                alignItems=\"center\"\n              >\n                <Typography>{permSecData?.name}</Typography>\n                <Button\n                  variant=\"contained\"\n                  sx={{ textTransform: \"none\" }}\n                  startIcon={<Edit />}\n                  onClick={() => setOpen2(true)}\n                >\n                  Update\n                </Button>\n              </Box>\n              <Divider />\n              <Box\n                paddingY={1}\n                display={\"flex\"}\n                flexDirection=\"row\"\n                justifyContent={\"space-between\"}\n                alignItems=\"center\"\n              >\n                <Typography>{permSecData?.position}</Typography>\n              </Box>\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">BIOGRAPHY</Typography>\n                <IconButton onClick={() => setOpen3(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <MUIRichTextEditor\n                readOnly\n                inlineToolbar={false}\n                toolbar={false}\n                defaultValue={permSecData?.biography}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">WELCOME MESSAGE</Typography>\n          <IconButton onClick={() => setOpen4(true)}>\n            <Edit />\n          </IconButton>\n        </Box>\n        <Divider />\n        <MUIRichTextEditor\n          readOnly\n          inlineToolbar={false}\n          toolbar={false}\n          defaultValue={permSecData?.message}\n        />\n\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">\n            MESSAGE SUMMARY (SHORT DESCRIPTION ON HOME PAGE)\n          </Typography>\n          <IconButton onClick={() => setOpen5(true)}>\n            <Edit />\n          </IconButton>\n        </Box>\n        <Divider />\n        <Typography>{permSecData?.summary}</Typography>\n      </Container>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst UpdateImage = (props) => {\n  const classes = useStyles();\n  let { image, setOpen, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    // const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"perm-sec/\" + id);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"perm-sec\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    setIsLoading(true);\n\n    //Change on the featured image and all texts\n    const fileRef = ref(storage, \"perm-sec/info\");\n\n    deleteObject(fileRef)\n      .then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        // console.log(\"ErR: \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateName = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, name } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateName = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      name: formValues.name ? formValues.name : name,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"perm-sec\", \"\" + id);\n      await updateDoc(mRef, {\n        name: formValues.name,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Name updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateName}>\n        <TextValidator\n          className={classes.mb}\n          id=\"name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.name === \" \"\n              ? name\n              : !formValues.name\n              ? \"\"\n              : formValues.name\n          }\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateBio = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, bio } = props;\n  const [body, setBody] = React.useState(bio);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const updateName = async (e) => {\n    setIsLoading(true);\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"perm-sec\", \"\" + id);\n      await updateDoc(mRef, {\n        biography: body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Biography updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateName}>\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateMessage = (props) => {\n  // const classes = useStyles();\n  let { setOpen, id, message } = props;\n  const [body, setBody] = React.useState(message);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const updateMessage = async (e) => {\n    setIsLoading(true);\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"perm-sec\", \"\" + id);\n      await updateDoc(mRef, {\n        message: body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Message updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateMessage}>\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateSummary = (props) => {\n  const classes = useStyles();\n  let { setOpen, summary } = props;\n  const [formValues, setFormValues] = React.useState({\n    summary: summary,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateSummary = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      summary: formValues.summary ? formValues.summary : summary,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"perm-sec\", \"info\");\n      await updateDoc(mRef, {\n        summary: formValues.summary,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Summary updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateSummary}>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          label=\"Summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          rows={5}\n          fullWidth\n          required\n          className={classes.mb}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default PermSec;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/homepage.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/health_access.js",["500","501","502","503","504"],[],"import { ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport {\n  Avatar,\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  updateDoc,\n  db,\n  doc,\n  ref,\n  uploadBytesResumable,\n  storage,\n  deleteObject,\n  getDownloadURL,\n} from \"../../../../../data/firebase\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog3 from \"../../../../components/dialogs/custom-dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst HealthAccess = () => {\n  const { healthAccess } = useSelector((state) => state.homepage);\n  const history = useHistory();\n\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n\n  return (\n    <div>\n      <CustomDialog\n        title=\"Update Picture\"\n        open={open}\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateImage\n            setOpen={setOpen}\n            image={healthAccess?.image}\n            id={\"info\"}\n          />\n        }\n      />\n      <CustomDialog2\n        title=\"Update Title\"\n        open={open2}\n        handleClose={() => setOpen2(false)}\n        bodyComponent={\n          <UpdateTitle\n            setOpen={setOpen2}\n            title={healthAccess?.title}\n            id={\"info\"}\n          />\n        }\n      />\n      <CustomDialog3\n        title=\"Update Description\"\n        open={open3}\n        handleClose={() => setOpen3(false)}\n        bodyComponent={\n          <UpdateDescription\n            setOpen={setOpen3}\n            description={healthAccess?.description}\n            id={\"info\"}\n          />\n        }\n      />\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={healthAccess?.image} alt=\"\" />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() => setOpen(true)}\n              >\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">TITLE</Typography>\n                <IconButton onClick={() => setOpen2(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{healthAccess?.title}</Typography>\n              <br />\n              <br />\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">DESCRIPTION</Typography>\n                <IconButton onClick={() => setOpen3(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{healthAccess?.description}</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst UpdateImage = (props) => {\n  const classes = useStyles();\n  let { image, setOpen, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    // const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"home/\" + id);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"home\", \"health-access\");\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    setIsLoading(true);\n\n    //Change on the featured image and all texts\n    const fileRef = ref(storage, \"health-access/im1\");\n\n    deleteObject(fileRef)\n      .then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        // console.log(\"ErR: \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateTitle = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateTitle = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"health-access\");\n      await updateDoc(mRef, {\n        title: formValues.title,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Title updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateTitle}>\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateDescription = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, description } = props;\n  const [formValues, setFormValues] = React.useState({\n    description: description,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const update = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      description: formValues.description\n        ? formValues.description\n        : description,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"health-access\");\n      await updateDoc(mRef, {\n        description: formValues.description,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Description updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={update}>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Description\"\n          multiline\n          name=\"description\"\n          rows={4}\n          fullWidth\n          required\n          onChange={handleChange}\n          value={formValues.description}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default HealthAccess;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/building_culture.js",["505"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/covid19_section.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/rsphcmb.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/rsphcmb.js",["506"],[],"import { Add, ArrowBackIosNew, Delete, Edit } from \"@mui/icons-material\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  storage,\n  ref,\n  db,\n  deleteObject,\n  deleteDoc,\n  doc,\n} from \"../../../../../data/firebase\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport AddTeamMember from \"../../../../forms/about-rsphcmb/add_team\";\nimport UpdateTeamForm from \"../../../../forms/about-rsphcmb/update_team\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 320,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 175,\n    width: \"100%\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, name, position, id, biography } = props;\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"team-members/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"team-members\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          // console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Team Member\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateTeamForm\n            setOpen={setOpen}\n            image={image}\n            name={name}\n            id={id}\n            biography={biography}\n            position={position}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Team Member\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={4} className={classes.root}>\n        <Box\n          display=\"flex\"\n          flexDirection={\"row\"}\n          justifyContent=\"end\"\n          alignItems={\"center\"}\n        >\n          <IconButton onClick={() => setOpenDelete(true)}>\n            <Delete color=\"error\" />\n          </IconButton>\n\n          <IconButton onClick={() => setOpen(true)}>\n            <Edit />\n          </IconButton>\n        </Box>\n        <CardMedia image={image} className={classes.cardMedia} />\n        <CardContent>\n          <Typography variant=\"h6\" color=\"#18113C\">\n            {name}\n          </Typography>\n          <div className={classes.row}>\n            <div className={classes.column}>\n              <Typography variant=\"body1\" color=\"#18113C\">\n                {position}\n              </Typography>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nconst RSPHCMB = () => {\n  const { data } = useSelector((state) => state.rsphcmb);\n  const { teamMembersData } = useSelector((state) => state.teams);\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Team Member\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddTeamMember setOpen={setOpen} />}\n      />\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Typography variant=\"h6\" gutterBottom>\n          WHO WE ARE\n        </Typography>\n        <Divider />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={data?.image} alt=\"\" />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() =>\n                  history.push({\n                    pathname: \"/dashboard/about/rsphcmb/who_we_are_image\",\n                    state: {\n                      image: data?.image,\n                    },\n                  })\n                }\n              >\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography gutterBottom>CONTENT</Typography>\n                <IconButton\n                  onClick={() =>\n                    history.push({\n                      pathname: \"/dashboard/about/rsphcmb/who_we_are_content\",\n                      state: {\n                        content: data?.who_we_are,\n                      },\n                    })\n                  }\n                >\n                  <Edit />\n                </IconButton>\n              </Box>\n              <MUIRichTextEditor\n                readOnly\n                inlineToolbar={false}\n                defaultValue={data?.who_we_are}\n                toolbar={false}\n              />\n              <br />\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Divider />\n        <br />\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            VISION & MISSION STATEMENT\n          </Typography>\n          <IconButton\n            onClick={() =>\n              history.push({\n                pathname: \"/dashboard/about/rsphcmb/vision_mission_edit\",\n                state: {\n                  vision: data?.vision,\n                  mission: data?.mission,\n                  image: data?.visionImage,\n                },\n              })\n            }\n          >\n            <Edit />\n          </IconButton>\n        </Box>\n        <Divider />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={7}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography gutterBottom>VISION STATEMENT</Typography>\n              <Typography gutterBottom>{data?.vision}</Typography>\n              <br />\n              <Typography gutterBottom>MISSION STATEMENT</Typography>\n              <Typography gutterBottom>{data?.mission}</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={5}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={data?.visionImage} alt=\"\" width={\"90%\"} />\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            GOVERNOR & DEPUTY\n          </Typography>\n          <IconButton\n            onClick={() =>\n              history.push({\n                pathname: \"/dashboard/about/rsphcmb/governor_edit\",\n                state: {\n                  governorName: data?.governorName,\n                  governorImage: data?.governorImage,\n                  deputyGovName: data?.deputyGovName,\n                  deputyGovImage: data?.deputyGovImage,\n                },\n              })\n            }\n          >\n            <Edit />\n          </IconButton>\n        </Box>\n\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={6}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography fontWeight={\"600\"} gutterBottom>\n                GOVERNOR\n              </Typography>\n              <img src={data?.visionImage} alt=\"\" width={\"75%\"} />\n              <br />\n              <Typography gutterBottom>{data?.governorName}</Typography>\n              <Typography gutterBottom>Governor, Rivers State</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={6}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography fontWeight={\"600\"} gutterBottom>\n                DEPUTY GOVERNOR\n              </Typography>\n              <img src={data?.visionImage} alt=\"\" width={\"75%\"} />\n              <br />\n              <Typography gutterBottom>{data?.governorName}</Typography>\n              <Typography gutterBottom>Governor, Rivers State</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">TEAM MEMBERS</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            sx={{ textTransform: \"none\" }}\n            onClick={() => setOpen(true)}\n          >\n            Add Member\n          </Button>\n        </Box>\n        <br />\n        <Grid\n          container\n          spacing={{ xs: 2, md: 2 }}\n          columns={{ xs: 4, sm: 8, md: 12 }}\n        >\n          {teamMembersData?.map((_, index) => (\n            <Grid item xs={2} sm={4} md={4} key={index}>\n              <CardItem\n                image={teamMembersData[index]?.image}\n                name={teamMembersData[index]?.name}\n                id={teamMembersData[index]?.id}\n                position={teamMembersData[index]?.position}\n                biography={teamMembersData[index]?.biography}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default RSPHCMB;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_img.js",["507","508"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst WhoWeAreImage = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"rsphcmb_who_we_are/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"about\", \"rsphcmb\");\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n            history.goBack();\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    setIsLoading(true);\n\n    const fileRef = ref(storage, \"rsphcmb_who_we_are/image\");\n\n    deleteObject(fileRef)\n      .then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : location?.state?.image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default WhoWeAreImage;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_content.js",["509"],[],"import React from \"react\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst WhoWeAreContent = (props) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [body, setBody] = React.useState(location.state?.content);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const updateData = async (e) => {\n    setIsLoading(true);\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"about\", \"rsphcmb\");\n      await updateDoc(mRef, {\n        who_we_are: body,\n        updatedAt: timeNow,\n      });\n      history.goBack();\n      setIsLoading(false);\n      enqueueSnackbar(`Data updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm onSubmit={updateData}>\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default WhoWeAreContent;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/vision_section.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/util/lga/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/lga_item.js",["510","511","512"],[],"import { Add, ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport {\n  Avatar,\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n// import MUIRichTextEditor from \"mui-rte\";\nimport React from \"react\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport CommitteeTable from \"../../../../../components/misc/table/comm_table\";\nimport FacilitiesTable from \"../../../../../components/misc/table/facility_table\";\nimport {\n  updateDoc,\n  uploadBytesResumable,\n  db,\n  ref,\n  doc,\n  storage,\n  getDownloadURL,\n} from \"../../../../../../data/firebase\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport CustomDialog from \"../../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../../components/dialogs/custom-dialog\";\nimport CustomDialog3 from \"../../../../../components/dialogs/custom-dialog\";\nimport NewCommitteeForm from \"../../../../../forms/lga/committee/add_committee\";\n\nconst LGAItem = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { LGAsData } = useSelector((state) => state.lgas);\n  const [lgaFacilities, setLGAFacilities] = React.useState();\n  const [lgaItem, setLGAItem] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n\n  React.useEffect(() => {\n    let faci = LGAsData?.filter((it) => it?.lga === location.state?.title);\n    setLGAFacilities(faci[0]?.facilities);\n    setLGAItem(faci[0]);\n    // console.log(\"Facility: \", faci);\n  }, [LGAsData]);\n\n  return (\n    <div>\n      <CustomDialog\n        title=\"Update Featured Image\"\n        open={open}\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateImage\n            setOpen={setOpen}\n            image={lgaItem?.image}\n            id={lgaItem?.id}\n          />\n        }\n      />\n      <CustomDialog2\n        title=\" Update Background Information Text. \"\n        open={open2}\n        handleClose={() => setOpen2(false)}\n        bodyComponent={\n          <UpdateTitle\n            setOpen={setOpen2}\n            title={lgaItem?.bg_info}\n            id={lgaItem?.id}\n          />\n        }\n      />\n      <CustomDialog3\n        title=\"Add New Committee Record\"\n        open={open3}\n        handleClose={() => setOpen3(false)}\n        bodyComponent={\n          <NewCommitteeForm\n            setOpen={setOpen3}\n            id={lgaItem?.id}\n            list={lgaItem?.committees}\n          />\n        }\n      />\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"end\"}\n          alignItems=\"center\"\n        >\n          <Button startIcon={<Edit />} onClick={() => setOpen2(true)}>\n            Edit\n          </Button>\n        </Box>\n        <Divider />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={lgaItem?.image} alt=\"\" width={\"100%\"} />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() => setOpen(true)}\n              >\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography gutterBottom>BACKGROUND INFORMATION</Typography>\n              <Typography gutterBottom>{lgaItem?.bg_info}</Typography>\n              <br />\n              <br />\n              <Typography gutterBottom>PHC TECHNICAL COMMITTEES</Typography>\n              <Typography gutterBottom>{lgaItem?.comm_desc}</Typography>\n              <br />\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <br />\n        <br />\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n        >\n          <Typography gutterBottom>COMMITTEES</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setOpen3(true)}\n          >\n            Add New\n          </Button>\n        </Box>\n        <Divider />\n        <br />\n        <Box>\n          <CommitteeTable list={lgaItem?.committees} />\n        </Box>\n\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n        >\n          <Typography gutterBottom>FACILITIES</Typography>\n          <Button variant=\"contained\" startIcon={<Add />}>\n            Add New\n          </Button>\n        </Box>\n        <Divider />\n        <br />\n        <Box>\n          <FacilitiesTable list={lgaItem?.facilities} />\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst UpdateImage = (props) => {\n  const classes = useStyles();\n  let { image, setOpen, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"lgas/\" + id);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"lgas\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    setIsLoading(true);\n    uploadNewImage();\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateTitle = (props) => {\n  const classes = useStyles();\n  let { setOpen, title, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateName = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"\" + id);\n      await updateDoc(mRef, {\n        title: formValues.title,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateName}>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          label=\"Background Information\"\n          placeholder=\"Type here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          rows={10}\n          fullWidth\n          required\n          className={classes.mb}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default LGAItem;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/comm_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button.js",["513","514","515","516","517"],[],"import React from \"react\";\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  ListItemText,\n  Fade,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport CustomDialogEdit from \"../dialogs/custom-dialog\";\nimport CustomDialogDelete from \"../dialogs/custom-dialog\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { Box } from \"@mui/system\";\n\n// const useStyles = makeStyles((theme) => ({\n//     awardRoot: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//     },\n//     awardRow: {\n//         display: 'flex',\n//         flexDirection: 'row',\n//         marginLeft: 'auto',\n//     },\n//     button: {\n//         margin: theme.spacing(1)\n//     }\n// }))\n\nconst ActionButton = ({ selected, index, setIsPerforming }) => {\n  // const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const { notifications, userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={() => setOpenUpdate(true)}>\n          <ListItemText primary=\"Edit\" />\n        </MenuItem>\n        <CustomDialogEdit\n          title={\"Update \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <UpdateView\n              setOpen={setOpenUpdate}\n              name={selected?.name}\n              designation={selected?.designation}\n            />\n          }\n          open={openUpdate}\n          handleClose={() => setOpenUpdate(false)}\n        />\n        <MenuItem onClick={() => setOpenDelete(true)}>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <CustomDialogDelete\n          title={\"Delete \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <DeleteView\n              setOpen={setOpenDelete}\n              name={selected?.name}\n              id={index}\n            />\n          }\n          open={openDelete}\n          handleClose={() => setOpenDelete(false)}\n        />\n      </Menu>\n    </>\n  );\n};\n\nconst UpdateView = (props) => {\n  let { setOpen, name, designation } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    designation: designation,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submit = (e) => {\n    setIsLoading(true);\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={submit}>\n        <TextValidator\n          name=\"name\"\n          fullWidth\n          placeholder=\"Name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n        <br />\n        <TextValidator\n          name=\"designation\"\n          fullWidth\n          placeholder=\"Designation\"\n          label=\"Designation\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.designation}\n          onChange={handleChange}\n        />\n        <br />\n        <Button variant=\"contained\" type=\"submit\" fullWidth>\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst DeleteView = (props) => {\n  let { name, index, id, setOpen } = props;\n\n  const handleDelete = () => {};\n\n  return (\n    <div>\n      <Typography gutterBottom>\n        Are you sure you want to delete {name} from table?\n      </Typography>\n      <br />\n      <Box\n        display=\"flex\"\n        flexDirection={\"row\"}\n        justifyContent=\"end\"\n        alignItems={\"center\"}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ textTransform: \"none\", mx: 2 }}\n          onClick={() => setOpen(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          sx={{ textTransform: \"none\" }}\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ActionButton;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/facility_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button2.js",["518","519","520","521"],[],"import React from \"react\";\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  ListItemText,\n  Fade,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport CustomDialogEdit from \"../dialogs/custom-dialog\";\nimport CustomDialogDelete from \"../dialogs/custom-dialog\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { Box } from \"@mui/system\";\n\n// const useStyles = makeStyles((theme) => ({\n//     awardRoot: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//     },\n//     awardRow: {\n//         display: 'flex',\n//         flexDirection: 'row',\n//         marginLeft: 'auto',\n//     },\n//     button: {\n//         margin: theme.spacing(1)\n//     }\n// }))\n\nconst ActionButton2 = ({ selected, index, setIsPerforming }) => {\n  // const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const { notifications, userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={() => setOpenUpdate(true)}>\n          <ListItemText primary=\"Edit\" />\n        </MenuItem>\n        <CustomDialogEdit\n          title={\"Update \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <UpdateView setOpen={setOpenUpdate} name={selected?.name} />\n          }\n          open={openUpdate}\n          handleClose={() => setOpenUpdate(false)}\n        />\n        <MenuItem onClick={() => setOpenDelete(true)}>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <CustomDialogDelete\n          title={\"Delete \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <DeleteView\n              setOpen={setOpenDelete}\n              name={selected?.name}\n              id={index}\n            />\n          }\n          open={openDelete}\n          handleClose={() => setOpenDelete(false)}\n        />\n      </Menu>\n    </>\n  );\n};\n\nconst UpdateView = (props) => {\n  let { setOpen, name } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submit = (e) => {\n    setIsLoading(true);\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={submit}>\n        <TextValidator\n          name=\"name\"\n          fullWidth\n          placeholder=\"Name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n\n        <br />\n        <Button variant=\"contained\" type=\"submit\" fullWidth>\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst DeleteView = (props) => {\n  let { name, id, setOpen } = props;\n\n  const handleDelete = () => {};\n\n  return (\n    <div>\n      <Typography gutterBottom>\n        Are you sure you want to delete {name} from table?\n      </Typography>\n      <br />\n      <Box\n        display=\"flex\"\n        flexDirection={\"row\"}\n        justifyContent=\"end\"\n        alignItems={\"center\"}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ textTransform: \"none\", mx: 2 }}\n          onClick={() => setOpen(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          sx={{ textTransform: \"none\" }}\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ActionButton2;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/lga.js",["522","523","524","525"],[],"import { Button, Container, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { lgaList } from \"../../../../../util/lga\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#00B0EF\",\n  },\n  header: {\n    height: \"84vh\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  rowEnd: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"end\",\n    alignItems: \"end\",\n  },\n}));\n\nconst LGAs = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  let fontSize, mt, deviceType;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n\n  if (xs) {\n    fontSize = 30;\n    mt = 200;\n    deviceType = \"phone\";\n  } else if (sm) {\n    fontSize = 42;\n    mt = 400;\n    deviceType = \"tablet\";\n  } else {\n    mt = 125;\n    fontSize = 48;\n  }\n\n  return (\n    <div>\n      <Container\n        sx={{\n          paddingX: 4,\n        }}\n      >\n        <Button\n          startIcon={<ArrowBackIosNew />}\n          onClick={() => history.goBack()}\n        >\n          Back\n        </Button>\n        <Grid container spacing={2}>\n          {lgaList?.map((elem, index) => (\n            <Grid\n              item\n              xs={6}\n              sm={6}\n              md={4}\n              key={index}\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"start\"\n            >\n              <Typography\n                variant=\"h6\"\n                fontWeight=\"700\"\n                paddingTop={2}\n              >{`${elem.alphabet}`}</Typography>\n              {elem?.item?.map((el, i) => (\n                <Link\n                  key={i}\n                  to={{\n                    pathname: \"/dashboard/about/lga/\" + el.name,\n                    state: { title: el.name },\n                  }}\n                  style={{ textDecoration: \"none\" }}\n                >{`${el.name}`}</Link>\n              ))}\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default LGAs;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/wdc.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/wdc/update_wdc.js",["526","527","528"],[],"import { Button, LinearProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport RichText from \"../../components/misc/richtext\";\nimport { useSnackbar } from \"notistack\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst UpdateWDC = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [title, setTitle] = React.useState(location?.state?.title);\n  const [body, setBody] = React.useState(location?.state?.body);\n  const [isError, setIsError] = React.useState(false);\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    // setIsStartedFilling(true);\n    const { value } = e.target;\n    setTitle(value);\n    // setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    if (!isSubmitted) {\n      window.addEventListener(\"beforeunload\", () => {\n        // console.log('added');\n      });\n    }\n    return () => {\n      window.removeEventListener(\"beforeunload\", () => console.log(\"\"));\n    };\n  }, [isStartedFilling]);\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    console.log(\"LO\", body);\n\n    const mRef = doc(db, \"contents\", \"wdc\");\n    try {\n      let resp = await updateDoc(mRef, {\n        title: title,\n        body: body,\n      });\n      setIsSubmitting(false);\n      //   console.log(\"SUCCESS MSGs\", resp);\n      enqueueSnackbar(`WDC updated successfully`, {\n        variant: \"success\",\n      });\n      history.goBack();\n    } catch (error) {\n      setIsSubmitting(false);\n      enqueueSnackbar(`${error?.message || \"Error updating record\"}`, {\n        variant: \"error\",\n      });\n      //   console.log(\"ERROR MSGs\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm\n        onSubmit={submitForm}\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <TextValidator\n          fullWidth\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          required\n          label=\"Title\"\n          value={title}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n        <br />\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        {isSubmitting && <LinearProgress />}\n        <br />\n\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={isSubmitting}\n        >\n          Submit\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateWDC;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/downloads.js",["529","530"],[],"import { Add } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport AddDownloadForm from \"../../../../forms/downloads/add_downloads\";\nimport UpdateDownloadForm from \"../../../../forms/downloads/update_downloads\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst DownloadsItemCard = (props) => {\n  const { item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"downloads/\" + item?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"downloads\", \"\" + item?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${item?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Downloads\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateDownloadForm\n            id={item?.id}\n            image={item?.res}\n            title={item?.title}\n            setOpen={setOpen}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Downloads\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/dashboard/resources/downloads/\" + item?.id,\n              state: {\n                title: item?.title,\n                image: item?.res,\n                date: item?.createdAt,\n                id: item?.id,\n              },\n            })\n          }\n        >\n          {/* <CardMedia image={item?.res} className={classes.cardMedia} /> */}\n          <Divider />\n          <br />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {item?.title?.length > 50\n                ? item?.title?.substring(0, 50) + \"...\"\n                : item?.title}\n            </Typography>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Downloads = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [downloadsList, setDownloadsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"downloads\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const downloads = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        downloads?.push(dat);\n      });\n      setDownloadsList(downloads);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Download\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddDownloadForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            DOWNLOADS\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Download\n        </Button>\n      </div>\n      <br />\n      <div>\n        {downloadsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {downloadsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <DownloadsItemCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {downloadsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Downloads;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/add_downloads.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/update_downloads.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/reports.js",["531","532","533","534","535"],[],"import { Add } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport AddDownloadForm from \"../../../../forms/downloads/add_downloads\";\nimport UpdateDownloadForm from \"../../../../forms/downloads/update_downloads\";\nimport UpdateReportForm from \"../../../../forms/reports/update_report\";\nimport AddReportForm from \"../../../../forms/reports/add_report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ItemCard = (props) => {\n  const { item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"reports/\" + item?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"reports\", \"\" + item?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${item?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Reports\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateReportForm\n            id={item?.id}\n            image={item?.res}\n            title={item?.title}\n            content={item?.body}\n            setOpen={setOpen}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Report\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n        //   onClick={() =>\n        //     history.push({\n        //       pathname: \"/dashboard/resources/reports/\" + item?.id,\n        //       state: {\n        //         title: item?.title,\n        //         image: item?.res,\n        //         date: item?.createdAt,\n        //         id: item?.id,\n        //       },\n        //     })\n        //   }\n        >\n          <CardMedia image={item?.image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {item?.title?.length > 75\n                ? item?.title?.substring(0, 75) + \"...\"\n                : item?.title}\n            </Typography>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Reports = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [reportsList, setReportsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"reports\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const reports = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        reports?.push(dat);\n      });\n      setReportsList(reports);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Report\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddReportForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            REPORTS\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Report\n        </Button>\n      </div>\n      <br />\n      <div>\n        {reportsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {reportsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <ItemCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {reportsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/add_report.js",["536"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\n// import { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 5px auto\",\n    width: 400,\n    height: 300,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddReportForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    createdAt: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [body, setBody] = React.useState(\"\");\n  const [isError, setIsError] = React.useState(false);\n  //   const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createReport = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"reports/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        // enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"reports\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            body: body,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              //   enqueueSnackbar(`News item added successfully`, {\n              //     variant: \"success\",\n              //   });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div style={{ height: \"96vh\" }}>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createReport}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Report banner is required\"]}\n              helperText=\"Report banner\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Report title is required\"]}\n        />\n\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddReportForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/update_report.js",["537"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  updateDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\n// import { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 5px auto\",\n    width: 400,\n    height: 300,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst UpdateReportForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, image, title, content } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    createdAt: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [body, setBody] = React.useState(content);\n  const [isError, setIsError] = React.useState(false);\n  const [previewImage, setPreviewImage] = React.useState(image);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"res\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        res: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"reports/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"reports\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              image: downloadURL,\n              body: body ?? content,\n              updatedAt: timeNow,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Report updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateReport = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"reports\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: body ?? content,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Report updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"reports/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          //   console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateReport}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"res\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.res}\n              name=\"res\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf, .doc\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Download resource is required\"]}\n              helperText=\"Download resource\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage ? previewImage : image}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Report title is required\"]}\n        />\n        <br />\n\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateReportForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_website_visits.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/appwidgetsummary.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/util/formatNumber.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/iconify.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/base_option_chart.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_current_visits.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/governor_section.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/add_team.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/update_team.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/lga/committee/add_committee.js",["538","539","540","541","542","543"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, setDoc, doc, updateDoc } from \"../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst NewCommitteeForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, list } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    designation: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [comms, setComms] = React.useState([]);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  React.useEffect(() => {\n    if (list) {\n      console.log(`SJHS: ${list}`);\n      setComms(list);\n\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const addRecord = async (e) => {\n    // const timeNow = new Date();\n    setIsLoading(true);\n    list = Object.assign([], list);\n    list?.push({\n      name: formValues.name,\n      designation: formValues.designation,\n    });\n    const mRef = doc(db, \"lgas\", \"\" + id);\n\n    // console.log(`GYS: ${list?.length}`);\n    // list?.forEach((element) => {\n    //   console.log(\"ELEM\", element);\n    // });\n\n    try {\n      await updateDoc(mRef, {\n        committees: [...list],\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Committee added successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n        variant: \"error\",\n      });\n    }\n\n    // setDoc(doc(db, \"lgas/\", `${id}`), {\n    //   committees: {\n    //     name: formValues.name,\n    //     designation: formValues.designation,\n    //   },\n    // })\n    //   .then((res) => {\n    //     setOpen(false);\n    //     setIsLoading(false);\n    //     enqueueSnackbar(`New committee record added successfully`, {\n    //       variant: \"success\",\n    //     });\n    //   })\n    //   .catch((error) => {\n    //     setIsLoading(false);\n    //   });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={addRecord}>\n        <TextValidator\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name is required\"]}\n        />\n        <br />\n\n        <TextValidator\n          label=\"Designation\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.designation}\n          onChange={handleChange}\n          name=\"designation\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Designation is required\"]}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default NewCommitteeForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/set_featured_service.js",["544"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/services.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/contact.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/users/index.js",["545","546"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/users/add_user.js",["547","548"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/users_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/enquiry.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/enquiries/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/enquiries_table.js",["549"],[],"import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport ActionButton from \"../../button/action_button\";\nimport TimeAgo from \"../countdown/timeago\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\nexport default function EnquiriesTable(props) {\n  let { list } = props;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>S/N0</StyledTableCell>\n            <StyledTableCell align=\"right\">FULLNAME</StyledTableCell>\n            <StyledTableCell align=\"left\">DATE</StyledTableCell>\n            <StyledTableCell align=\"left\">EMAIL ADDRESS</StyledTableCell>\n            <StyledTableCell align=\"left\">PHONE </StyledTableCell>\n            <StyledTableCell align=\"left\">SUBJECT</StyledTableCell>\n            <StyledTableCell align=\"left\">REQUEST</StyledTableCell>\n            <StyledTableCell align=\"left\">ACTION</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {list?.map((row, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {index + 1}\n              </StyledTableCell>\n              <StyledTableCell align=\"inherit\">{row?.fullname}</StyledTableCell>\n              <StyledTableCell align=\"inherit\">\n                {new Date(row?.createdAt.seconds * 1000).toLocaleDateString(\n                  \"en\"\n                )}\n              </StyledTableCell>\n              <StyledTableCell align=\"inherit\">{row?.email}</StyledTableCell>\n              <StyledTableCell align=\"left\">{row?.phone}</StyledTableCell>\n              <StyledTableCell align=\"inherit\">{row?.subject}</StyledTableCell>\n              <StyledTableCell align=\"inherit\">\n                {row?.request?.length > 36\n                  ? row?.request?.substring(0, 32) + \"...\"\n                  : row?.request}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                <ActionButton selected={row} index={index} />\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/countdown/timeago.js",[],[],{"ruleId":"550","severity":1,"message":"551","line":15,"column":10,"nodeType":"552","messageId":"553","endLine":15,"endColumn":13},{"ruleId":"550","severity":1,"message":"554","line":15,"column":15,"nodeType":"552","messageId":"553","endLine":15,"endColumn":24},{"ruleId":"550","severity":1,"message":"555","line":15,"column":26,"nodeType":"552","messageId":"553","endLine":15,"endColumn":30},{"ruleId":"550","severity":1,"message":"556","line":29,"column":10,"nodeType":"552","messageId":"553","endLine":29,"endColumn":14},{"ruleId":"557","severity":1,"message":"558","line":56,"column":6,"nodeType":"559","endLine":56,"endColumn":8,"suggestions":"560"},{"ruleId":"550","severity":1,"message":"561","line":4,"column":8,"nodeType":"552","messageId":"553","endLine":4,"endColumn":12},{"ruleId":"550","severity":1,"message":"562","line":5,"column":8,"nodeType":"552","messageId":"553","endLine":5,"endColumn":13},{"ruleId":"557","severity":1,"message":"558","line":262,"column":6,"nodeType":"559","endLine":262,"endColumn":8,"suggestions":"563"},{"ruleId":"550","severity":1,"message":"564","line":293,"column":9,"nodeType":"552","messageId":"553","endLine":293,"endColumn":18},{"ruleId":"550","severity":1,"message":"565","line":7,"column":8,"nodeType":"552","messageId":"553","endLine":7,"endColumn":14},{"ruleId":"550","severity":1,"message":"566","line":16,"column":8,"nodeType":"552","messageId":"553","endLine":16,"endColumn":28},{"ruleId":"550","severity":1,"message":"555","line":22,"column":10,"nodeType":"552","messageId":"553","endLine":22,"endColumn":14},{"ruleId":"550","severity":1,"message":"567","line":24,"column":10,"nodeType":"552","messageId":"553","endLine":24,"endColumn":21},{"ruleId":"550","severity":1,"message":"568","line":50,"column":9,"nodeType":"552","messageId":"553","endLine":50,"endColumn":17},{"ruleId":"550","severity":1,"message":"569","line":52,"column":11,"nodeType":"552","messageId":"553","endLine":52,"endColumn":26},{"ruleId":"550","severity":1,"message":"570","line":191,"column":5,"nodeType":"552","messageId":"553","endLine":191,"endColumn":15},{"ruleId":"550","severity":1,"message":"571","line":192,"column":5,"nodeType":"552","messageId":"553","endLine":192,"endColumn":12},{"ruleId":"550","severity":1,"message":"572","line":201,"column":9,"nodeType":"552","messageId":"553","endLine":201,"endColumn":16},{"ruleId":"573","severity":1,"message":"574","line":255,"column":17,"nodeType":"575","messageId":"576","endLine":255,"endColumn":24},{"ruleId":"573","severity":1,"message":"574","line":297,"column":17,"nodeType":"575","messageId":"576","endLine":297,"endColumn":24},{"ruleId":"550","severity":1,"message":"577","line":22,"column":3,"nodeType":"552","messageId":"553","endLine":22,"endColumn":19},{"ruleId":"550","severity":1,"message":"578","line":30,"column":3,"nodeType":"552","messageId":"553","endLine":30,"endColumn":11},{"ruleId":"550","severity":1,"message":"564","line":82,"column":9,"nodeType":"552","messageId":"553","endLine":82,"endColumn":18},{"ruleId":"550","severity":1,"message":"570","line":206,"column":5,"nodeType":"552","messageId":"553","endLine":206,"endColumn":15},{"ruleId":"550","severity":1,"message":"571","line":207,"column":5,"nodeType":"552","messageId":"553","endLine":207,"endColumn":12},{"ruleId":"550","severity":1,"message":"579","line":7,"column":3,"nodeType":"552","messageId":"553","endLine":7,"endColumn":17},{"ruleId":"550","severity":1,"message":"580","line":8,"column":3,"nodeType":"552","messageId":"553","endLine":8,"endColumn":28},{"ruleId":"550","severity":1,"message":"581","line":5,"column":3,"nodeType":"552","messageId":"553","endLine":5,"endColumn":12},{"ruleId":"550","severity":1,"message":"582","line":39,"column":11,"nodeType":"552","messageId":"553","endLine":39,"endColumn":16},{"ruleId":"550","severity":1,"message":"581","line":5,"column":3,"nodeType":"552","messageId":"553","endLine":5,"endColumn":12},{"ruleId":"550","severity":1,"message":"582","line":39,"column":11,"nodeType":"552","messageId":"553","endLine":39,"endColumn":16},{"ruleId":"550","severity":1,"message":"583","line":98,"column":9,"nodeType":"552","messageId":"553","endLine":98,"endColumn":16},{"ruleId":"550","severity":1,"message":"583","line":246,"column":9,"nodeType":"552","messageId":"553","endLine":246,"endColumn":16},{"ruleId":"550","severity":1,"message":"581","line":5,"column":3,"nodeType":"552","messageId":"553","endLine":5,"endColumn":12},{"ruleId":"550","severity":1,"message":"582","line":39,"column":11,"nodeType":"552","messageId":"553","endLine":39,"endColumn":16},{"ruleId":"550","severity":1,"message":"584","line":2,"column":22,"nodeType":"552","messageId":"553","endLine":2,"endColumn":30},{"ruleId":"550","severity":1,"message":"585","line":13,"column":9,"nodeType":"552","messageId":"553","endLine":13,"endColumn":12},{"ruleId":"550","severity":1,"message":"586","line":14,"column":9,"nodeType":"552","messageId":"553","endLine":14,"endColumn":13},{"ruleId":"550","severity":1,"message":"587","line":5,"column":3,"nodeType":"552","messageId":"553","endLine":5,"endColumn":18},{"ruleId":"550","severity":1,"message":"588","line":17,"column":3,"nodeType":"552","messageId":"553","endLine":17,"endColumn":8},{"ruleId":"550","severity":1,"message":"589","line":18,"column":3,"nodeType":"552","messageId":"553","endLine":18,"endColumn":13},{"ruleId":"550","severity":1,"message":"590","line":19,"column":3,"nodeType":"552","messageId":"553","endLine":19,"endColumn":13},{"ruleId":"550","severity":1,"message":"591","line":29,"column":10,"nodeType":"552","messageId":"553","endLine":29,"endColumn":18},{"ruleId":"550","severity":1,"message":"592","line":91,"column":10,"nodeType":"552","messageId":"553","endLine":91,"endColumn":26},{"ruleId":"550","severity":1,"message":"593","line":3,"column":10,"nodeType":"552","messageId":"553","endLine":3,"endColumn":21},{"ruleId":"550","severity":1,"message":"594","line":34,"column":11,"nodeType":"552","messageId":"553","endLine":34,"endColumn":16},{"ruleId":"550","severity":1,"message":"592","line":75,"column":10,"nodeType":"552","messageId":"553","endLine":75,"endColumn":26},{"ruleId":"550","severity":1,"message":"595","line":2,"column":10,"nodeType":"552","messageId":"553","endLine":2,"endColumn":19},{"ruleId":"550","severity":1,"message":"596","line":29,"column":8,"nodeType":"552","messageId":"553","endLine":29,"endColumn":14},{"ruleId":"550","severity":1,"message":"583","line":96,"column":9,"nodeType":"552","messageId":"553","endLine":96,"endColumn":16},{"ruleId":"550","severity":1,"message":"583","line":229,"column":9,"nodeType":"552","messageId":"553","endLine":229,"endColumn":16},{"ruleId":"550","severity":1,"message":"597","line":235,"column":11,"nodeType":"552","messageId":"553","endLine":235,"endColumn":22},{"ruleId":"550","severity":1,"message":"598","line":432,"column":13,"nodeType":"552","messageId":"553","endLine":432,"endColumn":15},{"ruleId":"550","severity":1,"message":"599","line":511,"column":9,"nodeType":"552","messageId":"553","endLine":511,"endColumn":16},{"ruleId":"550","severity":1,"message":"592","line":516,"column":10,"nodeType":"552","messageId":"553","endLine":516,"endColumn":26},{"ruleId":"550","severity":1,"message":"592","line":585,"column":10,"nodeType":"552","messageId":"553","endLine":585,"endColumn":26},{"ruleId":"550","severity":1,"message":"598","line":337,"column":18,"nodeType":"552","messageId":"553","endLine":337,"endColumn":20},{"ruleId":"550","severity":1,"message":"598","line":347,"column":13,"nodeType":"552","messageId":"553","endLine":347,"endColumn":15},{"ruleId":"550","severity":1,"message":"599","line":426,"column":9,"nodeType":"552","messageId":"553","endLine":426,"endColumn":16},{"ruleId":"550","severity":1,"message":"598","line":427,"column":18,"nodeType":"552","messageId":"553","endLine":427,"endColumn":20},{"ruleId":"550","severity":1,"message":"598","line":437,"column":13,"nodeType":"552","messageId":"553","endLine":437,"endColumn":15},{"ruleId":"550","severity":1,"message":"598","line":314,"column":18,"nodeType":"552","messageId":"553","endLine":314,"endColumn":20},{"ruleId":"550","severity":1,"message":"583","line":61,"column":9,"nodeType":"552","messageId":"553","endLine":61,"endColumn":16},{"ruleId":"550","severity":1,"message":"600","line":84,"column":17,"nodeType":"552","messageId":"553","endLine":84,"endColumn":21},{"ruleId":"550","severity":1,"message":"594","line":84,"column":23,"nodeType":"552","messageId":"553","endLine":84,"endColumn":28},{"ruleId":"550","severity":1,"message":"592","line":20,"column":10,"nodeType":"552","messageId":"553","endLine":20,"endColumn":26},{"ruleId":"550","severity":1,"message":"601","line":43,"column":10,"nodeType":"552","messageId":"553","endLine":43,"endColumn":23},{"ruleId":"557","severity":1,"message":"602","line":54,"column":6,"nodeType":"559","endLine":54,"endColumn":16,"suggestions":"603"},{"ruleId":"550","severity":1,"message":"604","line":266,"column":11,"nodeType":"552","messageId":"553","endLine":266,"endColumn":18},{"ruleId":"550","severity":1,"message":"569","line":44,"column":11,"nodeType":"552","messageId":"553","endLine":44,"endColumn":26},{"ruleId":"550","severity":1,"message":"605","line":106,"column":9,"nodeType":"552","messageId":"553","endLine":106,"endColumn":16},{"ruleId":"550","severity":1,"message":"569","line":114,"column":11,"nodeType":"552","messageId":"553","endLine":114,"endColumn":26},{"ruleId":"550","severity":1,"message":"606","line":170,"column":15,"nodeType":"552","messageId":"553","endLine":170,"endColumn":20},{"ruleId":"550","severity":1,"message":"598","line":170,"column":22,"nodeType":"552","messageId":"553","endLine":170,"endColumn":24},{"ruleId":"550","severity":1,"message":"569","line":44,"column":11,"nodeType":"552","messageId":"553","endLine":44,"endColumn":26},{"ruleId":"550","severity":1,"message":"605","line":102,"column":9,"nodeType":"552","messageId":"553","endLine":102,"endColumn":16},{"ruleId":"550","severity":1,"message":"569","line":109,"column":11,"nodeType":"552","messageId":"553","endLine":109,"endColumn":26},{"ruleId":"550","severity":1,"message":"598","line":155,"column":15,"nodeType":"552","messageId":"553","endLine":155,"endColumn":17},{"ruleId":"550","severity":1,"message":"599","line":36,"column":9,"nodeType":"552","messageId":"553","endLine":36,"endColumn":16},{"ruleId":"550","severity":1,"message":"607","line":51,"column":5,"nodeType":"552","messageId":"553","endLine":51,"endColumn":15},{"ruleId":"550","severity":1,"message":"608","line":53,"column":5,"nodeType":"552","messageId":"553","endLine":53,"endColumn":7},{"ruleId":"550","severity":1,"message":"609","line":54,"column":5,"nodeType":"552","messageId":"553","endLine":54,"endColumn":13},{"ruleId":"550","severity":1,"message":"610","line":17,"column":23,"nodeType":"552","messageId":"553","endLine":17,"endColumn":37},{"ruleId":"557","severity":1,"message":"611","line":39,"column":6,"nodeType":"559","endLine":39,"endColumn":24,"suggestions":"612"},{"ruleId":"550","severity":1,"message":"613","line":49,"column":11,"nodeType":"552","messageId":"553","endLine":49,"endColumn":15},{"ruleId":"550","severity":1,"message":"583","line":223,"column":9,"nodeType":"552","messageId":"553","endLine":223,"endColumn":16},{"ruleId":"550","severity":1,"message":"597","line":229,"column":11,"nodeType":"552","messageId":"553","endLine":229,"endColumn":22},{"ruleId":"550","severity":1,"message":"614","line":30,"column":8,"nodeType":"552","messageId":"553","endLine":30,"endColumn":23},{"ruleId":"550","severity":1,"message":"615","line":31,"column":8,"nodeType":"552","messageId":"553","endLine":31,"endColumn":26},{"ruleId":"550","severity":1,"message":"583","line":97,"column":9,"nodeType":"552","messageId":"553","endLine":97,"endColumn":16},{"ruleId":"550","severity":1,"message":"583","line":226,"column":9,"nodeType":"552","messageId":"553","endLine":226,"endColumn":16},{"ruleId":"550","severity":1,"message":"597","line":232,"column":11,"nodeType":"552","messageId":"553","endLine":232,"endColumn":22},{"ruleId":"550","severity":1,"message":"592","line":80,"column":10,"nodeType":"552","messageId":"553","endLine":80,"endColumn":26},{"ruleId":"550","severity":1,"message":"592","line":80,"column":10,"nodeType":"552","messageId":"553","endLine":80,"endColumn":26},{"ruleId":"550","severity":1,"message":"596","line":3,"column":8,"nodeType":"552","messageId":"553","endLine":3,"endColumn":14},{"ruleId":"550","severity":1,"message":"616","line":6,"column":14,"nodeType":"552","messageId":"553","endLine":6,"endColumn":17},{"ruleId":"550","severity":1,"message":"617","line":6,"column":19,"nodeType":"552","messageId":"553","endLine":6,"endColumn":25},{"ruleId":"550","severity":1,"message":"599","line":20,"column":9,"nodeType":"552","messageId":"553","endLine":20,"endColumn":16},{"ruleId":"550","severity":1,"message":"618","line":27,"column":10,"nodeType":"552","messageId":"553","endLine":27,"endColumn":15},{"ruleId":"557","severity":1,"message":"619","line":38,"column":6,"nodeType":"559","endLine":38,"endColumn":8,"suggestions":"620"},{"ruleId":"550","severity":1,"message":"592","line":81,"column":10,"nodeType":"552","messageId":"553","endLine":81,"endColumn":26},{"ruleId":"550","severity":1,"message":"621","line":80,"column":7,"nodeType":"552","messageId":"553","endLine":80,"endColumn":15},{"ruleId":"550","severity":1,"message":"583","line":228,"column":9,"nodeType":"552","messageId":"553","endLine":228,"endColumn":16},{"ruleId":"550","severity":1,"message":"555","line":11,"column":10,"nodeType":"552","messageId":"553","endLine":11,"endColumn":14},{"ruleId":"550","severity":1,"message":"616","line":11,"column":16,"nodeType":"552","messageId":"553","endLine":11,"endColumn":19},{"ruleId":"550","severity":1,"message":"622","line":11,"column":8,"nodeType":"552","messageId":"553","endLine":11,"endColumn":15},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'analytics' is defined but never used.","'auth' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["623"],"'user' is defined but never used.","'Login' is defined but never used.",["624"],"'container' is assigned a value but never used.","'Button' is defined but never used.","'PowerSettingsNewIcon' is defined but never used.","'setUserData' is defined but never used.","'dispatch' is assigned a value but never used.","'enqueueSnackbar' is assigned a value but never used.","'cornerSize' is assigned a value but never used.","'picSize' is assigned a value but never used.","'signOut' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'AddCircleOutline' is defined but never used.","'Settings' is defined but never used.","'setPersistence' is defined but never used.","'browserSessionPersistence' is defined but never used.","'CardMedia' is defined but never used.","'image' is assigned a value but never used.","'history' is assigned a value but never used.","'useTheme' is defined but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","'SelectValidator' is defined but never used.","'query' is defined but never used.","'collection' is defined but never used.","'onSnapshot' is defined but never used.","'MenuItem' is defined but never used.","'isStartedFilling' is assigned a value but never used.","'EditorState' is defined but never used.","'value' is assigned a value but never used.","'Container' is defined but never used.","'Avatar' is defined but never used.","'unsubscribe' is assigned a value but never used.","'id' is assigned a value but never used.","'classes' is assigned a value but never used.","'name' is assigned a value but never used.","'lgaFacilities' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'location.state?.title'. Either include it or remove the dependency array.",["625"],"'timeNow' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'index' is assigned a value but never used.","'deviceType' is assigned a value but never used.","'mt' is assigned a value but never used.","'fontSize' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'isSubmitted'. Either include it or remove the dependency array.",["626"],"'resp' is assigned a value but never used.","'AddDownloadForm' is defined but never used.","'UpdateDownloadForm' is defined but never used.","'ref' is defined but never used.","'setDoc' is defined but never used.","'comms' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.",["627"],"'UserCard' is assigned a value but never used.","'TimeAgo' is defined but never used.",{"desc":"628","fix":"629"},{"desc":"628","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},"Update the dependencies array to be: [dispatch]",{"range":"637","text":"638"},{"range":"639","text":"638"},"Update the dependencies array to be: [LGAsData, location.state?.title]",{"range":"640","text":"641"},"Update the dependencies array to be: [isStartedFilling, isSubmitted]",{"range":"642","text":"643"},"Update the dependencies array to be: [list]",{"range":"644","text":"645"},[1820,1822],"[dispatch]",[7893,7895],[1873,1883],"[LGAsData, location.state?.title]",[1418,1436],"[isStartedFilling, isSubmitted]",[1079,1081],"[list]"]