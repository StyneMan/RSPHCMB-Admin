[{"/Users/macintosh/Developer/RSPHCMB-Admin/src/index.js":"1","/Users/macintosh/Developer/RSPHCMB-Admin/src/reportWebVitals.js":"2","/Users/macintosh/Developer/RSPHCMB-Admin/src/App.js":"3","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/index.js":"4","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/firebase/index.js":"5","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/theme/index.js":"6","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/protected_routes.js":"7","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/user.js":"8","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/team.js":"9","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/perm_sec.js":"10","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/faqs.js":"11","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/wdc.js":"12","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/resources.js":"13","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/partners.js":"14","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/lga.js":"15","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/index.js":"16","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/password/index.js":"17","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/login/index.js":"18","/Users/macintosh/Developer/RSPHCMB-Admin/src/util/scroll/index.js":"19","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/login.js":"20","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer1.js":"21","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer2.js":"22","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/index.js":"23","/Users/macintosh/Developer/RSPHCMB-Admin/src/domain/service/index.js":"24","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/index.js":"25","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/index.js":"26","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/services/index.js":"27","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/index.js":"28","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/contact/index.js":"29","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dialogs/custom-dialog.js":"30","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/edit_service_form.js":"31","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/richtext/index.js":"32","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/new_service_form.js":"33","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/banner.js":"34","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/add_banner.js":"35","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/update_banner.js":"36","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/perm_sec.js":"37","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/homepage.js":"38","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/health_access.js":"39","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/building_culture.js":"40","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/covid19_section.js":"41","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/rsphcmb.js":"42","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/rsphcmb.js":"43","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_img.js":"44","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_content.js":"45","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/vision_section.js":"46","/Users/macintosh/Developer/RSPHCMB-Admin/src/util/lga/index.js":"47","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/lga_item.js":"48","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/comm_table.js":"49","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button.js":"50","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/facility_table.js":"51","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button2.js":"52","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/lga.js":"53","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/wdc.js":"54","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/wdc/update_wdc.js":"55","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/downloads.js":"56","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/add_downloads.js":"57","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/update_downloads.js":"58","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/reports.js":"59","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/add_report.js":"60","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/update_report.js":"61","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_website_visits.js":"62","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/appwidgetsummary.js":"63","/Users/macintosh/Developer/RSPHCMB-Admin/src/util/formatNumber.js":"64","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/iconify.js":"65","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/index.js":"66","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/base_option_chart.js":"67","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_current_visits.js":"68","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/governor_section.js":"69","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/add_team.js":"70","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/update_team.js":"71","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/lga/committee/add_committee.js":"72","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/set_featured_service.js":"73","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/services.js":"74","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/contact.js":"75","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/users/index.js":"76","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/users/add_user.js":"77","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/users_table.js":"78","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/enquiry.js":"79","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/enquiries/index.js":"80","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/enquiries_table.js":"81","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/countdown/timeago.js":"82","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/users_table_paginated.js":"83","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button3.js":"84","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/preview.js":"85","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/gallery.js":"86","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/research.js":"87","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/research_table.js":"88","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button4.js":"89","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/depts.js":"90","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/departments.js":"91","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_department.js":"92","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/department_info.js":"93","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_function.js":"94","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_department.js":"95","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/add_gallery.js":"96","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/gallery_info.js":"97","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/add_sub_album.js":"98","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_gallery.js":"99","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_sub_album.js":"100","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/lga/facilities/add_facility.js":"101","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/password.js":"102","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/account/index.js":"103","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/health_centres.js":"104","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/health_centres.js":"105","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_function.js":"106","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_dept_function.js":"107","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/richtext/editable.js":"108"},{"size":1954,"mtime":1651051612269,"results":"109","hashOfConfig":"110"},{"size":362,"mtime":1650026129007,"results":"111","hashOfConfig":"110"},{"size":4938,"mtime":1650882906474,"results":"112","hashOfConfig":"110"},{"size":1647,"mtime":1651974066540,"results":"113","hashOfConfig":"110"},{"size":1544,"mtime":1651649865938,"results":"114","hashOfConfig":"110"},{"size":635,"mtime":1651566779323,"results":"115","hashOfConfig":"110"},{"size":579,"mtime":1651648640781,"results":"116","hashOfConfig":"110"},{"size":558,"mtime":1650883727995,"results":"117","hashOfConfig":"110"},{"size":465,"mtime":1650109530490,"results":"118","hashOfConfig":"110"},{"size":476,"mtime":1650109530423,"results":"119","hashOfConfig":"110"},{"size":325,"mtime":1650878072655,"results":"120","hashOfConfig":"110"},{"size":432,"mtime":1650109530503,"results":"121","hashOfConfig":"110"},{"size":1005,"mtime":1650109530461,"results":"122","hashOfConfig":"110"},{"size":487,"mtime":1650109530409,"results":"123","hashOfConfig":"110"},{"size":440,"mtime":1650109530370,"results":"124","hashOfConfig":"110"},{"size":18678,"mtime":1652127726624,"results":"125","hashOfConfig":"110"},{"size":1807,"mtime":1651563885528,"results":"126","hashOfConfig":"110"},{"size":946,"mtime":1650112936546,"results":"127","hashOfConfig":"110"},{"size":246,"mtime":1650109539400,"results":"128","hashOfConfig":"110"},{"size":5438,"mtime":1651520956500,"results":"129","hashOfConfig":"110"},{"size":8820,"mtime":1651648716369,"results":"130","hashOfConfig":"110"},{"size":9265,"mtime":1651648641234,"results":"131","hashOfConfig":"110"},{"size":7172,"mtime":1650884052561,"results":"132","hashOfConfig":"110"},{"size":1068,"mtime":1651520271949,"results":"133","hashOfConfig":"110"},{"size":2757,"mtime":1651072472040,"results":"134","hashOfConfig":"110"},{"size":2857,"mtime":1651973110207,"results":"135","hashOfConfig":"110"},{"size":10182,"mtime":1652176186790,"results":"136","hashOfConfig":"110"},{"size":2726,"mtime":1650288446871,"results":"137","hashOfConfig":"110"},{"size":10675,"mtime":1650543871188,"results":"138","hashOfConfig":"110"},{"size":2213,"mtime":1650297799870,"results":"139","hashOfConfig":"110"},{"size":8585,"mtime":1652176186784,"results":"140","hashOfConfig":"110"},{"size":1929,"mtime":1652168031247,"results":"141","hashOfConfig":"110"},{"size":6857,"mtime":1650313699431,"results":"142","hashOfConfig":"110"},{"size":7209,"mtime":1651150312092,"results":"143","hashOfConfig":"110"},{"size":6361,"mtime":1650325745445,"results":"144","hashOfConfig":"110"},{"size":7478,"mtime":1651065393171,"results":"145","hashOfConfig":"110"},{"size":19324,"mtime":1652167871235,"results":"146","hashOfConfig":"110"},{"size":535,"mtime":1650387749627,"results":"147","hashOfConfig":"110"},{"size":13001,"mtime":1651018634838,"results":"148","hashOfConfig":"110"},{"size":12827,"mtime":1651989608812,"results":"149","hashOfConfig":"110"},{"size":527,"mtime":1650388733374,"results":"150","hashOfConfig":"110"},{"size":336,"mtime":1650389913195,"results":"151","hashOfConfig":"110"},{"size":11455,"mtime":1652092648017,"results":"152","hashOfConfig":"110"},{"size":5813,"mtime":1650394363800,"results":"153","hashOfConfig":"110"},{"size":2486,"mtime":1652167785301,"results":"154","hashOfConfig":"110"},{"size":7887,"mtime":1652167785301,"results":"155","hashOfConfig":"110"},{"size":1013,"mtime":1650408399939,"results":"156","hashOfConfig":"110"},{"size":12931,"mtime":1651764101572,"results":"157","hashOfConfig":"110"},{"size":2280,"mtime":1651763230089,"results":"158","hashOfConfig":"110"},{"size":6730,"mtime":1651765337268,"results":"159","hashOfConfig":"110"},{"size":2168,"mtime":1651764105498,"results":"160","hashOfConfig":"110"},{"size":5333,"mtime":1651764105363,"results":"161","hashOfConfig":"110"},{"size":2685,"mtime":1651231274109,"results":"162","hashOfConfig":"110"},{"size":2147,"mtime":1650417311602,"results":"163","hashOfConfig":"110"},{"size":3261,"mtime":1652168194269,"results":"164","hashOfConfig":"110"},{"size":7518,"mtime":1650426674724,"results":"165","hashOfConfig":"110"},{"size":5940,"mtime":1650418722737,"results":"166","hashOfConfig":"110"},{"size":7254,"mtime":1650421092702,"results":"167","hashOfConfig":"110"},{"size":7685,"mtime":1650421168691,"results":"168","hashOfConfig":"110"},{"size":6376,"mtime":1650421361472,"results":"169","hashOfConfig":"110"},{"size":7755,"mtime":1650421086155,"results":"170","hashOfConfig":"110"},{"size":1412,"mtime":1650423737974,"results":"171","hashOfConfig":"110"},{"size":1867,"mtime":1650424041479,"results":"172","hashOfConfig":"110"},{"size":599,"mtime":1650424041458,"results":"173","hashOfConfig":"110"},{"size":456,"mtime":1650424041476,"results":"174","hashOfConfig":"110"},{"size":66,"mtime":1650423001394,"results":"175","hashOfConfig":"110"},{"size":5451,"mtime":1650424655221,"results":"176","hashOfConfig":"110"},{"size":2417,"mtime":1650424968025,"results":"177","hashOfConfig":"110"},{"size":16215,"mtime":1650470789693,"results":"178","hashOfConfig":"110"},{"size":6635,"mtime":1652092450768,"results":"179","hashOfConfig":"110"},{"size":8047,"mtime":1652173493501,"results":"180","hashOfConfig":"110"},{"size":3786,"mtime":1651251714772,"results":"181","hashOfConfig":"110"},{"size":8040,"mtime":1652175019646,"results":"182","hashOfConfig":"110"},{"size":517,"mtime":1650541625708,"results":"183","hashOfConfig":"110"},{"size":356,"mtime":1650541209518,"results":"184","hashOfConfig":"110"},{"size":3961,"mtime":1650860591998,"results":"185","hashOfConfig":"110"},{"size":7092,"mtime":1650544708545,"results":"186","hashOfConfig":"110"},{"size":2613,"mtime":1650712267026,"results":"187","hashOfConfig":"110"},{"size":374,"mtime":1650552457355,"results":"188","hashOfConfig":"110"},{"size":558,"mtime":1650552452811,"results":"189","hashOfConfig":"110"},{"size":3137,"mtime":1650884221708,"results":"190","hashOfConfig":"110"},{"size":1317,"mtime":1650589322046,"results":"191","hashOfConfig":"110"},{"size":6425,"mtime":1650845688049,"results":"192","hashOfConfig":"110"},{"size":5388,"mtime":1650845462556,"results":"193","hashOfConfig":"110"},{"size":3816,"mtime":1650760174445,"results":"194","hashOfConfig":"110"},{"size":7100,"mtime":1651006140985,"results":"195","hashOfConfig":"110"},{"size":5678,"mtime":1651073527555,"results":"196","hashOfConfig":"110"},{"size":2239,"mtime":1651046656478,"results":"197","hashOfConfig":"110"},{"size":3951,"mtime":1650842934571,"results":"198","hashOfConfig":"110"},{"size":530,"mtime":1652127479197,"results":"199","hashOfConfig":"110"},{"size":7407,"mtime":1652129370169,"results":"200","hashOfConfig":"110"},{"size":7393,"mtime":1650888201366,"results":"201","hashOfConfig":"110"},{"size":6818,"mtime":1652170810700,"results":"202","hashOfConfig":"110"},{"size":2299,"mtime":1651013233007,"results":"203","hashOfConfig":"110"},{"size":6425,"mtime":1650892589634,"results":"204","hashOfConfig":"110"},{"size":5824,"mtime":1651004013380,"results":"205","hashOfConfig":"110"},{"size":6720,"mtime":1651015174144,"results":"206","hashOfConfig":"110"},{"size":6447,"mtime":1651003995118,"results":"207","hashOfConfig":"110"},{"size":6619,"mtime":1651006222167,"results":"208","hashOfConfig":"110"},{"size":7911,"mtime":1651015158104,"results":"209","hashOfConfig":"110"},{"size":2870,"mtime":1651231683470,"results":"210","hashOfConfig":"110"},{"size":3862,"mtime":1651564733761,"results":"211","hashOfConfig":"110"},{"size":23056,"mtime":1651649806443,"results":"212","hashOfConfig":"110"},{"size":4080,"mtime":1652168063336,"results":"213","hashOfConfig":"110"},{"size":372,"mtime":1651974172376,"results":"214","hashOfConfig":"110"},{"size":2711,"mtime":1652129370130,"results":"215","hashOfConfig":"110"},{"size":2338,"mtime":1652170661803,"results":"216","hashOfConfig":"110"},{"size":3482,"mtime":1652169416631,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},"4kajn",{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"225"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"225"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"274"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"225"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"274"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"225"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"384"},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"274"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"225"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"225"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"225"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"225"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"274"},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"274"},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"225"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495"},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"502"},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"511"},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"230"},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"274"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563"},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570"},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"274"},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"/Users/macintosh/Developer/RSPHCMB-Admin/src/index.js",["587","588","589"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Store from \"./data/redux\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from \"@mui/material/styles\";\nimport theme from \"./presentation/theme\";\nimport Button from \"@mui/material/Button\";\nimport { app, analytics, auth } from \"./data/firebase\";\n\nconst appTheme = createMuiTheme(theme);\n\nconst notistackRef = React.createRef();\nconst onClickDismiss = (key) => () => {\n  notistackRef.current.closeSnackbar(key);\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={appTheme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          ref={notistackRef}\n          action={(key) => (\n            <Button\n              onClick={onClickDismiss(key)}\n              style={{\n                textTransform: \"none\",\n                color: \"white\",\n                fontFamily: \"roboto\",\n              }}\n            >\n              Dismiss\n            </Button>\n          )}\n          maxSnack={2}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          autoHideDuration={4000}\n        >\n          <App />\n        </SnackbarProvider>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/reportWebVitals.js",[],[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/App.js",["590","591"],[],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./presentation/pages/login\";\nimport ForgotPassword from \"./presentation/pages/password\";\nimport ProtectedRoute from \"./presentation/components/protected_routes\";\n\nimport { useDispatch } from \"react-redux\";\nimport { query, db, collection, onSnapshot, doc, auth } from \"./data/firebase/\";\nimport { setUserID } from \"./data/redux/slice/user\";\n\nimport ScrollToTop from \"./util/scroll\";\n\nimport { setFAQs } from \"./data/redux/slice/faqs\";\nimport { setTeamData } from \"./data/redux/slice/team\";\nimport { setPermSecData } from \"./data/redux/slice/perm_sec\";\nimport { setWDCData } from \"./data/redux/slice/wdc\";\nimport { setPartnersData } from \"./data/redux/slice/partners\";\nimport {\n  setResearchData,\n  setReportsData,\n  setDownloadsData,\n  setGalleryData,\n} from \"./data/redux/slice/resources\";\nimport { setLGAsData } from \"./data/redux/slice/lga\";\nimport Dashboard from \"./presentation/pages/dashboard\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  // const [user, setUser] = React.useState(null);\n\n  React.useEffect(() => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n          // userData(doc.data());\n          //dispatch(setMyData(doc.data()));\n          dispatch(setUserID(user?.uid));\n          // console.log(\"ARGTE::\", doc.data());\n          // setUser(doc.data());\n        });\n      }\n\n      // auth().onAuthStateChanged((user) => {\n      //   if (user) {\n      //     onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n      //       dispatch(setUserData(doc.data()));\n      //     });\n      //   } else {\n      //     dispatch(setUserData(null));\n      //   }\n      // });\n    } catch (err) {\n      // console.log(err);\n    }\n    // return () => {};\n  }, []);\n\n  React.useEffect(() => {\n    // const q = query(collection(db, \"faqs\"));\n    // onSnapshot(q, (querySnapshot) => {\n    //   const faqs = [];\n    //   querySnapshot.forEach((doc) => {\n    //     faqs.push(doc.data());\n    //   });\n    //   dispatch(setFAQs(faqs));\n    // });\n\n    const teamQuery = query(collection(db, \"team-members\"));\n    onSnapshot(teamQuery, (querySnapshot) => {\n      const teams = [];\n      querySnapshot.forEach((doc) => {\n        teams.push(doc.data());\n      });\n      dispatch(setTeamData(teams));\n    });\n\n    const partnersQuery = query(collection(db, \"partners\"));\n    onSnapshot(partnersQuery, (querySnapshot) => {\n      const partners = [];\n      querySnapshot.forEach((doc) => {\n        partners.push(doc.data());\n      });\n      dispatch(setPartnersData(partners));\n    });\n\n    onSnapshot(doc(db, \"perm-sec\", \"info\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setPermSecData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"contents\", \"wdc\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setWDCData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"resources\", \"research\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setResearchData(doc.data()));\n    });\n\n    const reportsQuery = query(collection(db, \"reports\"));\n    onSnapshot(reportsQuery, (querySnapshot) => {\n      const reports = [];\n      querySnapshot.forEach((doc) => {\n        reports.push(doc.data());\n      });\n      dispatch(setReportsData(reports));\n    });\n\n    const downloadsQuery = query(collection(db, \"downloads\"));\n    onSnapshot(downloadsQuery, (querySnapshot) => {\n      const downloads = [];\n      querySnapshot.forEach((doc) => {\n        downloads.push(doc.data());\n      });\n      dispatch(setDownloadsData(downloads));\n    });\n\n    const galleryQuery = query(collection(db, \"gallery\"));\n    onSnapshot(galleryQuery, (querySnapshot) => {\n      const gallery = [];\n      querySnapshot.forEach((doc) => {\n        gallery.push(doc.data());\n      });\n      dispatch(setGalleryData(gallery));\n    });\n\n    const LGAsQuery = query(collection(db, \"lgas\"));\n    onSnapshot(LGAsQuery, (querySnapshot) => {\n      const lgas = [];\n      querySnapshot.forEach((doc) => {\n        lgas.push(doc.data());\n      });\n      dispatch(setLGAsData(lgas));\n    });\n  });\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <ScrollToTop />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Login />\n            </Route>\n\n            <Route path=\"/forgot-password\" exact>\n              <ForgotPassword />\n            </Route>\n\n            <ProtectedRoute path=\"/dashboard\">\n              <Dashboard />\n            </ProtectedRoute>\n\n            {/* <Route\n              path=\"//*\"\n              element={\n                <ProtectedRoute>\n                  < />\n                </ProtectedRoute>\n              }\n            /> */}\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/index.js",[],[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/firebase/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/theme/index.js",[],[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/protected_routes.js",["592","593"],[],"import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport user from \"../../data/redux/slice/user\";\nimport Login from \"../pages/login\";\n\nexport default function ProtectedRoute({ children, ...rest }) {\n  let { myData } = useSelector((state) => state.user);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (myData) {\n          return children;\n        } else {\n          return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/user.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/team.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/perm_sec.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/faqs.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/wdc.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/resources.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/partners.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/lga.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/index.js",["594"],[],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Hidden from \"@mui/material/Hidden\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Drawer1 from \"../../components/dashboard/drawer/Drawer1\";\nimport Drawer2 from \"../../components/dashboard/drawer/Drawer2\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Overview from \"./tabs\";\nimport Home from \"./tabs/home\";\nimport { Redirect } from \"react-router-dom\";\nimport About from \"./tabs/about\";\nimport Services from \"./tabs/services\";\nimport Resources from \"./tabs/resources\";\nimport Contact from \"./tabs/contact\";\nimport Banner from \"./tabs/home/banner\";\nimport { setPermSecData } from \"../../../data/redux/slice/perm_sec\";\nimport { setTeamData } from \"../../../data/redux/slice/team\";\nimport { setContact } from \"../../../data/redux/slice/contact\";\nimport { setUserData } from \"../../../data/redux/slice/user\";\nimport { setHealthCentre } from \"../../../data/redux/slice/health_centres\";\nimport {\n  setDepartmentsData,\n  setDeptFunctions,\n} from \"../../../data/redux/slice/depts\";\nimport {\n  setFeaturedService,\n  setSevicesData,\n} from \"../../../data/redux/slice/services\";\nimport {\n  setHealthAccessData,\n  setBuildingCultureData,\n} from \"../../../data/redux/slice/homepage\";\nimport { setData } from \"../../../data/redux/slice/rsphcmb\";\nimport { setWDCData } from \"../../../data/redux/slice/wdc\";\nimport { setLGAsData } from \"../../../data/redux/slice/lga\";\nimport { setEnquiriesData } from \"../../../data/redux/slice/enquiry\";\nimport {\n  onSnapshot,\n  db,\n  doc,\n  collection,\n  query,\n} from \"../../../data/firebase/\";\nimport { useDispatch } from \"react-redux\";\nimport PermSec from \"./tabs/home/perm_sec\";\nimport HealthAccess from \"./tabs/home/health_access\";\nimport BuildingCulture from \"./tabs/home/building_culture\";\nimport Covid19Section from \"./tabs/home/covid19_section\";\nimport RSPHCMB from \"./tabs/about/rsphcmb\";\nimport WhoWeAreContent from \"../../forms/about-rsphcmb/who_we_are_content\";\nimport WhoWeAreImage from \"../../forms/about-rsphcmb/who_we_are_img\";\nimport VisionSection from \"../../forms/about-rsphcmb/vision_section\";\nimport LGAs from \"./tabs/about/lga\";\nimport LGAItem from \"./tabs/about/components/lga_item\";\nimport WDC from \"./tabs/about/wdc\";\nimport UpdateWDC from \"../../forms/wdc/update_wdc\";\nimport Downloads from \"./tabs/resources/downloads\";\nimport Reports from \"./tabs/resources/reports\";\nimport GovernorSection from \"../../forms/about-rsphcmb/governor_section\";\nimport User from \"./tabs/users\";\nimport Enquiries from \"./tabs/enquiries\";\nimport Gallery from \"./tabs/resources/gallery\";\nimport Research from \"./tabs/resources/research\";\nimport Departments from \"./tabs/about/components/departments\";\nimport DepartmentInfo from \"./tabs/about/components/department_info\";\nimport GalleryInfo from \"./tabs/resources/gallery_info\";\nimport Account from \"./tabs/account\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport HealthCentres from \"./tabs/about/health_centres\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    background: \"white\",\n    color: \"black\",\n    boxShadow: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(3),\n    backgroundColor: \"#F8F9FA\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  contentPadding: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    fontSize: 15,\n    margin: \"auto\",\n  },\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  // const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [openSignoutBackDrop, setOpenSignoutBackDrop] = React.useState(false);\n\n  const { myData } = useSelector((state) => state.user);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleBackdrop = (value) => {\n    setOpenSignoutBackDrop(value);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  // React.useEffect(() => {\n  //   try {\n  //     const user = auth.currentUser;\n  //     if (user) {\n  //       onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n  //         // userData(doc.data());\n  //         // dispatch(setMyData(doc.data()));\n  //         // dispatch(setUserID(user?.uid));\n  //         // console.log(\"ARGTE::\", doc.data());\n  //         // setUser(doc.data());\n  //       });\n  //     }\n\n  //     // auth().onAuthStateChanged((user) => {\n  //     //   if (user) {\n  //     //     onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n  //     //       dispatch(setUserData(doc.data()));\n  //     //     });\n  //     //   } else {\n  //     //     dispatch(setUserData(null));\n  //     //   }\n  //     // });\n  //   } catch (err) {\n  //     // console.log(err);\n  //   }\n  //   // return () => {};\n  // }, []);\n\n  React.useEffect(() => {\n    onSnapshot(doc(db, \"perm-sec\", \"info\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setPermSecData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"home\", \"health-access\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setHealthAccessData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"home\", \"building-culture\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setBuildingCultureData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"about\", \"rsphcmb\"), (doc) => {\n      dispatch(setData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"about\", \"health-centres\"), (doc) => {\n      dispatch(setHealthCentre(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"contents\", \"wdc\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setWDCData(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"contact\", \"data\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setContact(doc.data()));\n    });\n\n    onSnapshot(doc(db, \"featured\", \"service\"), (doc) => {\n      // console.log(\"Current data: \", doc.data());\n      dispatch(setFeaturedService(doc.data()));\n    });\n\n    const servicesQuery = query(collection(db, \"services\"));\n    onSnapshot(servicesQuery, (querySnapshot) => {\n      const services = [];\n      querySnapshot.forEach((doc) => {\n        services.push(doc.data());\n      });\n      dispatch(setSevicesData(services));\n    });\n\n    const deptsQuery = query(collection(db, \"departments\"));\n    onSnapshot(deptsQuery, (querySnapshot) => {\n      const depts = [];\n      querySnapshot.forEach((doc) => {\n        depts.push(doc.data());\n      });\n      dispatch(setDepartmentsData(depts));\n    });\n\n    const q = query(collection(db, \"dept-functions\"));\n    onSnapshot(q, (querySnapshot) => {\n      const fn = [];\n      querySnapshot.forEach((doc) => {\n        fn.push(doc.data());\n      });\n      dispatch(setDeptFunctions(fn));\n    });\n\n    const teamQuery = query(collection(db, \"team-members\"));\n    onSnapshot(teamQuery, (querySnapshot) => {\n      const teams = [];\n      querySnapshot.forEach((doc) => {\n        teams.push(doc.data());\n      });\n      dispatch(setTeamData(teams));\n    });\n\n    // const q = query(collection(db, \"faqs\"));\n    // onSnapshot(q, (querySnapshot) => {\n    //   const faqs = [];\n    //   querySnapshot.forEach((doc) => {\n    //     faqs.push(doc.data());\n    //   });\n    //   dispatch(setFAQs(faqs));\n    // });\n\n    const LGAsQuery = query(collection(db, \"lgas\"));\n    onSnapshot(LGAsQuery, (querySnapshot) => {\n      const lgas = [];\n      querySnapshot.forEach((doc) => {\n        lgas.push(doc.data());\n      });\n      dispatch(setLGAsData(lgas));\n    });\n\n    const enquiriesQuery = query(collection(db, \"enquiries\"));\n    onSnapshot(enquiriesQuery, (querySnapshot) => {\n      const enquiries = [];\n      querySnapshot.forEach((doc) => {\n        enquiries.push(doc.data());\n      });\n      dispatch(setEnquiriesData(enquiries));\n    });\n\n    const usersQuery = query(collection(db, \"users\"));\n    onSnapshot(usersQuery, (querySnapshot) => {\n      const usrs = [];\n      querySnapshot.forEach((doc) => {\n        usrs.push(doc.data());\n      });\n      dispatch(setUserData(usrs));\n    });\n  }, [dispatch, mobileOpen]);\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    ></Menu>\n  );\n\n  const initials =\n    myData?.firstname?.slice(0, 1).toUpperCase() +\n    myData?.lastname?.slice(0, 1).toUpperCase();\n\n  let fullname = myData?.firstname + myData?.lastname;\n\n  // const container =\n  //   window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <Backdrop style={{ zIndex: 5000 }} open={openSignoutBackDrop}>\n        <CircularProgress\n          size={90}\n          thickness={3.0}\n          style={{ color: \"white\" }}\n        />\n      </Backdrop>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {1 > 2 && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{ margin: \"auto\", paddingRight: 3 }}\n                ></Typography>\n              </div>\n            )}\n            <Box\n              display=\"flex\"\n              flexDirection={\"row\"}\n              justifyContent=\"end\"\n              alignItems=\"center\"\n            >\n              <Typography pr={1}>\n                {fullname?.length > 16\n                  ? fullname?.slice(0, 12) + \"...\"\n                  : fullname}\n              </Typography>\n              <Avatar\n                src={myData?.image !== \"\" ? myData?.image : \"\"}\n                style={{\n                  width: 32,\n                  height: 32,\n                  borderRadius: 32 / 2,\n                  fontSize: 36,\n                }}\n              >\n                {myData?.image !== \"\" ? \"\" : initials}\n              </Avatar>\n            </Box>\n            {/* <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <SearchIcon style={{ color: theme.palette.secondary.main }} />\n            </IconButton> */}\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer1\n            setMobileOpen={setMobileOpen}\n            mobileOpen={mobileOpen}\n            handleBackdrop={handleBackdrop}\n            drawerVariant=\"temporary\"\n            anchor=\"left\"\n            handleDrawerToggle={handleDrawerToggle}\n            // window={window}\n          />\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer2 handleBackdrop={handleBackdrop} />\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* Main switch routing here */}\n        <div className={classes.contentPadding}>\n          <Switch>\n            <Redirect exact from=\"/dashboard\" to=\"/dashboard/overview\" />\n            <Route path=\"/dashboard/overview\" exact={true}>\n              <Overview />\n            </Route>\n\n            <Route path=\"/dashboard/home\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/dashboard/home/banner_slides\">\n              <Banner />\n            </Route>\n            <Route path=\"/dashboard/home/perm_sec\">\n              <PermSec />\n            </Route>\n            <Route path=\"/dashboard/home/health_access\">\n              <HealthAccess />\n            </Route>\n            <Route path=\"/dashboard/home/building_culture\">\n              <BuildingCulture />\n            </Route>\n            <Route path=\"/dashboard/home/covid19\">\n              <Covid19Section />\n            </Route>\n\n            <Route path=\"/dashboard/about\" exact>\n              <About />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb\" exact>\n              <RSPHCMB />\n            </Route>\n            <Route path=\"/dashboard/about/departments\" exact>\n              <Departments />\n            </Route>\n            <Route path=\"/dashboard/about/departments/:id\" exact>\n              <DepartmentInfo />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/who_we_are_content\" exact>\n              <WhoWeAreContent />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/who_we_are_image\" exact>\n              <WhoWeAreImage />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/vision_mission_edit\" exact>\n              <VisionSection />\n            </Route>\n            <Route path=\"/dashboard/about/rsphcmb/governor_edit\" exact>\n              <GovernorSection />\n            </Route>\n            <Route path=\"/dashboard/about/lga\" exact>\n              <LGAs />\n            </Route>\n            <Route path=\"/dashboard/about/lga/:id\" exact>\n              <LGAItem />\n            </Route>\n            <Route path=\"/dashboard/about/health_centres\" exact>\n              <HealthCentres />\n            </Route>\n            <Route path=\"/dashboard/about/wdc\" exact>\n              <WDC />\n            </Route>\n            <Route path=\"/dashboard/about/wdc/edit\" exact>\n              <UpdateWDC />\n            </Route>\n\n            <Route path=\"/dashboard/services\" exact>\n              <Services />\n            </Route>\n\n            <Route path=\"/dashboard/resources\" exact>\n              <Resources />\n            </Route>\n            <Route path=\"/dashboard/resources/reports\" exact>\n              <Reports />\n            </Route>\n            <Route path=\"/dashboard/resources/downloads\" exact>\n              <Downloads />\n            </Route>\n            <Route path=\"/dashboard/resources/gallery\" exact>\n              <Gallery />\n            </Route>\n            <Route path=\"/dashboard/resources/gallery/:id\" exact>\n              <GalleryInfo />\n            </Route>\n\n            <Route path=\"/dashboard/resources/research\" exact>\n              <Research />\n            </Route>\n\n            <Route path=\"/dashboard/contact\" exact>\n              <Contact />\n            </Route>\n\n            <Route path=\"/dashboard/users\" exact>\n              <User />\n            </Route>\n\n            <Route path=\"/dashboard/enquiries\" exact>\n              <Enquiries />\n            </Route>\n\n            <Route path=\"/dashboard/account\" exact>\n              <Account />\n            </Route>\n          </Switch>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nDashboard.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default Dashboard;\n\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIrMjM0ODA3MTIzOTkxNCIsImlhdCI6MTY1MDI3NzYzMywiZXhwIjoxNjUwMzY0MDMzfQ.lJZeZbi8UM-2g16fnXLRS15BGDerpCTFQJH47_ZYtlw\n",[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/password/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/login/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/util/scroll/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/login.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer1.js",["595","596","597","598"],[],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n// import Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n// import PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/logo_white.svg\";\n\n// import { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\n// import { auth } from \"../../../../data/firebase\";\n// import { useDispatch } from \"react-redux\";\n// import { setUserData, setMyData } from \"../../../../data/redux/slice/user\";\nimport { Logout, Settings } from \"@mui/icons-material\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer1 = (props) => {\n  const classes = useStyles();\n  const { mobileOpen, setMobileOpen } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // const dispatch = useDispatch();\n  const history = useHistory();\n  // const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Overview\",\n      icon: (\n        <DashBoardIcon\n          style={selectedIndex === 0 ? { color: \"#white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/\",\n    },\n    {\n      text: \"Home\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={selectedIndex === 1 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/home\",\n    },\n    {\n      text: \"About\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={selectedIndex === 2 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/about\",\n    },\n    {\n      text: \"Services\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/services\",\n    },\n    {\n      text: \"Resources\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/resources\",\n    },\n    {\n      text: \"Contact\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/contact\",\n    },\n    {\n      text: \"Others\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/dashboard/others\",\n    },\n    {\n      text: \"Users\",\n      icon: (\n        <PersonOutlineIcon\n          style={selectedIndex === 3 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/users\",\n    },\n    {\n      text: \"Enquiries\",\n      icon: (\n        <PersonOutlineIcon\n          style={selectedIndex === 3 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/enquiries\",\n    },\n  ];\n\n  const subDrawerItems = [\n    {\n      text: \"Account\",\n      icon: (\n        <Settings\n          style={selectedIndex === 9 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/settings\",\n    },\n    {\n      text: \"Log out\",\n      icon: (\n        <Logout\n          style={selectedIndex === 10 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n    setMobileOpen(!mobileOpen);\n  };\n\n  // const signOut = async () => {\n  //   props.handleBackdrop(true);\n  //   // try {\n  //   //   await auth.signOut();\n  //   //   dispatch(setUserData(null));\n  //   //   props.handleBackdrop(false);\n  //   //   enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n  //   //   history.replace({\n  //   //     pathname: \"/login\",\n  //   //   });\n  //   // } catch (err) {\n  //   //   enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n  //   //     variant: \"error\",\n  //   //   });\n  //   // }\n  //   // finally {\n  //   //   history.go(0);\n  //   // }\n  // };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n      <br />\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          padding: 16,\n        }}\n      >\n        <Divider />\n        <List className={classes.listRoot}>\n          {subDrawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant={props.drawerVariant}\n      container={container}\n      className={classes.drawer}\n      anchor={props.anchor}\n      open={mobileOpen}\n      onClose={props.handleDrawerToggle}\n      classes={{ paper: classes.drawerPaper }}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default Drawer1;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dashboard/drawer/Drawer2.js",["599","600","601"],[],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, useTheme, withStyles } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport logo from \"../../../../assets/images/logo_white.svg\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { auth } from \"../../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setMyData } from \"../../../../data/redux/slice/user\";\nimport {\n  ContactMail,\n  ContactSupportOutlined,\n  Help,\n  Home,\n  Interests,\n  Lan,\n  Logout,\n  Person,\n} from \"@mui/icons-material\";\n\n// import pattern from \"../../../../assets/images/pattern.png\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#18113C\",\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"86%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst ListItema = withStyles({\n  root: {\n    \"&$selected\": {\n      backgroundColor: \"#FFFFFF\",\n      color: \"black\",\n    },\n    \"&$selected:hover\": {\n      backgroundColor: \"#221B44\",\n      color: \"black\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#00B0EF\",\n      color: \"white\",\n    },\n  },\n  selected: {},\n})(ListItem);\n\nconst Drawer2 = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [selectedIndex2, setSelectedIndex2] = React.useState(0);\n  // const { userStatus, userData } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Overview\",\n      icon: (\n        <DashBoardIcon\n          style={selectedIndex === 0 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/\",\n    },\n    {\n      text: \"Home\",\n      icon: (\n        <Home\n          style={selectedIndex === 1 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/home\",\n    },\n    {\n      text: \"About\",\n      icon: (\n        <Help\n          style={selectedIndex === 2 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/about\",\n    },\n    {\n      text: \"Services\",\n      icon: (\n        <Lan\n          style={selectedIndex === 3 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/services\",\n    },\n    {\n      text: \"Resources\",\n      icon: (\n        <Interests\n          style={selectedIndex === 4 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/resources\",\n    },\n    {\n      text: \"Contact\",\n      icon: (\n        <ContactMail\n          style={selectedIndex === 5 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/contact\",\n    },\n    // {\n    //   text: \"Others\",\n    //   icon: (\n    //     <AddCircleOutline\n    //       style={selectedIndex === 6 ? { color: \"black\" } : { color: \"white\" }}\n    //     />\n    //   ),\n    //   to: \"/dashboard/others\",\n    // },\n    {\n      text: \"Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={selectedIndex === 6 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/users\",\n    },\n    {\n      text: \"Enquiries\",\n      icon: (\n        <ContactSupportOutlined\n          style={selectedIndex === 7 ? { color: \"black\" } : { color: \"white\" }}\n        />\n      ),\n      to: \"/dashboard/enquiries\",\n    },\n  ];\n\n  const subDrawerItems = [\n    {\n      text: \"Account\",\n      icon: (\n        <Person\n          style={selectedIndex2 === 0 ? { color: \"white\" } : { color: \"black\" }}\n        />\n      ),\n      to: \"/dashboard/account\",\n    },\n    {\n      text: \"Log out\",\n      icon: (\n        <Logout\n          style={selectedIndex2 === 1 ? { color: \"white\" } : { color: \"red\" }}\n        />\n      ),\n      to: \"/dashboard/\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n  };\n\n  const handleListItemClick2 = (to, index) => {\n    history.push(to);\n    setSelectedIndex2(index);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      await auth.signOut();\n      dispatch(setMyData(null));\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/\",\n      });\n    } catch (err) {\n      enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n        variant: \"error\",\n      });\n    } finally {\n      history.go(0);\n    }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        // backgroundImage: \"url(\" + pattern + \")\",\n        // backgroundRepeat: \"no-repeat\",\n        // backgroundSize: \"cover\",\n        // backgroundPosition: \"center\",\n        zIndex: 100,\n      }}\n    >\n      <br />\n      <Divider />\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <img\n          src={logo}\n          style={{ width: \"75%\", margin: \"auto\" }}\n          alt=\"site logo\"\n        />\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (4 > 2) {\n              return (\n                <ListItema\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItema>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          width: \"100%\",\n          padding: 16,\n          zIndex: 1000,\n        }}\n      >\n        <List className={classes.listRoot}>\n          {subDrawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (2 > 1) {\n              return (\n                <ListItem\n                  sx={{ width: \"96%\" }}\n                  button\n                  key={index}\n                  selected={selectedIndex2 === index}\n                  onClick={() =>\n                    index === 0 ? handleListItemClick2(to, index) : signOut()\n                  }\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText\n                    primary={text}\n                    color=\"white\"\n                    sx={{ color: index === 0 ? \"white\" : \"red\" }}\n                  />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant=\"permanent\"\n      open\n      classes={{ paper: classes.drawerPaper }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default Drawer2;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/domain/service/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/index.js",["602","603"],[],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"#18113C\">\n          {title}\n        </Typography>\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"#18113C\">\n              {excerpt}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst About = () => {\n  let list = [\n    {\n      title: \"About RSPHCMB\",\n      desc: \"Manage RSPHCMB\",\n      to: \"/dashboard/about/rsphcmb\",\n    },\n    {\n      title: \"Board of Trustees\",\n      desc: \"Manage Board of Trustees\",\n      to: \"/dashboard/about/bot\",\n    },\n    {\n      title: \"Departments\",\n      desc: \"Manage Departments\",\n      to: \"/dashboard/about/departments\",\n    },\n    {\n      title: \"Local Government Areas\",\n      desc: \"Manage Rivers State LGAs data\",\n      to: \"/dashboard/about/lga\",\n    },\n    {\n      title: \"Health Centres\",\n      desc: \"Manage Health Centres data\",\n      to: \"/dashboard/about/health_centres\",\n    },\n    {\n      title: \"WDC\",\n      desc: \"Manage WDC data\",\n      to: \"/dashboard/about/wdc\",\n    },\n  ];\n\n  return (\n    <div>\n      <Container>\n        <Box display={\"flex\"} flexDirection=\"column\">\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {list?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CardItem\n                  image={list[index].image}\n                  title={list[index].title}\n                  excerpt={list[index].desc}\n                  to={list[index].to}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default About;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/services/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/index.js",["604","605"],[],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"#18113C\">\n          {title}\n        </Typography>\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"#18113C\">\n              {excerpt}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Resources = () => {\n  let list = [\n    {\n      title: \"Publications\",\n      desc: \"Manage Publications\",\n      to: \"/dashboard/resources/publications\",\n    },\n    {\n      title: \"Downloads\",\n      desc: \"Manage Downloads\",\n      to: \"/dashboard/resources/downloads\",\n    },\n    {\n      title: \"Reports\",\n      desc: \"Manage Reports\",\n      to: \"/dashboard/resources/reports\",\n    },\n    {\n      title: \"Gallery\",\n      desc: \"Manage Gallery\",\n      to: \"/dashboard/resources/gallery\",\n    },\n    {\n      title: \"Research\",\n      desc: \"Manage Research\",\n      to: \"/dashboard/resources/research\",\n    },\n  ];\n\n  return (\n    <div>\n      <Container>\n        <Box display={\"flex\"} flexDirection=\"column\">\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {list?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CardItem\n                  image={list[index].image}\n                  title={list[index].title}\n                  excerpt={list[index].desc}\n                  to={list[index].to}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Resources;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/contact/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/dialogs/custom-dialog.js",["606","607","608"],[],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200,\n    //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog = (props) => {\n  const { title, open, handleClose, bodyComponent } = props;\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{ fontFamily: \"roboto\", fontWeight: \"600\" }}\n        >\n          {title}\n        </Typography>\n\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <br />\n      {bodyComponent}\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        disablePortal={true}\n        disableEscapeKeyDown={true}\n        // disableBackdropClick={false}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomDialog;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/edit_service_form.js",["609"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\n// import { MenuItem } from \"@mui/material\";\n// import RichText from \"../../components/misc/richtext\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, body, summary, type } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    authorPhoto: \"\",\n    summary: summary,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const [serviceBody, setServiceBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(\n      storage,\n      type === \"featured\"\n        ? \"services-featured/\"\n        : \"services/\" + timeNow.getTime()\n    );\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(\n            db,\n            type === \"featured\" ? \"featured\" : \"services\",\n            type === \"featured\" ? \"service\" : \"\" + id\n          );\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              body: serviceBody,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Service updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateService = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      body: serviceBody,\n      summary: formValues.summary ? formValues.summary : summary,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(\n          db,\n          type === \"featured\" ? \"featured\" : \"services\",\n          type === \"featured\" ? \"service\" : \"\" + id\n        );\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: serviceBody,\n          summary: formValues.summary,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Service updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      // const fileRef = ref(\n      //   storage,\n      //   type === \"featured\" ? \"services-featured/\" : \"services/\" + id\n      // );\n\n      uploadNewImage();\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateService}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Service title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service title is required\"]}\n        />\n\n        <EditableRichText\n          value={serviceBody}\n          setValue={setServiceBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={2}\n          label=\"Service summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service summary is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditServiceForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/richtext/index.js",["610","611"],[],"import React from \"react\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport { EditorState, convertToRaw } from \"draft-js\";\n// import { createMuiTheme } from \"@mui/core/styles\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst defaultTheme = createTheme();\n\nObject.assign(defaultTheme, {\n  overrides: {\n    MUIRichTextEditor: {\n      root: {\n        marginBottom: 10,\n        width: \"100%\",\n      },\n      container: {\n        height: \"100%\",\n        border: \"1px solid rgba(0, 0, 0, 0.23)\",\n        borderRadius: 6,\n        padding: 15,\n        overflow: \"auto\",\n      },\n      editorContainer: {\n        position: \"relative !important\",\n        marginBottom: 20,\n        minHeight: 100,\n        maxHeight: 156,\n      },\n    },\n  },\n});\n\nconst RichText = (props) => {\n  const { value, setValue, setError, error, setIsStartedFilling } = props;\n\n  const handleChange = (state) => {\n    const data = JSON.stringify(convertToRaw(state.getCurrentContent()));\n\n    if (error) {\n      setError(false);\n    }\n\n    if (state.getCurrentContent().hasText()) {\n      setIsStartedFilling(true);\n      setValue(data);\n    }\n  };\n\n  const save = (data) => {\n    // save this data somewhere\n    // console.log(data);\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <MUIRichTextEditor\n        controls={[\n          \"title\",\n          \"bold\",\n          \"italic\",\n          \"underline\",\n          \"strikethrough\",\n          \"highlight\",\n          \"undo\",\n          \"redo\",\n          \"link\",\n          \"media\",\n          \"numberList\",\n          \"bulletList\",\n          \"quote\",\n          \"code\",\n          \"clear\",\n          \"save\",\n        ]}\n        // defaultValue={value}\n\n        error={error}\n        label=\"Type here...\"\n        toolbarButtonSize=\"small\"\n        inlineToolbar={true}\n        onSave={save}\n        onChange={handleChange}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default RichText;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/new_service_form.js",["612"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst NewServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    summary: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const [serviceBody, setServiceBody] = React.useState(null);\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createService = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"services/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setDoc(doc(db, \"services\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            summary: formValues.summary,\n            body: serviceBody,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New service added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createService}>\n        <TextValidator\n          id=\"title\"\n          label=\"Service name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name of service is required\"]}\n        />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={6}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Upload featured image\"\n            />\n          </Grid>\n          <Grid item sm={6} md={6}>\n            <div>\n              {previewPassport && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewPassport}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={3}\n          label=\"Service summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service summary is required\"]}\n        />\n        <br />\n\n        <RichText\n          value={serviceBody}\n          setValue={setServiceBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default NewServiceForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/banner.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/add_banner.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/home/banner/update_banner.js",["613"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst UpdateBannerForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, description } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    description: description,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"home-banner/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"home-banner\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              description: formValues.description,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Banner updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateBanner = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      description: formValues.description\n        ? formValues.description\n        : description,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"home-banner\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          description: formValues.description,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Banner updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      uploadNewImage();\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateBanner}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Service title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Service title is required\"]}\n        />\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"description\"\n          multiLine={true}\n          rows={2}\n          rowsMax={3}\n          label=\"Banner description\"\n          placeholder=\"Type description here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.description}\n          onChange={handleChange}\n          name=\"description\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Banner description is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateBannerForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/perm_sec.js",["614","615","616","617","618"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/homepage.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/health_access.js",["619"],[],"import { ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport {\n  Avatar,\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  updateDoc,\n  db,\n  doc,\n  ref,\n  uploadBytesResumable,\n  storage,\n  deleteObject,\n  getDownloadURL,\n} from \"../../../../../data/firebase\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog3 from \"../../../../components/dialogs/custom-dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst HealthAccess = () => {\n  const { healthAccess } = useSelector((state) => state.homepage);\n  const history = useHistory();\n\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n\n  return (\n    <div>\n      <CustomDialog\n        title=\"Update Picture\"\n        open={open}\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateImage\n            setOpen={setOpen}\n            image={healthAccess?.image}\n            id={\"info\"}\n          />\n        }\n      />\n      <CustomDialog2\n        title=\"Update Title\"\n        open={open2}\n        handleClose={() => setOpen2(false)}\n        bodyComponent={\n          <UpdateTitle\n            setOpen={setOpen2}\n            title={healthAccess?.title}\n            id={\"info\"}\n          />\n        }\n      />\n      <CustomDialog3\n        title=\"Update Description\"\n        open={open3}\n        handleClose={() => setOpen3(false)}\n        bodyComponent={\n          <UpdateDescription\n            setOpen={setOpen3}\n            description={healthAccess?.description}\n            id={\"info\"}\n          />\n        }\n      />\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={healthAccess?.image} alt=\"\" width=\"100%\" />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() => setOpen(true)}\n              >\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">TITLE</Typography>\n                <IconButton onClick={() => setOpen2(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{healthAccess?.title}</Typography>\n              <br />\n              <br />\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">DESCRIPTION</Typography>\n                <IconButton onClick={() => setOpen3(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{healthAccess?.description}</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst UpdateImage = (props) => {\n  const classes = useStyles();\n  let { image, setOpen, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    // const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"home/\" + id);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"home\", \"health-access\");\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    uploadNewImage();\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateTitle = (props) => {\n  const classes = useStyles();\n  let { setOpen, title } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateTitle = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"health-access\");\n      await updateDoc(mRef, {\n        title: formValues.title,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Title updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateTitle}>\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateDescription = (props) => {\n  let { setOpen, description } = props;\n  const [formValues, setFormValues] = React.useState({\n    description: description,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const update = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      description: formValues.description\n        ? formValues.description\n        : description,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"health-access\");\n      await updateDoc(mRef, {\n        description: formValues.description,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Description updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={update}>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Description\"\n          multiline\n          name=\"description\"\n          rows={4}\n          fullWidth\n          required\n          onChange={handleChange}\n          value={formValues.description}\n          sx={{ marginY: 2 }}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default HealthAccess;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/building_culture.js",["620"],[],"import { ArrowBackIosNew, Edit } from \"@mui/icons-material\";\nimport {\n  Avatar,\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog3 from \"../../../../components/dialogs/custom-dialog\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  updateDoc,\n  uploadBytesResumable,\n  db,\n  ref,\n  doc,\n  storage,\n  getDownloadURL,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport RichText from \"../../../../components/misc/richtext\";\nimport MUIRichTextEditor from \"mui-rte\";\n\nconst BuildingCulture = () => {\n  const { buildingCulture } = useSelector((state) => state.homepage);\n  const history = useHistory();\n\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n\n  return (\n    <div>\n      <CustomDialog\n        title=\"Update Featured Image\"\n        open={open}\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateImage setOpen={setOpen} image={buildingCulture?.image} />\n        }\n      />\n      <CustomDialog2\n        title=\"Update Section Title Text\"\n        open={open2}\n        handleClose={() => setOpen2(false)}\n        bodyComponent={\n          <UpdateTitle setOpen={setOpen2} title={buildingCulture?.title} />\n        }\n      />\n      <CustomDialog3\n        title=\"Update Section Description Text\"\n        open={open3}\n        handleClose={() => setOpen3(false)}\n        bodyComponent={\n          <UpdateSummary\n            setOpen={setOpen3}\n            summary={buildingCulture?.summary}\n          />\n        }\n      />\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={buildingCulture?.image} alt=\"\" />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() => setOpen(true)}\n              >\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">TITLE</Typography>\n                <IconButton onClick={() => setOpen2(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <Typography>{buildingCulture?.title}</Typography>\n              <br />\n              <br />\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"h6\">DESCRIPTION</Typography>\n                <IconButton onClick={() => setOpen3(true)}>\n                  <Edit />\n                </IconButton>\n              </Box>\n              <Divider />\n              <MUIRichTextEditor\n                readOnly\n                inlineToolbar={false}\n                defaultValue={buildingCulture?.summary}\n                toolbar={false}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst UpdateImage = (props) => {\n  const classes = useStyles();\n  let { image, setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"building-culture/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"home\", \"building-culture\");\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    setIsLoading(true);\n\n    //Change on the featured image and all texts\n    // const fileRef = ref(storage, \"building-culture/info\");\n    uploadNewImage();\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateTitle = (props) => {\n  const classes = useStyles();\n  let { setOpen, title } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateName = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"building-culture\");\n      await updateDoc(mRef, {\n        title: formValues.title,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Title updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateName}>\n        <TextValidator\n          className={classes.mb}\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateSummary = (props) => {\n  // const classes = useStyles();\n  let { setOpen, summary } = props;\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const [body, setBody] = React.useState(summary);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const updateSummary = async (e) => {\n    setIsLoading(true);\n\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"home\", \"building-culture\");\n      await updateDoc(mRef, {\n        summary: body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Summary updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateSummary}>\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default BuildingCulture;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/home/covid19_section.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/rsphcmb.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/rsphcmb.js",["621"],[],"import { Add, ArrowBackIosNew, Delete, Edit } from \"@mui/icons-material\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  storage,\n  ref,\n  db,\n  deleteObject,\n  deleteDoc,\n  doc,\n} from \"../../../../../data/firebase\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport AddTeamMember from \"../../../../forms/about-rsphcmb/add_team\";\nimport UpdateTeamForm from \"../../../../forms/about-rsphcmb/update_team\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 320,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 175,\n    width: \"100%\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, name, position, id, biography } = props;\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"team-members/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"team-members\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          // console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Team Member\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateTeamForm\n            setOpen={setOpen}\n            image={image}\n            name={name}\n            id={id}\n            biography={biography}\n            position={position}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Team Member\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={4} className={classes.root}>\n        <Box\n          display=\"flex\"\n          flexDirection={\"row\"}\n          justifyContent=\"end\"\n          alignItems={\"center\"}\n        >\n          <IconButton onClick={() => setOpenDelete(true)}>\n            <Delete color=\"error\" />\n          </IconButton>\n\n          <IconButton onClick={() => setOpen(true)}>\n            <Edit />\n          </IconButton>\n        </Box>\n        <CardMedia image={image} className={classes.cardMedia} />\n        <CardContent>\n          <Typography variant=\"h6\" color=\"#18113C\">\n            {name}\n          </Typography>\n          <div className={classes.row}>\n            <div className={classes.column}>\n              <Typography variant=\"body1\" color=\"#18113C\">\n                {position}\n              </Typography>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nconst RSPHCMB = () => {\n  const { data } = useSelector((state) => state.rsphcmb);\n  const { teamMembersData } = useSelector((state) => state.teams);\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Team Member\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddTeamMember setOpen={setOpen} />}\n      />\n      <Container>\n        <Button\n          onClick={() => history.goBack()}\n          startIcon={<ArrowBackIosNew />}\n        >\n          Back\n        </Button>\n        <br />\n        <br />\n        <Typography variant=\"h6\" gutterBottom>\n          WHO WE ARE\n        </Typography>\n        <Divider />\n        <br />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={5}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={data?.image} alt=\"\" />\n              <Button\n                sx={{ mt: 1, textTransform: \"none\" }}\n                variant=\"contained\"\n                onClick={() =>\n                  history.push({\n                    pathname: \"/dashboard/about/rsphcmb/who_we_are_image\",\n                    state: {\n                      image: data?.image,\n                    },\n                  })\n                }\n              >\n                Update Image\n              </Button>\n              <br />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={7}>\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography gutterBottom>CONTENT</Typography>\n                <IconButton\n                  onClick={() =>\n                    history.push({\n                      pathname: \"/dashboard/about/rsphcmb/who_we_are_content\",\n                      state: {\n                        content: data?.who_we_are,\n                      },\n                    })\n                  }\n                >\n                  <Edit />\n                </IconButton>\n              </Box>\n              <MUIRichTextEditor\n                readOnly\n                inlineToolbar={false}\n                defaultValue={data?.who_we_are}\n                toolbar={false}\n              />\n              <br />\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Divider />\n        <br />\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            VISION & MISSION STATEMENT\n          </Typography>\n          <IconButton\n            onClick={() =>\n              history.push({\n                pathname: \"/dashboard/about/rsphcmb/vision_mission_edit\",\n                state: {\n                  vision: data?.vision,\n                  mission: data?.mission,\n                  image: data?.visionImage,\n                },\n              })\n            }\n          >\n            <Edit />\n          </IconButton>\n        </Box>\n        <Divider />\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={7}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography gutterBottom>VISION STATEMENT</Typography>\n              <Typography gutterBottom>{data?.vision}</Typography>\n              <br />\n              <Typography gutterBottom>MISSION STATEMENT</Typography>\n              <MUIRichTextEditor\n                readOnly\n                inlineToolbar={false}\n                defaultValue={data?.mission}\n                toolbar={false}\n              />\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={5}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <img src={data?.visionImage} alt=\"\" width={\"90%\"} />\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            GOVERNOR & DEPUTY\n          </Typography>\n          <IconButton\n            onClick={() =>\n              history.push({\n                pathname: \"/dashboard/about/rsphcmb/governor_edit\",\n                state: {\n                  governorName: data?.governorName,\n                  governorImage: data?.governorImage,\n                  deputyGovName: data?.deputyGovName,\n                  deputyGovImage: data?.deputyGovImage,\n                },\n              })\n            }\n          >\n            <Edit />\n          </IconButton>\n        </Box>\n\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={6}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography fontWeight={\"600\"} gutterBottom>\n                GOVERNOR\n              </Typography>\n              <img src={data?.governorImage} alt=\"\" width={\"75%\"} />\n              <br />\n              <Typography gutterBottom>{data?.governorName}</Typography>\n              <Typography gutterBottom>Governor, Rivers State</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item sm={6} md={6}>\n            <br />\n            <Box display=\"flex\" flexDirection=\"column\">\n              <Typography fontWeight={\"600\"} gutterBottom>\n                DEPUTY GOVERNOR\n              </Typography>\n              <img src={data?.deputyGovImage} alt=\"\" width={\"75%\"} />\n              <br />\n              <Typography gutterBottom>{data?.deputyGovName}</Typography>\n              <Typography gutterBottom>\n                Deputy Governor, Rivers State\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">TEAM MEMBERS</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            sx={{ textTransform: \"none\" }}\n            onClick={() => setOpen(true)}\n          >\n            Add Member\n          </Button>\n        </Box>\n        <br />\n        <Grid\n          container\n          spacing={{ xs: 2, md: 2 }}\n          columns={{ xs: 4, sm: 8, md: 12 }}\n        >\n          {teamMembersData?.map((_, index) => (\n            <Grid item xs={2} sm={4} md={4} key={index}>\n              <CardItem\n                image={teamMembersData[index]?.image}\n                name={teamMembersData[index]?.name}\n                id={teamMembersData[index]?.id}\n                position={teamMembersData[index]?.position}\n                biography={teamMembersData[index]?.biography}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default RSPHCMB;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_img.js",["622","623"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst WhoWeAreImage = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [formValues, setFormValues] = React.useState({\n    image: \"\",\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"rsphcmb_who_we_are/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"about\", \"rsphcmb\");\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setIsLoading(false);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n            history.goBack();\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateImage = async (e) => {\n    setIsLoading(true);\n\n    const fileRef = ref(storage, \"rsphcmb_who_we_are/image\");\n\n    deleteObject(fileRef)\n      .then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm onSubmit={updateImage}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : location?.state?.image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default WhoWeAreImage;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/who_we_are_content.js",["624","625"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/vision_section.js",["626"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/util/lga/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/lga_item.js",[],[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/comm_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button.js",["627","628","629","630"],[],"import React from \"react\";\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  ListItemText,\n  Fade,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport CustomDialogEdit from \"../dialogs/custom-dialog\";\nimport CustomDialogDelete from \"../dialogs/custom-dialog\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { Box } from \"@mui/system\";\nimport { doc, updateDoc, db } from \"../../../data/firebase\";\n\n//Committee Action Button\nconst ActionButton = ({ selected, list, index, lgaID }) => {\n  // const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const [setLoading] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const { notifications, userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  const updateRow = async (index) => {\n    setLoading(true);\n    const mRef = doc(db, \"lgas\", \"\" + lgaID);\n\n    let arrCopy = list;\n    arrCopy.forEach((el, key) => {\n      if (key === index) {\n        //Update here\n      }\n    });\n\n    try {\n      await updateDoc(mRef, {\n        committees: list?.filter((el, key) => key !== index),\n      });\n      setLoading(false);\n      enqueueSnackbar(`Row deleted successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      // setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={() => setOpenUpdate(true)}>\n          <ListItemText primary=\"Edit\" />\n        </MenuItem>\n        <CustomDialogEdit\n          title={\"Update \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <UpdateView\n              setOpen={setOpenUpdate}\n              name={selected?.name}\n              designation={selected?.designation}\n            />\n          }\n          open={openUpdate}\n          handleClose={() => setOpenUpdate(false)}\n        />\n        <MenuItem onClick={() => setOpenDelete(true)}>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <CustomDialogDelete\n          title={\"Delete \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <DeleteView\n              setOpen={setOpenDelete}\n              name={selected?.name}\n              id={index}\n              lgaID={lgaID}\n              list={list}\n              index={index}\n            />\n          }\n          open={openDelete}\n          handleClose={() => setOpenDelete(false)}\n        />\n      </Menu>\n    </>\n  );\n};\n\nconst UpdateView = (props) => {\n  let { setOpen, name, designation } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    designation: designation,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submit = (e) => {\n    setIsLoading(true);\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={submit}>\n        <TextValidator\n          name=\"name\"\n          fullWidth\n          placeholder=\"Name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n        <br />\n        <TextValidator\n          name=\"designation\"\n          fullWidth\n          placeholder=\"Designation\"\n          label=\"Designation\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.designation}\n          onChange={handleChange}\n        />\n        <br />\n        <Button variant=\"contained\" type=\"submit\" fullWidth>\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst DeleteView = (props) => {\n  let { list, lgaID, name, index, id, setOpen } = props;\n\n  const [isLoading, setLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteRow = async () => {\n    setLoading(true);\n    const mRef = doc(db, \"lgas\", \"\" + lgaID);\n    try {\n      await updateDoc(mRef, {\n        committees: list?.filter((el, key) => key !== index),\n      });\n      setLoading(false);\n      setOpen(false);\n      enqueueSnackbar(`Row deleted successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      // setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Typography gutterBottom>\n        Are you sure you want to delete {name} from table?\n      </Typography>\n      <br />\n      <Box\n        display=\"flex\"\n        flexDirection={\"row\"}\n        justifyContent=\"end\"\n        alignItems={\"center\"}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ textTransform: \"none\", mx: 2 }}\n          onClick={() => setOpen(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          sx={{ textTransform: \"none\" }}\n          onClick={deleteRow}\n        >\n          Delete\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ActionButton;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/facility_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button2.js",["631","632","633","634","635"],[],"import React from \"react\";\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  ListItemText,\n  Fade,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport CustomDialogEdit from \"../dialogs/custom-dialog\";\nimport CustomDialogDelete from \"../dialogs/custom-dialog\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { Box } from \"@mui/system\";\nimport { updateDoc, db, doc } from \"../../../data/firebase\";\n\n//Facilities Table Action Button\nconst ActionButton2 = ({ selected, index, setIsPerforming, list, lgaID }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const { notifications, userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={() => setOpenUpdate(true)}>\n          <ListItemText primary=\"Edit\" />\n        </MenuItem>\n        <CustomDialogEdit\n          title={\"Update \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <UpdateView setOpen={setOpenUpdate} name={selected?.name} />\n          }\n          open={openUpdate}\n          handleClose={() => setOpenUpdate(false)}\n        />\n        <MenuItem onClick={() => setOpenDelete(true)}>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <CustomDialogDelete\n          title={\"Delete \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <DeleteView\n              setOpen={setOpenDelete}\n              name={selected?.name}\n              id={index}\n            />\n          }\n          open={openDelete}\n          handleClose={() => setOpenDelete(false)}\n        />\n      </Menu>\n    </>\n  );\n};\n\nconst UpdateView = (props) => {\n  let { setOpen, name } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submit = (e) => {\n    setIsLoading(true);\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={submit}>\n        <TextValidator\n          name=\"name\"\n          fullWidth\n          placeholder=\"Name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n\n        <br />\n        <Button variant=\"contained\" type=\"submit\" fullWidth>\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst DeleteView = (props) => {\n  let { list, lgaID, name, index, id, setOpen } = props;\n\n  const [isLoading, setLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteRow = async () => {\n    setLoading(true);\n    const mRef = doc(db, \"lgas\", \"\" + lgaID);\n    try {\n      await updateDoc(mRef, {\n        facilities: list?.filter((el, key) => key !== index),\n      });\n      setLoading(false);\n      setOpen(false);\n      enqueueSnackbar(`Row deleted successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      // setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Typography gutterBottom>\n        Are you sure you want to delete {name} from table?\n      </Typography>\n      <br />\n      <Box\n        display=\"flex\"\n        flexDirection={\"row\"}\n        justifyContent=\"end\"\n        alignItems={\"center\"}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ textTransform: \"none\", mx: 2 }}\n          onClick={() => setOpen(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          sx={{ textTransform: \"none\" }}\n          onClick={deleteRow}\n        >\n          Delete\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ActionButton2;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/lga.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/wdc.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/wdc/update_wdc.js",["636","637"],[],"import { Button, LinearProgress } from \"@mui/material\";\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { useSnackbar } from \"notistack\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\n\nconst UpdateWDC = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [title, setTitle] = React.useState(location?.state?.title);\n  const [body, setBody] = React.useState(location?.state?.body);\n  const [isError, setIsError] = React.useState(false);\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    // setIsStartedFilling(true);\n    const { value } = e.target;\n    setTitle(value);\n    // setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    if (!isSubmitted) {\n      window.addEventListener(\"beforeunload\", () => {\n        // console.log('added');\n      });\n    }\n    return () => {\n      window.removeEventListener(\"beforeunload\", () => console.log(\"\"));\n    };\n  }, [isStartedFilling]);\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    // console.log(\"LO\", body);\n\n    const mRef = doc(db, \"contents\", \"wdc\");\n    try {\n      await updateDoc(mRef, {\n        title: title,\n        body: body,\n      });\n      setIsSubmitting(false);\n      //   console.log(\"SUCCESS MSGs\", resp);\n      enqueueSnackbar(`WDC updated successfully`, {\n        variant: \"success\",\n      });\n      history.goBack();\n    } catch (error) {\n      setIsSubmitting(false);\n      enqueueSnackbar(`${error?.message || \"Error updating record\"}`, {\n        variant: \"error\",\n      });\n      //   console.log(\"ERROR MSGs\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Button startIcon={<ArrowBackIosNew />} onClick={() => history.goBack()}>\n        Back\n      </Button>\n      <br />\n      <br />\n      <ValidatorForm\n        onSubmit={submitForm}\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <TextValidator\n          fullWidth\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          required\n          label=\"Title\"\n          value={title}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n        <br />\n        <EditableRichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        {isSubmitting && <LinearProgress />}\n        <br />\n\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={isSubmitting}\n        >\n          Submit\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateWDC;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/downloads.js",["638","639"],[],"import { Add } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport AddDownloadForm from \"../../../../forms/downloads/add_downloads\";\nimport UpdateDownloadForm from \"../../../../forms/downloads/update_downloads\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 120,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst DownloadsItemCard = (props) => {\n  const { item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"downloads/\" + item?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"downloads\", \"\" + item?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${item?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Downloads\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateDownloadForm\n            id={item?.id}\n            image={item?.res}\n            title={item?.title}\n            setOpen={setOpen}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Downloads\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/dashboard/resources/downloads/\" + item?.id,\n              state: {\n                title: item?.title,\n                image: item?.res,\n                date: item?.createdAt,\n                id: item?.id,\n              },\n            })\n          }\n        >\n          {/* <CardMedia image={item?.res} className={classes.cardMedia} /> */}\n          <Divider />\n          <br />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {item?.title?.length > 50\n                ? item?.title?.substring(0, 50) + \"...\"\n                : item?.title}\n            </Typography>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Downloads = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [downloadsList, setDownloadsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"downloads\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const downloads = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        downloads?.push(dat);\n      });\n      setDownloadsList(downloads);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Download\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddDownloadForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            DOWNLOADS\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Download\n        </Button>\n      </div>\n      <br />\n      <div>\n        {downloadsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {downloadsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <DownloadsItemCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {downloadsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Downloads;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/add_downloads.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/downloads/update_downloads.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/reports.js",["640","641","642","643","644"],[],"import { Add } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport AddDownloadForm from \"../../../../forms/downloads/add_downloads\";\nimport UpdateDownloadForm from \"../../../../forms/downloads/update_downloads\";\nimport UpdateReportForm from \"../../../../forms/reports/update_report\";\nimport AddReportForm from \"../../../../forms/reports/add_report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ItemCard = (props) => {\n  const { item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteService = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"reports/\" + item?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"reports\", \"\" + item?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((err) => {});\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${item?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteService}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Reports\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateReportForm\n            id={item?.id}\n            image={item?.res}\n            title={item?.title}\n            content={item?.body}\n            setOpen={setOpen}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Report\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n        //   onClick={() =>\n        //     history.push({\n        //       pathname: \"/dashboard/resources/reports/\" + item?.id,\n        //       state: {\n        //         title: item?.title,\n        //         image: item?.res,\n        //         date: item?.createdAt,\n        //         id: item?.id,\n        //       },\n        //     })\n        //   }\n        >\n          <CardMedia image={item?.image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {item?.title?.length > 75\n                ? item?.title?.substring(0, 75) + \"...\"\n                : item?.title}\n            </Typography>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Reports = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [reportsList, setReportsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"reports\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const reports = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        reports?.push(dat);\n      });\n      setReportsList(reports);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Report\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddReportForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            REPORTS\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Report\n        </Button>\n      </div>\n      <br />\n      <div>\n        {reportsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {reportsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <ItemCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {reportsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/add_report.js",["645"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\n// import { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 5px auto\",\n    width: 400,\n    height: 300,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddReportForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    createdAt: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [body, setBody] = React.useState(\"\");\n  const [isError, setIsError] = React.useState(false);\n  //   const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createReport = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"reports/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        // enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"reports\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            body: body,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              //   enqueueSnackbar(`News item added successfully`, {\n              //     variant: \"success\",\n              //   });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div style={{ height: \"96vh\" }}>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createReport}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Report banner is required\"]}\n              helperText=\"Report banner\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Report title is required\"]}\n        />\n\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddReportForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/reports/update_report.js",["646"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  updateDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\n// import { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 5px auto\",\n    width: 400,\n    height: 300,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst UpdateReportForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, image, title, content } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    createdAt: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [body, setBody] = React.useState(content);\n  const [isError, setIsError] = React.useState(false);\n  const [previewImage, setPreviewImage] = React.useState(image);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"res\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        res: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"reports/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"reports\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              image: downloadURL,\n              body: body ?? content,\n              updatedAt: timeNow,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Report updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateReport = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"reports\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: body ?? content,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Report updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"reports/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          //   console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateReport}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"res\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.res}\n              name=\"res\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf, .doc\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Download resource is required\"]}\n              helperText=\"Download resource\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage ? previewImage : image}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Report title is required\"]}\n        />\n        <br />\n\n        <RichText\n          value={body}\n          setValue={setBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateReportForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_website_visits.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/appwidgetsummary.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/util/formatNumber.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/iconify.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/charts/base_option_chart.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/components/sections/app_current_visits.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/governor_section.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/add_team.js",["647"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddTeamMember = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    position: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [bio, setBio] = React.useState();\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const addNewMember = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"team-members/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error?.message || \"Check your internet\"}`, {\n          variant: \"error\",\n        });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setDoc(doc(db, \"team-members\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.name,\n            image: downloadURL,\n            position: formValues.position,\n            biography: bio,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New team member added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={addNewMember}>\n        <Grid container spacing={2}>\n          <Grid item sm={6} md={6}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg,\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Upload featured image\"\n            />\n          </Grid>\n          <Grid item sm={6} md={6}>\n            <div>\n              {previewPassport && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewPassport}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n        <br />\n\n        <TextValidator\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Member's name is required\"]}\n        />\n        <br />\n        <TextValidator\n          label=\"Position\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.position}\n          onChange={handleChange}\n          name=\"position\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Member's position is required\"]}\n        />\n        <br />\n        <RichText\n          value={bio}\n          setValue={setBio}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddTeamMember;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/about-rsphcmb/update_team.js",["648","649","650"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext/\";\nimport EditableRichText from \"../../components/misc/richtext/editable\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst UpdateTeamForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, name, position, biography, image } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n    position: position,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [bio, setBio] = React.useState(biography);\n  const [isError, setIsError] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"team-members/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"team-members\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              position: formValues.position,\n              biography: bio,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Team member updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateBanner = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      name: formValues.name ? formValues.name : name,\n      position: formValues.position ? formValues.position : position,\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"team-members\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          position: formValues.position,\n          biography: bio,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Team member updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      uploadNewImage();\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateBanner}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Team member's photo\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : image}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.name === \" \"\n              ? name\n              : !formValues.name\n              ? \"\"\n              : formValues.name\n          }\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Name is required\"]}\n        />\n        <br />\n        <TextValidator\n          label=\"Position\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.position === \" \"\n              ? position\n              : !formValues.position\n              ? \"\"\n              : formValues.position\n          }\n          onChange={handleChange}\n          name=\"position\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Member's position is required\"]}\n        />\n        <br />\n        <EditableRichText\n          value={bio}\n          setValue={setBio}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateTeamForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/lga/committee/add_committee.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/services/set_featured_service.js",["651","652"],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/services.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/contact.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/users/index.js",["653","654","655","656","657","658","659","660","661","662","663","664","665","666","667"],[],"import { Add } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider } from \"@mui/material\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../components/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport Box from \"@mui/system/Box\";\nimport { db, doc, deleteDoc } from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\nimport EditServiceForm from \"../../../../forms/services/edit_service_form\";\nimport CreateAdminForm from \"../../../../forms/users/add_user\";\nimport { useSelector } from \"react-redux\";\nimport UsersTable from \"../../../../components/misc/table/users_table\";\nimport UsersTablePaginated from \"../../../../components/misc/table/users_table_paginated\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst User = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const { userData } = useSelector((state) => state.user);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New User\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<CreateAdminForm setOpen={setOpen} />}\n      />\n\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Users\n          </Typography>\n        </div>\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent=\"end\"\n          alignItems={\"center\"}\n        >\n          <Button\n            startIcon={<Add />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setOpen(true)}\n          >\n            Add User\n          </Button>\n        </Box>\n      </div>\n      <br />\n      <div>\n        <UsersTablePaginated list={userData} />\n      </div>\n\n      {/* <div>\n        {userData && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {userData?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <UserCard item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {usersList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div> */}\n    </div>\n  );\n};\n\nexport default User;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/users/add_user.js",["668","669"],[],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { makeStyles } from \"@mui/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { auth, ref, db, doc, setDoc, getDoc } from \"../../../data/firebase\";\nimport { createUser } from \"../../../domain/service\";\nimport { useSnackbar } from \"notistack\";\nimport { SelectValidator } from \"react-material-ui-form-validator\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CreateAdminForm = (props) => {\n  const { setOpen } = props;\n  const classes = useStyles();\n  const roles = [\"Editor\", \"Super Admin\", \"Admin\"];\n\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [formValues, setFormValues] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    role: \"\",\n  });\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const createAdmin = (e) => {\n    setIsLoading(true);\n    const timeNow = new Date();\n    createUser(formValues.email, formValues.password)\n      .then(async (resp) => {\n        try {\n          setDoc(doc(db, \"users\", resp?.user?.uid), {\n            id: resp?.user?.uid,\n            firstname: formValues.firstname,\n            lastname: formValues.lastname,\n            phone: formValues.phone,\n            email: formValues.email,\n            password: formValues.password,\n            role: \"admin\",\n            isBlocked: false,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then(async (result) => {\n              setIsLoading(false);\n              setOpen(false);\n              const docRef = doc(db, \"users\", resp?.user?.uid);\n              const docSnap = await getDoc(docRef);\n              if (docSnap.exists()) {\n                enqueueSnackbar(`Admin created successfully`, {\n                  variant: \"success\",\n                });\n              }\n            })\n            .catch((err) => {\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${err?.message || \"Check your internet connection\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        enqueueSnackbar(`${err?.message || \"Check your internet connection\"}`, {\n          variant: \"error\",\n        });\n        // console.log(\"ERR: \", err?.message);\n      });\n  };\n\n  return (\n    <div style={{ width: 360 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createAdmin}>\n        <TextValidator\n          className={classes.mb}\n          id=\"firstname\"\n          label=\"First name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.firstname}\n          onChange={handleChange}\n          name=\"firstname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"First name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"lastname\"\n          label=\"Last name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.lastname}\n          onChange={handleChange}\n          name=\"lastname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Last name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"email\"\n          label=\"Email address\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.email}\n          onChange={handleChange}\n          name=\"email\"\n          fullWidth\n          required\n          type=\"email\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"phone\"\n          label=\"Phone number\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.phone}\n          onChange={handleChange}\n          name=\"phone\"\n          fullWidth\n          required\n          type=\"phone\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <SelectValidator\n          id=\"roles\"\n          className={classes.mb}\n          value={formValues.role}\n          onChange={handleChange}\n          label=\"Select user role\"\n          name=\"role\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"User's role is required\"]}\n        >\n          {(roles ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CreateAdminForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/users_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/enquiry.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/enquiries/index.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/enquiries_table.js",["670","671","672"],[],"import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport ActionButton from \"../../button/action_button\";\nimport TimeAgo from \"../countdown/timeago\";\nimport ActionButton3 from \"../../button/action_button3\";\nimport ActionButton4 from \"../../button/action_button4\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\nexport default function EnquiriesTable(props) {\n  let { list } = props;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>S/N0</StyledTableCell>\n            <StyledTableCell align=\"right\">FULLNAME</StyledTableCell>\n            <StyledTableCell align=\"left\">DATE</StyledTableCell>\n            <StyledTableCell align=\"left\">EMAIL ADDRESS</StyledTableCell>\n            <StyledTableCell align=\"left\">PHONE </StyledTableCell>\n            <StyledTableCell align=\"left\">SUBJECT</StyledTableCell>\n            <StyledTableCell align=\"left\">REQUEST</StyledTableCell>\n            <StyledTableCell align=\"left\">ACTION</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {list?.map((row, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {index + 1}\n              </StyledTableCell>\n              <StyledTableCell align=\"inherit\">{row?.fullname}</StyledTableCell>\n              <StyledTableCell align=\"inherit\">\n                {new Date(row?.createdAt.seconds * 1000).toLocaleDateString(\n                  \"en\"\n                )}\n              </StyledTableCell>\n              <StyledTableCell align=\"inherit\">{row?.email}</StyledTableCell>\n              <StyledTableCell align=\"left\">{row?.phone}</StyledTableCell>\n              <StyledTableCell align=\"inherit\">{row?.subject}</StyledTableCell>\n              <StyledTableCell align=\"inherit\">\n                {row?.request?.length > 36\n                  ? row?.request?.substring(0, 32) + \"...\"\n                  : row?.request}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                <ActionButton4 selected={row} index={index} />\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/countdown/timeago.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/users_table_paginated.js",[],[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button3.js",["673","674","675","676"],[],"import React from \"react\";\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  ListItemText,\n  Fade,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport CustomDialogView from \"../dialogs/custom-dialog\";\nimport CustomDialogEdit from \"../dialogs/custom-dialog\";\nimport CustomDialogDelete from \"../dialogs/custom-dialog\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { Box } from \"@mui/system\";\nimport Preview from \"../preview\";\n\n// const useStyles = makeStyles((theme) => ({\n//     awardRoot: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//     },\n//     awardRow: {\n//         display: 'flex',\n//         flexDirection: 'row',\n//         marginLeft: 'auto',\n//     },\n//     button: {\n//         margin: theme.spacing(1)\n//     }\n// }))\n\nconst ActionButton3 = ({ selected, index, setIsPerforming }) => {\n  // const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openView, setOpenView] = React.useState(false);\n  const [openUpdate, setOpenUpdate] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const { notifications, userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={() => setOpenView(true)}>\n          <ListItemText primary=\"Update\" />\n        </MenuItem>\n        <CustomDialogView\n          title={\"Row Preview Information\"}\n          bodyComponent={<Preview type=\"enquiries\" data={selected} />}\n          open={openView}\n          handleClose={() => setOpenView(false)}\n        />\n        <MenuItem onClick={() => setOpenUpdate(true)}>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <CustomDialogEdit\n          title={\"Update \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <UpdateView setOpen={setOpenUpdate} name={selected?.name} />\n          }\n          open={openUpdate}\n          handleClose={() => setOpenUpdate(false)}\n        />\n        <MenuItem onClick={() => setOpenDelete(true)}>\n          <ListItemText primary=\"Block\" />\n        </MenuItem>\n        <CustomDialogDelete\n          title={\"Delete \" + selected?.name + \"'s data \"}\n          bodyComponent={\n            <DeleteView\n              setOpen={setOpenDelete}\n              name={selected?.name}\n              id={index}\n            />\n          }\n          open={openDelete}\n          handleClose={() => setOpenDelete(false)}\n        />\n      </Menu>\n    </>\n  );\n};\n\nconst UpdateView = (props) => {\n  let { setOpen, name } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submit = (e) => {\n    setIsLoading(true);\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={submit}>\n        <TextValidator\n          name=\"name\"\n          fullWidth\n          placeholder=\"Name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n\n        <br />\n        <Button variant=\"contained\" type=\"submit\" fullWidth>\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst DeleteView = (props) => {\n  let { name, id, setOpen } = props;\n\n  const handleDelete = () => {};\n\n  return (\n    <div>\n      <Typography gutterBottom>\n        Are you sure you want to delete {name} from table?\n      </Typography>\n      <br />\n      <Box\n        display=\"flex\"\n        flexDirection={\"row\"}\n        justifyContent=\"end\"\n        alignItems={\"center\"}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ textTransform: \"none\", mx: 2 }}\n          onClick={() => setOpen(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          sx={{ textTransform: \"none\" }}\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ActionButton3;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/preview.js",["677"],[],"import { Divider, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\n\nconst Preview = (props) => {\n  let { type, data } = props;\n  const [body, setBody] = React.useState(null);\n\n  React.useLayoutEffect(() => {\n    if (type === \"user\") {\n      setBody(\n        <Box display=\"flex\" flexDirection={\"column\"} justifyContent=\"start\">\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>FIRSTNAME</Typography>\n              <Typography variant=\"h6\">{data?.firstname}</Typography>\n            </Grid>\n            <Grid item sm={6} md={6}>\n              <Typography>LASTNAME</Typography>\n              <Typography variant=\"h6\">{data?.lastname}</Typography>\n            </Grid>\n          </Grid>\n          <br />\n          <Divider />\n          <br />\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>EMAIL</Typography>\n              <Typography variant=\"h6\">{data?.email}</Typography>\n            </Grid>\n            <Grid item sm={6} md={6}>\n              <Typography>PHONE NUMBER</Typography>\n              <Typography variant=\"h6\">{data?.phone}</Typography>\n            </Grid>\n          </Grid>\n          <br />\n          <Divider />\n          <br />\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>ROLE</Typography>\n              <Typography variant=\"h6\">{data?.role}</Typography>\n            </Grid>\n            <Grid item sm={6} md={6}>\n              <Typography>CREATED ON</Typography>\n              <Typography variant=\"h6\">{data?.createdAt}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      );\n    } else if (type === \"committee\") {\n      setBody(\n        <Box display=\"flex\" flexDirection={\"column\"} justifyContent=\"start\">\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>NAME</Typography>\n              <Typography variant=\"h6\">{data?.name}</Typography>\n            </Grid>\n            <Grid item sm={6} md={6}>\n              <Typography>DESIGNATION</Typography>\n              <Typography variant=\"h6\">{data?.designation}</Typography>\n            </Grid>\n          </Grid>\n          <br />\n          <Divider />\n          <br />\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>ADDED ON</Typography>\n              <Typography variant=\"h6\">{data?.createdAt}</Typography>\n            </Grid>\n          </Grid>\n          <br />\n          <Divider />\n          <br />\n        </Box>\n      );\n    } else if (type === \"enquiries\") {\n      setBody(\n        <Box display=\"flex\" flexDirection={\"column\"} justifyContent=\"start\">\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>NAME</Typography>\n              <Typography variant=\"h6\">{data?.fullname}</Typography>\n            </Grid>\n            <Grid item sm={6} md={6}>\n              <Typography>EMAIL</Typography>\n              <Typography variant=\"h6\">{data?.email}</Typography>\n            </Grid>\n          </Grid>\n          <br />\n          <Divider />\n          <br />\n          <Grid container spacing={2}>\n            <Grid item sm={6} md={6}>\n              <Typography>PHONE NUMBER</Typography>\n              <Typography variant=\"h6\">{data?.phone}</Typography>\n            </Grid>\n            <Grid item sm={6} md={6}>\n              <Typography>SUBJECT</Typography>\n              <Typography variant=\"h6\">{data?.subject}</Typography>\n            </Grid>\n          </Grid>\n          <br />\n          <Typography>{data?.request}</Typography>\n          <Divider />\n          <br />\n        </Box>\n      );\n    }\n  }, []);\n\n  return body;\n};\n\nexport default Preview;\n",[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/gallery.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/research.js",["678"],[],"import { Add, Edit } from \"@mui/icons-material\";\nimport { Backdrop, CircularProgress, Divider, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialog2 from \"../../../../components/dialogs/custom-dialog\";\nimport { db, doc, updateDoc } from \"../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\n// import { useHistory } from \"react-router-dom\";\nimport AddReportForm from \"../../../../forms/reports/add_report\";\nimport { useSelector } from \"react-redux\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport RichText from \"../../../../components/misc/richtext\";\nimport { Box } from \"@mui/system\";\nimport ResearchTable from \"../../../../components/misc/table/research_table\";\nimport MUIRichTextEditor from \"mui-rte\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 286,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 275,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst Research = () => {\n  const classes = useStyles();\n  //   const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const { researchData } = useSelector((state) => state.resources);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add New Gallery Album\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddReportForm setOpen={setOpen} />}\n      />\n      <CustomDialog2\n        open={open2}\n        title=\"Update Research Information\"\n        handleClose={() => setOpen2(false)}\n        bodyComponent={\n          <UpdateBody body={researchData?.body} setOpen={setOpen2} />\n        }\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            RESEARCH\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Research FAQ\n        </Button>\n      </div>\n      <br />\n      <div>\n        {researchData && (\n          <Box display=\"flex\" flexDirection=\"column\">\n            <Box\n              display={\"flex\"}\n              flexDirection=\"row\"\n              justifyContent={\"space-between\"}\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h6\">Introduction</Typography>\n              <Button\n                variant=\"text\"\n                startIcon={<Edit />}\n                onClick={() => setOpen2(true)}\n              >\n                Edit\n              </Button>\n            </Box>\n            <MUIRichTextEditor\n              readOnly\n              inlineToolbar={false}\n              defaultValue={researchData?.body}\n              toolbar={false}\n            />\n            <Divider />\n            <br />\n            <ResearchTable list={researchData?.faqs} />\n          </Box>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst UpdateBody = (props) => {\n  let { body, setOpen } = props;\n  const [content, setContent] = React.useState(body);\n  const [isError, setError] = React.useState(false);\n  const [isLoading, setLoading] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const updateData = async (e) => {\n    setLoading(true);\n\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"resources\", \"research\");\n      await updateDoc(mRef, {\n        body: content,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setLoading(false);\n      enqueueSnackbar(`Research updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateData}>\n        <RichText\n          value={content}\n          setValue={setContent}\n          error={isError}\n          setError={setError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default Research;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/table/research_table.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/button/action_button4.js",["679","680","681","682","683","684","685"],[],"import React from \"react\";\nimport {\n  Menu,\n  MenuItem,\n  IconButton,\n  ListItemText,\n  Fade,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport CustomDialogView from \"../dialogs/custom-dialog\";\nimport CustomDialogEdit from \"../dialogs/custom-dialog\";\nimport CustomDialogDelete from \"../dialogs/custom-dialog\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport { TextValidator } from \"react-material-ui-form-validator\";\nimport { Box } from \"@mui/system\";\nimport Preview from \"../preview\";\n\nconst ActionButton4 = ({ selected, index }) => {\n  //For enquiry.\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openView, setOpenView] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  //   const { enqueueSnackbar } = useSnackbar();\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={() => setOpenView(true)}>\n          <ListItemText primary=\"View\" />\n        </MenuItem>\n        <CustomDialogView\n          title={\"Row Preview Information\"}\n          bodyComponent={<Preview type=\"enquiries\" data={selected} />}\n          open={openView}\n          handleClose={() => setOpenView(false)}\n        />\n      </Menu>\n    </>\n  );\n};\n\nconst UpdateView = (props) => {\n  let { setOpen, name } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submit = (e) => {\n    setIsLoading(true);\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={submit}>\n        <TextValidator\n          name=\"name\"\n          fullWidth\n          placeholder=\"Name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n        />\n\n        <br />\n        <Button variant=\"contained\" type=\"submit\" fullWidth>\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst DeleteView = (props) => {\n  let { name, id, setOpen } = props;\n\n  const handleDelete = () => {};\n\n  return (\n    <div>\n      <Typography gutterBottom>\n        Are you sure you want to delete {name} from table?\n      </Typography>\n      <br />\n      <Box\n        display=\"flex\"\n        flexDirection={\"row\"}\n        justifyContent=\"end\"\n        alignItems={\"center\"}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ textTransform: \"none\", mx: 2 }}\n          onClick={() => setOpen(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          sx={{ textTransform: \"none\" }}\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default ActionButton4;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/depts.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/departments.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_department.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/components/department_info.js",["686"],[],"import { Add, ArrowBackIosNew, Delete, Edit } from \"@mui/icons-material\";\nimport {\n  Backdrop,\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport CustomDialog from \"../../../../../components/dialogs/custom-dialog\";\nimport UpdateDialog from \"../../../../../components/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dialogs/custom-dialog\";\n// import AddFunctionForm from \"../../../../../forms/department/add_function\";\nimport {\n  doc,\n  db,\n  deleteDoc,\n  query,\n  where,\n  onSnapshot,\n  collection,\n} from \"../../../../../../data/firebase\";\n\nimport { useSelector } from \"react-redux\";\nimport UpdateFunctionForm from \"../../../../../forms/department/update_function\";\nimport AddDeptFunctionForm from \"../../../../../forms/department/add_dept_function\";\n\nconst Item = (props) => {\n  let { setLoading, item, index } = props;\n\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteFunct = async (item) => {\n    setLoading(true);\n    try {\n      await deleteDoc(doc(db, \"dept-functions\", \"\" + item?.id));\n      enqueueSnackbar(`Item deleted successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.log(\"ERR: Del: \", error);\n      enqueueSnackbar(`Item not deleted. Try again`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <DeleteDialog\n        open={open2}\n        title=\"Delete Department Function\"\n        handleClose={() => setOpen2(false)}\n        bodyComponent={\n          <div>\n            <Typography>\n              Are you sure you want to delete this function?\n            </Typography>\n            <Box\n              display=\"flex\"\n              flexDirction=\"row\"\n              justifyContent={\"end\"}\n              alignItems=\"center\"\n            >\n              <Button\n                sx={{ mx: 1 }}\n                variant=\"contained\"\n                onClick={() => setOpen2(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                sx={{ backgroundColor: \"red\" }}\n                onClick={() => deleteFunct(item)}\n              >\n                Delete\n              </Button>\n            </Box>\n          </div>\n        }\n      />\n      <UpdateDialog\n        open={open3}\n        title=\"Update Department Function\"\n        handleClose={() => setOpen3(false)}\n        bodyComponent={\n          <UpdateFunctionForm\n            func={item?.function}\n            id={item?.id}\n            setOpen={setOpen3}\n          />\n        }\n      />\n      <Box\n        py={1}\n        display={\"flex\"}\n        flexDirection=\"row\"\n        justifyContent={\"start\"}\n        alignItems=\"center\"\n      >\n        <Typography pr={2}>{index + 1}.</Typography>\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"start\"}\n          alignItems=\"center\"\n        >\n          <Typography pl={2} flex={1}>\n            {item?.function}\n          </Typography>\n          <IconButton onClick={() => setOpen2(true)}>\n            <Delete />\n          </IconButton>\n\n          <IconButton onClick={() => setOpen3(true)}>\n            <Edit />\n          </IconButton>\n        </Box>\n      </Box>\n      <Divider />\n    </div>\n  );\n};\n\nconst DepartmentInfo = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [open, setOpen] = React.useState(false);\n  const [functions, setFunctions] = React.useState();\n  const [isLoading, setLoading] = React.useState(false);\n\n  const { deptFunctions } = useSelector((state) => state.departments);\n\n  React.useEffect(() => {\n    // const res = deptFunctions?.filter(\n    //   (el) => el?.departments === location?.state?.id\n    // );\n    // setFunctions(res);\n\n    const q = query(\n      collection(db, \"dept-functions\"),\n      where(\"department\", \"==\", location.state?.id)\n    );\n    onSnapshot(q, (querySnapshot) => {\n      const fn = [];\n      querySnapshot.forEach((doc) => {\n        fn.push(doc.data());\n      });\n      setFunctions(fn);\n      // dispatch(setDeptFunctions(fn));\n    });\n  }, [deptFunctions, functions]);\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <CustomDialog\n        open={open}\n        title=\"Add Department Function\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <AddDeptFunctionForm deptId={location?.state?.id} setOpen={setOpen} />\n        }\n      />\n\n      <Container>\n        <Box\n          py={2}\n          display=\"flex\"\n          flexDirction=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n        >\n          <Button\n            startIcon={<ArrowBackIosNew />}\n            variant=\"text\"\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n        </Box>\n        <Typography variant=\"h5\" gutterBottom={true}>\n          {location.state?.title}{\" \"}\n        </Typography>\n        <Typography gutterBottom={true}>\n          {location.state?.description}{\" \"}\n        </Typography>\n        <br />\n        <Divider />\n        <br />\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">Functions of Department</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setOpen(true)}\n          >\n            Add Function\n          </Button>\n        </Box>\n        <Typography\n          gutterBottom\n          hidden={(location?.state?.functions || functions)?.length < 1}\n        >\n          Below are the roles/functions of the department\n        </Typography>\n        <br />\n        {functions?.map((item, index) => (\n          <Container key={index}>\n            <Item setLoading={setLoading} item={item} index={index} />\n          </Container>\n        ))}\n        {functions?.length < 1 && (\n          <Box\n            padding={10}\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n            alignItems={\"center\"}\n          >\n            <Typography>No records found</Typography>\n          </Box>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default DepartmentInfo;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_function.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_department.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/add_gallery.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/resources/gallery_info.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/add_sub_album.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_gallery.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/gallery/update_sub_album.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/lga/facilities/add_facility.js",["687"],[],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n// import Avatar from \"@mui/material/Avatar\";\n// import { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\n// const useStyles = makeStyles((theme) => ({\n//   image: {\n//     margin: \"0px auto 15px auto\",\n//     width: 128,\n//     height: 128,\n//   },\n// }));\n\nconst NewFacilityForm = (props) => {\n  let { setOpen, id, list } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    designation: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [faci, setFaci] = React.useState([]);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  React.useEffect(() => {\n    if (list) {\n      //   console.log(`SJHS: ${list}`);\n      setFaci(list);\n\n      setIsLoading(false);\n    }\n  }, [list]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const addRecord = async (e) => {\n    // const timeNow = new Date();\n    setIsLoading(true);\n    list = Object.assign([], list);\n    list?.push({\n      name: formValues.name,\n    });\n    const mRef = doc(db, \"lgas\", \"\" + id);\n\n    // console.log(`GYS: ${list?.length}`);\n    // list?.forEach((element) => {\n    //   console.log(\"ELEM\", element);\n    // });\n\n    try {\n      await updateDoc(mRef, {\n        facilities: [...list],\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Facility added successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet!\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={addRecord}>\n        <TextValidator\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name is required\"]}\n        />\n        <br />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save Facility\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default NewFacilityForm;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/password.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/account/index.js",["688","689"],[],"import {\n  Avatar,\n  Backdrop,\n  Button,\n  CircularProgress,\n  Grid,\n  Typography,\n  Divider,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTheme } from \"@mui/material\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport {\n  db,\n  doc,\n  ref,\n  auth,\n  storage,\n  uploadBytesResumable,\n  updateDoc,\n  getDownloadURL,\n  updateEmail,\n  updatePassword,\n} from \"../../../../../data/firebase\";\nimport Edit from \"@mui/icons-material/Edit\";\n\nimport CustomDialogFN from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialogLN from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialogNUM from \"../../../../components/dialogs/custom-dialog\";\nimport CustomDialogPass from \"../../../../components/dialogs/custom-dialog\";\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nimport { setMyData } from \"../../../../../data/redux/slice/user\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  divRoot: {\n    display: \"flex\",\n    padding: theme.spacing(3),\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatarContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#3EB3CE\",\n    borderWidth: 3,\n    borderStyle: \"solid\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  buttonRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  progress: {\n    color: \"white\",\n    zIndex: 500,\n    margin: \"auto\",\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst Account = () => {\n  const classes = useStyles();\n  const { myData } = useSelector((state) => state.user);\n  const [imageFile, setImageFile] = React.useState(null);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const fileInputRef = React.useRef();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [openFN, setOpenFN] = React.useState(false);\n  const [openLN, setOpenLN] = React.useState(false);\n  const [openNum, setOpenNum] = React.useState(false);\n  const [openPass, setOpenPass] = React.useState(false);\n\n  React.useEffect(() => {\n    console.log(\"USER DATA::\", myData);\n  }, [myData]);\n\n  const initials =\n    myData?.firstname?.slice(0, 1).toUpperCase() +\n    myData?.lastname?.slice(0, 1).toUpperCase();\n\n  let imgSize;\n  const theme = useTheme();\n  const xsmall = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const small = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const medium = useMediaQuery(theme.breakpoints.only(\"md\"));\n  const others = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n  if (xsmall) {\n    imgSize = 150;\n  } else if (small) {\n    imgSize = 174;\n  } else if (medium) {\n    imgSize = 200;\n  } else if (others) {\n    imgSize = 236;\n  }\n\n  const handleFile = (e) => {\n    setImageFile(e.target.files[0]);\n    setImageUrl(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const performSubmit = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(\n      storage,\n      \"users-\" + myData?.id + \"/\" + timeNow.getTime()\n    );\n    const uploadTask = uploadBytesResumable(storageRef, imageFile);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        // console.log(error);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"users\", \"\" + myData?.id);\n          try {\n            await updateDoc(mRef, {\n              image: downloadURL,\n            });\n            setLoading(false);\n            setImageUrl(null);\n            setImageFile(null);\n            enqueueSnackbar(`Image updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <CustomDialogFN\n        open={openFN}\n        title=\"Update My Firstname\"\n        handleClose={() => setOpenFN(false)}\n        bodyComponent={\n          <UpdateFN\n            setOpen={setOpenFN}\n            userId={myData?.id}\n            firstname={myData?.firstname}\n          />\n        }\n      />\n\n      <CustomDialogLN\n        open={openLN}\n        title=\"Update My Lastname\"\n        handleClose={() => setOpenLN(false)}\n        bodyComponent={\n          <UpdateLN\n            setOpen={setOpenLN}\n            userId={myData?.id}\n            lastname={myData?.lastname}\n          />\n        }\n      />\n\n      <CustomDialogNUM\n        open={openNum}\n        title=\"Update My Phone number\"\n        handleClose={() => setOpenNum(false)}\n        bodyComponent={\n          <UpdatePhone\n            setOpen={setOpenNum}\n            userId={myData?.id}\n            phone={myData?.phone}\n          />\n        }\n      />\n\n      <CustomDialogPass\n        open={openPass}\n        title=\"Update My Password\"\n        handleClose={() => setOpenPass(false)}\n        bodyComponent={\n          <UpdatePassword\n            setOpen={setOpenPass}\n            userId={myData?.id}\n            oldPassword={myData?.password}\n          />\n        }\n      />\n\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <Typography variant=\"h6\" fontWeight=\"600\" gutterBottom={true}>\n        Personal Account Information\n      </Typography>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"70vh\",\n        }}\n      >\n        <Grid\n          container\n          spacing={4}\n          justifyContent=\"space-between\"\n          alignItems={\"center\"}\n        >\n          <Grid item sm={6} md={6}>\n            <div className={classes.divRoot}>\n              <div\n                className={classes.avatarContainer}\n                style={{\n                  width: imgSize + 3,\n                  height: imgSize + 3,\n                  borderRadius: (imgSize + 3) / 2,\n                }}\n              >\n                <Avatar\n                  src={\n                    imageUrl\n                      ? imageUrl\n                      : myData?.image !== \"\"\n                      ? myData?.image\n                      : \"\"\n                  }\n                  style={{\n                    width: imgSize - 12,\n                    height: imgSize - 12,\n                    borderRadius: (imgSize - 12) / 2,\n                    fontSize: 64,\n                  }}\n                >\n                  {myData?.image !== \"\" ? \"\" : initials}\n                </Avatar>\n              </div>\n              <br />\n              <input\n                hidden={true}\n                ref={fileInputRef}\n                type=\"file\"\n                onChange={handleFile}\n              />\n\n              <div className={classes.buttonRow}>\n                <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  disableElevation={true}\n                  sx={{ backgroundColor: \"#00B0EF\", textTransform: \"none\" }}\n                  onClick={() => fileInputRef.current.click()}\n                >\n                  Change Profile\n                </Button>\n\n                <Button\n                  hidden={imageFile ? false : true}\n                  disabled={isLoading || isUploading}\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disableElevation={true}\n                  onClick={performSubmit}\n                  sx={{ textTransform: \"none\" }}\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </Grid>\n          <Grid item sm={6} md={6} alignItems={\"center\"}>\n            <Box\n              paddingY={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent={\"space-between\"}\n              alignItems=\"center\"\n            >\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent={\"start\"}\n                alignItems=\"center\"\n              >\n                <Typography>FIRSTNAME</Typography>\n                <Typography variant=\"h6\" pl={2}>\n                  {myData?.firstname}\n                </Typography>\n              </Box>\n              <IconButton onClick={() => setOpenFN(true)}>\n                <Edit />\n              </IconButton>\n            </Box>\n            <Divider />\n            <Box\n              paddingY={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent={\"space-between\"}\n              alignItems=\"center\"\n            >\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent={\"start\"}\n                alignItems=\"center\"\n              >\n                <Typography>LASTNAME</Typography>\n                <Typography variant=\"h6\" pl={2}>\n                  {myData?.lastname}\n                </Typography>\n              </Box>\n              <IconButton onClick={() => setOpenLN(true)}>\n                <Edit />\n              </IconButton>\n            </Box>\n            <Divider />\n            <Box\n              paddingY={1}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent={\"space-between\"}\n              alignItems=\"center\"\n            >\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent={\"start\"}\n                alignItems=\"center\"\n              >\n                <Typography>PHONE NUMBER</Typography>\n                <Typography variant=\"h6\" pl={2}>\n                  {myData?.phone}\n                </Typography>\n              </Box>\n              <IconButton onClick={() => setOpenNum(true)}>\n                <Edit />\n              </IconButton>\n            </Box>\n            <Divider />\n            <Box\n              paddingTop={5}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent={\"stretch\"}\n              alignItems=\"center\"\n            >\n              <Button\n                variant=\"contained\"\n                fullWidth\n                disableElevation={true}\n                sx={{ textTransform: \"none\" }}\n                onClick={() => setOpenPass(true)}\n              >\n                Update Password{\" \"}\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst UpdateFN = (props) => {\n  let { firstname, setOpen, userId } = props;\n  const [formValues, setFormValues] = React.useState({\n    firstname: firstname,\n  });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateData = async (e) => {\n    setLoading(true);\n\n    try {\n      const mRef = doc(db, \"users\", \"\" + userId);\n      await updateDoc(mRef, {\n        firstname: formValues.firstname,\n      });\n      setOpen(false);\n      setLoading(false);\n      enqueueSnackbar(`First name updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateData}>\n        <TextValidator\n          label=\"First Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.firstname}\n          onChange={handleChange}\n          name=\"firstname\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"First name is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update Firstname\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdateLN = (props) => {\n  let { lastname, setOpen, userId } = props;\n  const [formValues, setFormValues] = React.useState({\n    lastname: lastname,\n  });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateData = async (e) => {\n    setLoading(true);\n\n    try {\n      const mRef = doc(db, \"users\", \"\" + userId);\n      await updateDoc(mRef, {\n        lastname: formValues.lastname,\n      });\n      setOpen(false);\n      setLoading(false);\n      enqueueSnackbar(`Last name updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateData}>\n        <TextValidator\n          label=\"last Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.lastname}\n          onChange={handleChange}\n          name=\"lastname\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Last name is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update Lastname\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdatePhone = (props) => {\n  let { phone, setOpen, userId } = props;\n  const [formValues, setFormValues] = React.useState({\n    phone: phone,\n  });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateData = async (e) => {\n    setLoading(true);\n\n    try {\n      const mRef = doc(db, \"users\", \"\" + userId);\n      await updateDoc(mRef, {\n        phone: formValues.phone,\n      });\n      setOpen(false);\n      setLoading(false);\n      enqueueSnackbar(`Phone number updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateData}>\n        <TextValidator\n          label=\"Phone Number\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.phone}\n          onChange={handleChange}\n          name=\"phone\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update Phone Number\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nconst UpdatePassword = (props) => {\n  let { oldPassword, setOpen, userId } = props;\n  const [formValues, setFormValues] = React.useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [showCode2, setShowCode2] = React.useState(false);\n  const [isLoading, setLoading] = React.useState(false);\n  const [isError, setError] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const user = auth.currentUser;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    if (oldPassword !== formValues.oldPassword) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n  };\n\n  const updateData = (e) => {\n    setLoading(true);\n\n    if (formValues.oldPassword === oldPassword) {\n      setError(false);\n      updatePassword(user, formValues.newPassword)\n        .then(async () => {\n          // Update successful.\n          try {\n            const mRef = doc(db, \"users\", \"\" + userId);\n            await updateDoc(mRef, {\n              password: formValues.newPassword,\n            });\n            setOpen(false);\n            setLoading(false);\n            await auth.signOut();\n            dispatch(setMyData(null));\n            enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n            history.replace({\n              pathname: \"/\",\n            });\n            enqueueSnackbar(`Password updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        })\n        .catch((error) => {\n          // An error ocurred\n          setLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        });\n    } else {\n      setError(true);\n      setLoading(false);\n      enqueueSnackbar(`${\"Incorrect Old Password!\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateData}>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"oldPassword\"\n          label=\"Old Password\"\n          type={showCode ? \"text\" : \"password\"}\n          onChange={handleChange}\n          value={formValues.oldPassword}\n          placeholder=\"Old Password\"\n          variant=\"outlined\"\n          style={{ borderColor: \"red\", borderWidth: 1 }}\n          validators={[\"required\"]}\n          errorMessages={[\"Old Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <br />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPassword\"\n          label=\"New Password\"\n          type={showCode2 ? \"text\" : \"password\"}\n          onChange={handleChange}\n          value={formValues.newPassword}\n          placeholder=\"New Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"New Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode2(!showCode2)}\n                  onMouseDown={() => setShowCode2(!showCode2)}\n                  edge=\"end\"\n                >\n                  {showCode2 ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update Password\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default Account;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/pages/dashboard/tabs/about/health_centres.js",["690","691"],[],"import React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/system/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport { Backdrop, Button, CircularProgress } from \"@mui/material\";\nimport { ArrowBackIosNew } from \"@mui/icons-material\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomDialog from \"../../../../components/dialogs/custom-dialog\";\nimport { useSnackbar } from \"notistack\";\nimport { updateDoc, db, doc } from \"../../../../../data/firebase/\";\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\nimport RichText from \"../../../../components/misc/richtext\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport { useSelector } from \"react-redux\";\nimport EditableRichText from \"../../../../components/misc/richtext/editable\";\n\nconst HealthCentres = () => {\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  const { data } = useSelector((state) => state.healthcentre);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Update Health Centre Introduction\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <UpdateBody body={data?.introduction} setOpen={setOpen} />\n        }\n      />\n      <Container sx={{ py: 4 }}>\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent=\"start\"\n          alignItems={\"center\"}\n        >\n          <Button\n            variant=\"text\"\n            startIcon={<ArrowBackIosNew />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography gutterBottom variant=\"h5\" component={\"h1\"}>\n            Health Centre\n          </Typography>\n        </Box>\n        <Box\n          display={\"flex\"}\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems={\"center\"}\n        >\n          <Typography variant=\"h6\">Introduction</Typography>\n          <IconButton onClick={() => setOpen(true)}>\n            <Edit />\n          </IconButton>\n        </Box>\n        <MUIRichTextEditor\n          readOnly\n          inlineToolbar={false}\n          defaultValue={data?.introduction}\n          toolbar={false}\n        />\n      </Container>\n    </div>\n  );\n};\n\nconst UpdateBody = (props) => {\n  let { body, setOpen } = props;\n  const [content, setContent] = React.useState(body);\n  const [isError, setError] = React.useState(false);\n  const [isLoading, setLoading] = React.useState(false);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const updateData = async (e) => {\n    setLoading(true);\n\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"about\", \"health-centres\");\n      await updateDoc(mRef, {\n        introduction: content,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setLoading(false);\n      enqueueSnackbar(`Introduction updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setLoading(false);\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateData}>\n        <EditableRichText\n          value={content}\n          setValue={setContent}\n          error={isError}\n          setError={setError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default HealthCentres;\n","/Users/macintosh/Developer/RSPHCMB-Admin/src/data/redux/slice/health_centres.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/update_function.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/forms/department/add_dept_function.js",[],[],"/Users/macintosh/Developer/RSPHCMB-Admin/src/presentation/components/misc/richtext/editable.js",[],[],{"ruleId":"692","severity":1,"message":"693","line":15,"column":10,"nodeType":"694","messageId":"695","endLine":15,"endColumn":13},{"ruleId":"692","severity":1,"message":"696","line":15,"column":15,"nodeType":"694","messageId":"695","endLine":15,"endColumn":24},{"ruleId":"692","severity":1,"message":"697","line":15,"column":26,"nodeType":"694","messageId":"695","endLine":15,"endColumn":30},{"ruleId":"692","severity":1,"message":"698","line":13,"column":10,"nodeType":"694","messageId":"695","endLine":13,"endColumn":17},{"ruleId":"699","severity":1,"message":"700","line":57,"column":6,"nodeType":"701","endLine":57,"endColumn":8,"suggestions":"702"},{"ruleId":"692","severity":1,"message":"703","line":4,"column":8,"nodeType":"694","messageId":"695","endLine":4,"endColumn":12},{"ruleId":"692","severity":1,"message":"704","line":5,"column":8,"nodeType":"694","messageId":"695","endLine":5,"endColumn":13},{"ruleId":"692","severity":1,"message":"705","line":190,"column":9,"nodeType":"694","messageId":"695","endLine":190,"endColumn":30},{"ruleId":"692","severity":1,"message":"706","line":185,"column":5,"nodeType":"694","messageId":"695","endLine":185,"endColumn":15},{"ruleId":"692","severity":1,"message":"707","line":186,"column":5,"nodeType":"694","messageId":"695","endLine":186,"endColumn":12},{"ruleId":"708","severity":1,"message":"709","line":249,"column":17,"nodeType":"710","messageId":"711","endLine":249,"endColumn":24},{"ruleId":"708","severity":1,"message":"709","line":291,"column":17,"nodeType":"710","messageId":"711","endLine":291,"endColumn":24},{"ruleId":"692","severity":1,"message":"712","line":81,"column":9,"nodeType":"694","messageId":"695","endLine":81,"endColumn":18},{"ruleId":"692","severity":1,"message":"706","line":205,"column":5,"nodeType":"694","messageId":"695","endLine":205,"endColumn":15},{"ruleId":"692","severity":1,"message":"707","line":206,"column":5,"nodeType":"694","messageId":"695","endLine":206,"endColumn":12},{"ruleId":"692","severity":1,"message":"713","line":5,"column":3,"nodeType":"694","messageId":"695","endLine":5,"endColumn":12},{"ruleId":"692","severity":1,"message":"714","line":38,"column":11,"nodeType":"694","messageId":"695","endLine":38,"endColumn":16},{"ruleId":"692","severity":1,"message":"713","line":5,"column":3,"nodeType":"694","messageId":"695","endLine":5,"endColumn":12},{"ruleId":"692","severity":1,"message":"714","line":39,"column":11,"nodeType":"694","messageId":"695","endLine":39,"endColumn":16},{"ruleId":"692","severity":1,"message":"715","line":2,"column":22,"nodeType":"694","messageId":"695","endLine":2,"endColumn":30},{"ruleId":"692","severity":1,"message":"716","line":13,"column":9,"nodeType":"694","messageId":"695","endLine":13,"endColumn":12},{"ruleId":"692","severity":1,"message":"717","line":14,"column":9,"nodeType":"694","messageId":"695","endLine":14,"endColumn":13},{"ruleId":"692","severity":1,"message":"718","line":84,"column":10,"nodeType":"694","messageId":"695","endLine":84,"endColumn":26},{"ruleId":"692","severity":1,"message":"719","line":3,"column":10,"nodeType":"694","messageId":"695","endLine":3,"endColumn":21},{"ruleId":"692","severity":1,"message":"720","line":34,"column":11,"nodeType":"694","messageId":"695","endLine":34,"endColumn":16},{"ruleId":"692","severity":1,"message":"718","line":75,"column":10,"nodeType":"694","messageId":"695","endLine":75,"endColumn":26},{"ruleId":"692","severity":1,"message":"721","line":13,"column":3,"nodeType":"694","messageId":"695","endLine":13,"endColumn":15},{"ruleId":"692","severity":1,"message":"722","line":37,"column":8,"nodeType":"694","messageId":"695","endLine":37,"endColumn":16},{"ruleId":"692","severity":1,"message":"723","line":433,"column":13,"nodeType":"694","messageId":"695","endLine":433,"endColumn":15},{"ruleId":"692","severity":1,"message":"724","line":512,"column":9,"nodeType":"694","messageId":"695","endLine":512,"endColumn":16},{"ruleId":"692","severity":1,"message":"718","line":517,"column":10,"nodeType":"694","messageId":"695","endLine":517,"endColumn":26},{"ruleId":"692","severity":1,"message":"718","line":586,"column":10,"nodeType":"694","messageId":"695","endLine":586,"endColumn":26},{"ruleId":"692","severity":1,"message":"721","line":29,"column":3,"nodeType":"694","messageId":"695","endLine":29,"endColumn":15},{"ruleId":"692","severity":1,"message":"718","line":411,"column":10,"nodeType":"694","messageId":"695","endLine":411,"endColumn":26},{"ruleId":"692","severity":1,"message":"725","line":61,"column":9,"nodeType":"694","messageId":"695","endLine":61,"endColumn":16},{"ruleId":"692","severity":1,"message":"726","line":84,"column":17,"nodeType":"694","messageId":"695","endLine":84,"endColumn":21},{"ruleId":"692","severity":1,"message":"720","line":84,"column":23,"nodeType":"694","messageId":"695","endLine":84,"endColumn":28},{"ruleId":"692","severity":1,"message":"722","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":16},{"ruleId":"692","severity":1,"message":"718","line":21,"column":10,"nodeType":"694","messageId":"695","endLine":21,"endColumn":26},{"ruleId":"692","severity":1,"message":"718","line":84,"column":10,"nodeType":"694","messageId":"695","endLine":84,"endColumn":26},{"ruleId":"692","severity":1,"message":"727","line":38,"column":9,"nodeType":"694","messageId":"695","endLine":38,"endColumn":18},{"ruleId":"692","severity":1,"message":"728","line":125,"column":9,"nodeType":"694","messageId":"695","endLine":125,"endColumn":16},{"ruleId":"692","severity":1,"message":"729","line":133,"column":11,"nodeType":"694","messageId":"695","endLine":133,"endColumn":26},{"ruleId":"692","severity":1,"message":"723","line":189,"column":35,"nodeType":"694","messageId":"695","endLine":189,"endColumn":37},{"ruleId":"692","severity":1,"message":"729","line":29,"column":11,"nodeType":"694","messageId":"695","endLine":29,"endColumn":26},{"ruleId":"692","severity":1,"message":"728","line":87,"column":9,"nodeType":"694","messageId":"695","endLine":87,"endColumn":16},{"ruleId":"692","severity":1,"message":"729","line":94,"column":11,"nodeType":"694","messageId":"695","endLine":94,"endColumn":26},{"ruleId":"692","severity":1,"message":"723","line":140,"column":35,"nodeType":"694","messageId":"695","endLine":140,"endColumn":37},{"ruleId":"692","severity":1,"message":"730","line":142,"column":10,"nodeType":"694","messageId":"695","endLine":142,"endColumn":19},{"ruleId":"692","severity":1,"message":"731","line":17,"column":23,"nodeType":"694","messageId":"695","endLine":17,"endColumn":37},{"ruleId":"699","severity":1,"message":"732","line":39,"column":6,"nodeType":"701","endLine":39,"endColumn":24,"suggestions":"733"},{"ruleId":"692","severity":1,"message":"725","line":223,"column":9,"nodeType":"694","messageId":"695","endLine":223,"endColumn":16},{"ruleId":"692","severity":1,"message":"734","line":229,"column":11,"nodeType":"694","messageId":"695","endLine":229,"endColumn":22},{"ruleId":"692","severity":1,"message":"735","line":30,"column":8,"nodeType":"694","messageId":"695","endLine":30,"endColumn":23},{"ruleId":"692","severity":1,"message":"736","line":31,"column":8,"nodeType":"694","messageId":"695","endLine":31,"endColumn":26},{"ruleId":"692","severity":1,"message":"725","line":97,"column":9,"nodeType":"694","messageId":"695","endLine":97,"endColumn":16},{"ruleId":"692","severity":1,"message":"725","line":226,"column":9,"nodeType":"694","messageId":"695","endLine":226,"endColumn":16},{"ruleId":"692","severity":1,"message":"734","line":232,"column":11,"nodeType":"694","messageId":"695","endLine":232,"endColumn":22},{"ruleId":"692","severity":1,"message":"718","line":80,"column":10,"nodeType":"694","messageId":"695","endLine":80,"endColumn":26},{"ruleId":"692","severity":1,"message":"718","line":80,"column":10,"nodeType":"694","messageId":"695","endLine":80,"endColumn":26},{"ruleId":"692","severity":1,"message":"718","line":74,"column":10,"nodeType":"694","messageId":"695","endLine":74,"endColumn":26},{"ruleId":"692","severity":1,"message":"721","line":13,"column":3,"nodeType":"694","messageId":"695","endLine":13,"endColumn":15},{"ruleId":"692","severity":1,"message":"722","line":22,"column":8,"nodeType":"694","messageId":"695","endLine":22,"endColumn":16},{"ruleId":"692","severity":1,"message":"718","line":80,"column":10,"nodeType":"694","messageId":"695","endLine":80,"endColumn":26},{"ruleId":"692","severity":1,"message":"722","line":22,"column":8,"nodeType":"694","messageId":"695","endLine":22,"endColumn":16},{"ruleId":"692","severity":1,"message":"718","line":82,"column":10,"nodeType":"694","messageId":"695","endLine":82,"endColumn":26},{"ruleId":"692","severity":1,"message":"737","line":7,"column":10,"nodeType":"694","messageId":"695","endLine":7,"endColumn":24},{"ruleId":"692","severity":1,"message":"738","line":7,"column":26,"nodeType":"694","messageId":"695","endLine":7,"endColumn":33},{"ruleId":"692","severity":1,"message":"739","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":20},{"ruleId":"692","severity":1,"message":"740","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":12},{"ruleId":"692","severity":1,"message":"713","line":11,"column":8,"nodeType":"694","messageId":"695","endLine":11,"endColumn":17},{"ruleId":"692","severity":1,"message":"741","line":12,"column":8,"nodeType":"694","messageId":"695","endLine":12,"endColumn":18},{"ruleId":"692","severity":1,"message":"742","line":13,"column":10,"nodeType":"694","messageId":"695","endLine":13,"endColumn":14},{"ruleId":"692","severity":1,"message":"743","line":14,"column":10,"nodeType":"694","messageId":"695","endLine":14,"endColumn":16},{"ruleId":"692","severity":1,"message":"744","line":16,"column":10,"nodeType":"694","messageId":"695","endLine":16,"endColumn":12},{"ruleId":"692","severity":1,"message":"745","line":16,"column":14,"nodeType":"694","messageId":"695","endLine":16,"endColumn":17},{"ruleId":"692","severity":1,"message":"746","line":16,"column":19,"nodeType":"694","messageId":"695","endLine":16,"endColumn":28},{"ruleId":"692","severity":1,"message":"747","line":17,"column":10,"nodeType":"694","messageId":"695","endLine":17,"endColumn":21},{"ruleId":"692","severity":1,"message":"748","line":19,"column":8,"nodeType":"694","messageId":"695","endLine":19,"endColumn":23},{"ruleId":"692","severity":1,"message":"749","line":22,"column":8,"nodeType":"694","messageId":"695","endLine":22,"endColumn":18},{"ruleId":"692","severity":1,"message":"725","line":83,"column":9,"nodeType":"694","messageId":"695","endLine":83,"endColumn":16},{"ruleId":"692","severity":1,"message":"697","line":11,"column":10,"nodeType":"694","messageId":"695","endLine":11,"endColumn":14},{"ruleId":"692","severity":1,"message":"750","line":11,"column":16,"nodeType":"694","messageId":"695","endLine":11,"endColumn":19},{"ruleId":"692","severity":1,"message":"751","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":20},{"ruleId":"692","severity":1,"message":"752","line":11,"column":8,"nodeType":"694","messageId":"695","endLine":11,"endColumn":15},{"ruleId":"692","severity":1,"message":"753","line":12,"column":8,"nodeType":"694","messageId":"695","endLine":12,"endColumn":21},{"ruleId":"692","severity":1,"message":"729","line":47,"column":11,"nodeType":"694","messageId":"695","endLine":47,"endColumn":26},{"ruleId":"692","severity":1,"message":"728","line":114,"column":9,"nodeType":"694","messageId":"695","endLine":114,"endColumn":16},{"ruleId":"692","severity":1,"message":"729","line":121,"column":11,"nodeType":"694","messageId":"695","endLine":121,"endColumn":26},{"ruleId":"692","severity":1,"message":"723","line":167,"column":15,"nodeType":"694","messageId":"695","endLine":167,"endColumn":17},{"ruleId":"699","severity":1,"message":"754","line":111,"column":6,"nodeType":"701","endLine":111,"endColumn":8,"suggestions":"755"},{"ruleId":"692","severity":1,"message":"718","line":154,"column":10,"nodeType":"694","messageId":"695","endLine":154,"endColumn":26},{"ruleId":"692","severity":1,"message":"756","line":16,"column":8,"nodeType":"694","messageId":"695","endLine":16,"endColumn":24},{"ruleId":"692","severity":1,"message":"757","line":17,"column":8,"nodeType":"694","messageId":"695","endLine":17,"endColumn":26},{"ruleId":"692","severity":1,"message":"758","line":69,"column":7,"nodeType":"694","messageId":"695","endLine":69,"endColumn":17},{"ruleId":"692","severity":1,"message":"728","line":70,"column":9,"nodeType":"694","messageId":"695","endLine":70,"endColumn":16},{"ruleId":"692","severity":1,"message":"729","line":77,"column":11,"nodeType":"694","messageId":"695","endLine":77,"endColumn":26},{"ruleId":"692","severity":1,"message":"759","line":122,"column":7,"nodeType":"694","messageId":"695","endLine":122,"endColumn":17},{"ruleId":"692","severity":1,"message":"723","line":123,"column":15,"nodeType":"694","messageId":"695","endLine":123,"endColumn":17},{"ruleId":"699","severity":1,"message":"760","line":162,"column":6,"nodeType":"701","endLine":162,"endColumn":32,"suggestions":"761"},{"ruleId":"692","severity":1,"message":"762","line":26,"column":10,"nodeType":"694","messageId":"695","endLine":26,"endColumn":14},{"ruleId":"692","severity":1,"message":"763","line":26,"column":3,"nodeType":"694","messageId":"695","endLine":26,"endColumn":14},{"ruleId":"692","severity":1,"message":"764","line":680,"column":10,"nodeType":"694","messageId":"695","endLine":680,"endColumn":17},{"ruleId":"692","severity":1,"message":"722","line":14,"column":8,"nodeType":"694","messageId":"695","endLine":14,"endColumn":16},{"ruleId":"692","severity":1,"message":"718","line":80,"column":10,"nodeType":"694","messageId":"695","endLine":80,"endColumn":26},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'analytics' is defined but never used.","'auth' is defined but never used.","'setFAQs' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["765"],"'user' is defined but never used.","'Login' is defined but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'cornerSize' is assigned a value but never used.","'picSize' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'container' is assigned a value but never used.","'CardMedia' is defined but never used.","'image' is assigned a value but never used.","'useTheme' is defined but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","'isStartedFilling' is assigned a value but never used.","'EditorState' is defined but never used.","'value' is assigned a value but never used.","'deleteObject' is defined but never used.","'RichText' is defined but never used.","'id' is assigned a value but never used.","'classes' is assigned a value but never used.","'history' is assigned a value but never used.","'name' is assigned a value but never used.","'updateRow' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'enqueueSnackbar' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'isSubmitted'. Either include it or remove the dependency array.",["766"],"'unsubscribe' is assigned a value but never used.","'AddDownloadForm' is defined but never used.","'UpdateDownloadForm' is defined but never used.","'CardActionArea' is defined but never used.","'Divider' is defined but never used.","'DeleteDialog' is defined but never used.","'Card' is defined but never used.","'IconButton' is defined but never used.","'Edit' is defined but never used.","'Delete' is defined but never used.","'db' is defined but never used.","'doc' is defined but never used.","'deleteDoc' is defined but never used.","'useSnackbar' is defined but never used.","'EditServiceForm' is defined but never used.","'UsersTable' is defined but never used.","'ref' is defined but never used.","'ActionButton' is defined but never used.","'TimeAgo' is defined but never used.","'ActionButton3' is defined but never used.","React Hook React.useLayoutEffect has missing dependencies: 'data?.createdAt', 'data?.designation', 'data?.email', 'data?.firstname', 'data?.fullname', 'data?.lastname', 'data?.name', 'data?.phone', 'data?.request', 'data?.role', 'data?.subject', and 'type'. Either include them or remove the dependency array.",["767"],"'CustomDialogEdit' is defined but never used.","'CustomDialogDelete' is defined but never used.","'UpdateView' is assigned a value but never used.","'DeleteView' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'location.state?.id'. Either include it or remove the dependency array.",["768"],"'faci' is assigned a value but never used.","'updateEmail' is defined but never used.","'isError' is assigned a value but never used.",{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},"Update the dependencies array to be: [dispatch]",{"range":"777","text":"778"},"Update the dependencies array to be: [isStartedFilling, isSubmitted]",{"range":"779","text":"780"},"Update the dependencies array to be: [data?.createdAt, data?.designation, data?.email, data?.firstname, data?.fullname, data?.lastname, data?.name, data?.phone, data?.request, data?.role, data?.subject, type]",{"range":"781","text":"782"},"Update the dependencies array to be: [deptFunctions, functions, location.state?.id]",{"range":"783","text":"784"},[1880,1882],"[dispatch]",[1435,1453],"[isStartedFilling, isSubmitted]",[3767,3769],"[data?.createdAt, data?.designation, data?.email, data?.firstname, data?.fullname, data?.lastname, data?.name, data?.phone, data?.request, data?.role, data?.subject, type]",[4396,4422],"[deptFunctions, functions, location.state?.id]"]